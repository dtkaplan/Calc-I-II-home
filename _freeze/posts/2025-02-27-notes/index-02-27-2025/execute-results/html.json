{
  "hash": "050fc633624ac3e56b69497c58733245",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: DTK\ndate: 2025-02-27\nnumber-offset: 19\nformat: live-html\n---\n\n\n\n\n\n\n# 2025-02-27 class notes\n\n\n\n[Ch 21 Activities](https://dtkaplan.github.io/MC-Workbook/21-exercises.html) 10\n\n\nAssume that the boy, the center of the ball, and the center of the hoop in @fig-basketball-shot are all in the same plane, as required for a swish shot. Assume as well that when the ball left the boy's hands it was in the position now occupied by the boy's head and that there was no spin on the ball. \n\n> Will the ball swish through the basket?\n\n::: {#fig-basketball-shot}\n![](www/basketball-shot.png)\n\nA drawing from a children's song book, *I'm still here in the bathtub*, illustrated by David Catrow. (Scholastic, Inc. 2004)\n:::\n\n## French curves\n\n![](www/french-curves.png)\n\n## Formula for curvature $K(x)$ of a function $f()$\n\n$$ K(x) = \\frac{\\partial_{xx} f(x)}{(1 + \\partial_x f(x)^2)^{2/3}}$$\n\nCurvature is 1/radius of the inscribed circle.\n\n\n[Ch 21 Activities](https://dtkaplan.github.io/MC-Workbook/21-exercises.html), 8, 9\n\n\n\n\n$$ r = \\frac{(1 - \\partial_x f(x)^2)^{2/3}}{\\partial_{xx} f(x)}$$\n\n## Specifying the curvature of a highway ramp\n\n\nHighway entrance/exit ramps [from textbook](https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Differentiation/21-concavity.html#thm-highway-curves)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_design <- function(x, xb1 = 1, xb2 = 3, A=.02) {\n  ifelse(\n    x < 0, \n    0, \n    ifelse(\n      x <= xb1, \n      A*x/xb1,\n      ifelse(\n        x <= xb2, A,\n        ifelse(x < xb2+xb1,\n               A * (1 - (x-xb2)/xb1),\n               0)\n      )\n    )\n  )\n}\n  \nslice_plot(K_design(x) ~ x, domain(x = -1:5), npts = 503)\n```\n\n::: {.cell-output-display}\n![](index-02-27-2025_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nh <- 0.01\nstate <- list(n = 0, x0 = 0, x1 = h, y0=0, y1 = h, yprime = 1)\n\n\nnext_state <- function(state, h = 0.1, xb1 = 1, xb2 = 3, A = 2) {\n  with(state, {\n    n <- n + 1\n    K <- K_design(x1, xb1 = xb1, xb2 = xb2, A = A) \n    x0 <- x1\n    x1 <- x1 + h\n    y2 <- 2*y1 - y0 # old y1 + (y1-x0)\n    ypp <- abs((1 + ((y1-y0)/(x1 - x0))^2))^(2/3) * K\n    y2 <- y2 - h^2 * ypp \n    list(n=n, x0=x0, x1=x1, y0=y1, y1=y2, yprime=ypp, K=K)\n  })\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nh = 0.1\nstate <- list(n = 0, x0 = 0, x1 = h, y0=0, y1 = h, yprime = 1, K =0)\naccumulated_state <- as.data.frame(state)\nfor (k in 1:1000) {\n  state <- next_state(state, h=h, A = 0.02, xb1 = 10, xb2 = 90)\n  accumulated_state <- bind_rows(accumulated_state, state)\n}\ngf_point(y0 ~ x0, data = accumulated_state) |>\n  gf_refine(coord_fixed()) \n```\n\n::: {.cell-output-display}\n![](index-02-27-2025_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\naccumulated_state <- as.data.frame(state)\n\n}\nbind_rows(accumulated_state, state)\n```\n",
    "supporting": [
      "index-02-27-2025_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}