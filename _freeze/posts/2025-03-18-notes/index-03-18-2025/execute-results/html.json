{
  "hash": "cd32dda1d167dc74a78d17a92a164d42",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: DTK\ndate: 2025-03-18\nnumber-offset: 27\nformat: live-html\n---\n\n\n\n\n\n# 2025-03-18 class notes\n\nPlan for this week:\n\n- I've got topics for today and Thursday\n- 30 minute quiz on Thursday\n- Assignment for Friday\n    i. Send evaluation answers to me via a friend's email\n    ii. Write down on paper three things that give you the most trouble.\n\n\n## Complex exponentials\n\n$e^{i\\omega t}$ as a replacement for $sin(\\omega t)$.\n\n- 2nd derivative is proportional to negative itself.\n- Differentiation is a matter of multiplying by $i \\omega$.\n- Multiplication of one sine by another is akin (sort of) to advancing the argument.\n\nModeling a pendulum.\n\nASK: What do we know about the acceleration along the arc of swing.\n\ni. It's zero at an angle of zero.\nii. It's an odd function, meaning $f(-\\theta) = - f(\\theta)$\niii. We can expand this out as a Taylor polynomial: first and third-order terms.\n\n**Equation of motion:**\n\n$$\\partial_{tt} \\theta(t) = - \\omega^2 \\theta(t)$$\nSubstitute in $a \\sin(\\omega t)$.\n\nNOW, add in air resistence. What do we know about air resistence?\n\ni. It's a function of speed\nii. It's odd\niii. It's nil when the velocity is zero.\n\n**Equation of motion**\n\n$$\\partial_{tt} \\theta(t) = -\\omega^2 \\theta(t) + \\nu \\partial_t \\theta(t)$$\n\nPlug in $\\sin(\\omega t)$: doesn't quite work.\n\nPlug in $e^{i k t}$ giving\n\n$$- k^2 e^{ikt} = - \\omega^2 e^{ikt} + i \\nu \\omega k e^{ikt}$$\nor\n\n$$\\omega^2 -i \\nu \\omega - k^2 = 0$$\n\n## Another Taylor expansion\n\nExpand $\\ln(x + 1)$ around $x=0$.\n\nOne team writes the derivatives, the other team sets up the polynomial waiting for the derivatives. \n\nImplement on the computer.\n\n```{webr-r}\n\n```\n\n\n## How high a power do I really need for the polynomial?\n\n## Exponential\n```{webr-r}\nmyexp <- function(x) {\n  if (x < 0) 1/myexp(-x)\n  else {\n    power <- 0\n    # replace this with recursion\n    while(x > 0.01) {\n      x <- x / 2\n      power <- power + 1\n    }\n    exp_tailor(x)^(2^power)\n  }\n}\n\n\nexp_tailor <- function(x){\n  1 + x + x^2/2 + x^3/6 #+ x^4/24\n}\n```\n\n## Sinusoid\n\n```{webr-r}\nmysin <-function(x) {\n  x <- x %% (2*pi)\n  if (x < 0) -mysin(-x)\n  else if (x > pi) - mysin(x - pi)\n  else if (x > pi/2) mysin(pi - x)\n  else if (x > pi/4) cos_taylor(x - pi/2)\n  else sin_taylor(x)\n}\n\nsin_taylor <- function(x) {\n  x - x^3/6. + x^5/120. - x^7/5040.\n}\n\ncos_taylor <- function(x) {\n  1 - x^2/2 + x^4/24 - x^6/720\n}\n\n```\n\n### Logarithm\n\nIt's easiest to write the Taylor series of $\\log(1+x)$ around $x = 0$\n\n- Find successive derivatives of $\\log(1+x)$ and evaluate at $x=0$. It becomes very easy.\n\n- Turn these into the multipliers of a Taylor polynomial by dividing the $n$^th^ derivative by $n!$\n\n- Use this polynomial to calculate $\\log(1+x)$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogxp1_taylor <- function(x){\n  x - x^2/2 + x^3/3 - x^4/4  + x^5/5 #- x^6/6 + x^7/7 - x^8/8\n}\n```\n:::\n\n\n\nWe can then write `log_taylor(x)` as\n\n```{webr-r}\nlog_taylor <- function(x) logxp1_taylor(x + 1)\n```\n\nTry this out for `x=2` and observe the bad answer compared to `log(3)`. The answer gets even worse for bigger `x`. What's wrong? Convergence.\n\nNow use manipulations to squeeze `x` closer to `.\n\n```{webr-r}\nlog_taylor <- function(x) {\n  if (x < 0) return(NaN)\n  if (x < 1) return(-log_taylor(1/x))\n  if (x > 1.0001) return(2*log_taylor(sqrt(x)))\n  if (x > 2) return(log_taylor(x/2) + 0.693147180559945)\n  logxp1_taylor(x - 1)\n}\n\n```\n\n## A least-squares approach.\n\nEvaluate $\\log(x + 1)$ at a few points.\n\n```{webr-r}\nPts <- \n  tibble::tibble(x = seq(0, .01, length=1000)) |>\n  mutate(y = log(x + 1))\n \napprox <- lm(y ~ x + I(x^2), data = Pts) |> makeFun()\n\nslice_plot(approx(x) - log(x+1) ~ x, domain(x = 0:0.01)) |> \n  slice_plot(logxp1_taylor(x) - log(x+1) ~ x, \n             color = \"blue\", \n             linewidth = 4, alpha = 0.3) \n```\n\n## Modeling project: Speed of a satellite\n\n[Write-up from Workbook](https://dtkaplan.github.io/MC-Workbook/Block-1-models.html#project-2-orbit-dimensions)\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}