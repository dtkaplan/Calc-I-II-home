{
  "hash": "13019d7630c118e4f19068125736fa3a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: DTK\ndate: 2025-04-25\nnumber-offset: 41\nformat: live-html\nwebr:\n  channel-type: 'automatic'\n  repos: [\"https://dtkaplan.r-universe.dev\"]\n  packages: ['ggplot2', 'mosaicCalc', \"LSTbook\" ]\nfilters:\n  - webr\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.callout-tip collapse=true}\n## Background software\n```{webr-r}\n#| autorun: true\n#| context: output\n# Drawing vectors and matrices\n\ndraw_matrix <- function(M) {\n  image(1:ncol(M), 1:nrow(M), t(M[nrow(M):1, ]),\n        col = colorspace::diverging_hcl(\n          15, h = c(180, 50), c = 80,\n          l = c(20, 95), power = c(0.7, 1.3)),\n        axes = FALSE,\n        useRaster = TRUE)\n}\n\nsomevecs <- tibble::tribble(\n  ~ rootx, ~ rooty, ~ headx, ~ heady, ~ color, ~ name,\n  0, 0, -2, 4, \"blue\", \"u\",\n  1, -2, 5, -3, \"green\", \"v\",\n  -1, -1, -4, -1, \"orange\", \"w\",\n  1, 0, 4, 3, \"brown\", \"x\",\n  0, -2, 3, -3, \"salmon\", \"y\",\n  0, 0, 4, 3, \"magenta\", \"b1\",\n  0, 0, -3, 2, \"magenta\", \"b2\",\n) |>\n  dplyr::mutate(labelx = (rootx + headx)/2,\n         labely = (2*rooty + heady)/3)\nsolve_for <- function(vecnames) {\n  somevecs |>\n    dplyr::filter(name %in% vecnames) |>\n    gf_segment(rooty + heady ~ rootx + headx,\n               arrow = grid::arrow(length=unit(0.15, \"inches\"), type=\"closed\"),\n               color = ~ color, linewidth=2) |>\n    gf_label(labely ~ labelx, label= ~ name, color = ~ color, size=3) |>\n    gf_refine(scale_color_identity(),\n              scale_y_continuous(limits=c(-5,5),\n                                 breaks=(-5):5),\n              scale_x_continuous(limits=c(-5,5),\n                                 breaks=(-5):5),\n              coord_fixed()) |>\n    gf_labs(x=\"\", y = \"\")\n}\n\n\n# Simple vector/matrix operations\n\nvec <- function(...) {\n  vals <- list(...) |> unlist()\n  matrix(vals, ncol=1)\n}\n\nrvec <- function(first, ..., rfun=rnorm) {\n  dots <- c(first, list(...)) |> unlist()\n  if (length(dots) == 1) {\n    dots <- rfun(dots[[1]])\n  }\n\n  vec(dots)\n}\n\n\n\n\nveclen <- function(v) sqrt(v %dot% v)\nunitvec <- function(vec) vec/length(vec)\ncang <- function(v, w) {(v %dot% w) / (veclen(v) * veclen(w))}\nmakeQ <- function(...) {\n  dots <- list(...) |> bind_cols()\n  qr.Q(qr(dots))\n}\n\ncheck_for_svd <- function(S) {\n  if (inherits(S, \"matrix\")) S <- svd(S)\n  if (!is.list(S) || !all(c(\"d\",\"v\", \"u\") %in% names(S)))\n    stop(\"Argument must be matrix or the SVD of a matrix.\")\n  S\n}\n\nrank_mat <- function(S, thresh = 0.01) {\n  S <- check_for_svd(S)\n  sum(S$d > S$d[1] * thresh)\n}\n\nrand_mat <- function(nrow=3, ncol=6, rank = pmin(nrow, ncol)) {\n  M <- matrix(runif(nrow*ncol), nrow = nrow, ncol = ncol)\n  if (rank >= nrow || rank >= ncol) {\n   M\n  } else {\n    approx_mat(S, n=sample(pmin(rank, nrow, ncol)))\n  }\n}\n\n# Grab rank 1 matrix from SVD\napprox_mat <- function(S, n=1, order = 0) { # input a matrix or the SVD of a matrix\n  S <- check_for_svd(S)\n  if (order > 0) {\n    inds1 <- order(c(S$u[,order]))\n    inds2 <- order(c(S$v[,order]))\n  } else {\n    inds1 <- 1:nrow(S$u)\n    inds2 <- 1:nrow(S$v)\n  }\n  partial <- 0 # initial value\n  for (k in n) {\n    partial <- partial +  S$d[k] * S$u[inds1,k, drop = FALSE] %*% t(S$v[inds2,k, drop = FALSE])\n  }\n\n  partial\n}\n\npretty_mat <- function(M) {\n  inds1 <- order(rowSums(M))\n  inds2 <- order(colSums(M))\n  M[inds1, inds2]\n}\n\n#' Generate a matrix whose elements are selected randomly from a set\n#' of specified values.\n#' @param nrow number of rows for the matrix produced\n#' @param ncol number of columns\n#' @param values the set from which to draw (randomly) the\n#' values in the matrix. Default: integers -9 to 9\nvalues_mat <- function(nrow=4, ncol=3, values = -9:9) {\n  matrix(sample(values, size = nrow * ncol, replace = TRUE),\n         nrow = nrow, ncol=ncol)\n}\n\n# Typeset matrices in LaTeX (for assignments and such)\nLmat <- function(nr, nc) {\n  values_mat(nr, nc) |> latex_helper()\n}\nlatex_helper <- function(matr) {\n  printmrow <- function(x) {\n\n    cat(cat(x,sep=\" & \"),\"\\\\\\\\ \\n\")\n  }\n\n  cat(\"\\\\left(\\\\begin{array}{r}\",\"\\n\")\n  body <- apply(matr,1,printmrow)\n  cat(\"\\\\end{array}\\\\right)\")\n}\n\n# Fourier transform stuff\n# sigfft shows only the left-hand side of the FFT\n# isigfft restores it by adding back the right-hand side then inverse FFT.\n\nifft <- function(x) fft(x/length(x), inverse = TRUE)\n\nsigfft <- function(x) {\n  tmp <- fft(x)\n  nyquist <- round((length(x) + 1.1 - (length(x) %% 2))/2)\n  tmp[1:nyquist]\n}\nisigfft <- function(Lfftx) {\n  tmp <- if (length(Lfftx) %% 2) {\n    # odd length\n    c(Lfftx, Conj(rev(Lfftx[c(-1, -length(Lfftx))])))\n\n  } else {\n    c(Lfftx, Conj(rev(Lfftx[-1])))\n  }\n  ifft(tmp) |> Re()\n}\n\nsquash_small <- function(x, tol=1e-9) {\n  r1 <- Re(x)\n  r1 <- ifelse(abs(r1) < tol, 0, r1)\n  c1 <- Im(x)\n  c1 <- ifelse(abs(c1) < tol, 0, c1)\n  # return real part if all of imaginary part is small\n  if (all(c1 == 0)) r1\n  else r1 + 1i * c1\n}\n\n# Plot the amplitude spectrum versus frequency\nsig_amp_spec <- function(x, sampfreq=100) {\n  Tmp <- tibble::tibble(\n    amp = abs(sigfft(x)),\n    frequency = seq(0, sampfreq/2, length = length(amp)))\n  Tmp |>\n    gf_segment(0 + amp ~ frequency + frequency, alpha = 0.2) |>\n    gf_point(amp ~ frequency, color = \"blue\", size = 0.5)\n}\n\n```\n:::\n\n## Dimension example\n\n\n\n\n---\nid: \"Differential-orbit\"\nwritten-by: \"Daniel Kaplan\"\n---\n\n\n\n::: {#exr-differential-orbit}\n\nEarly in Math 141Z we undertook to figure out how fast a satellite travels. As you recall, we measured the $r$, the orbit height *from the center of the Earth*. Assuming a circular orbit (which is not necessarily a good assumption) the total path length of an orbit is $2 \\pi r$. We also assumed that the acceleration of the satellite due to gravity is 9.8 m/s^2 , the value on the Earth's surface. (And a reasonably good approximation to the value at a height of, say, 100 mi above the surface.)\n\nThen we asked, how large is the centripetal acceleration needed to keep a satellite in orbit of radius $r$ at velocity $v$. We used dimensional analysis to say that $a = v^2/r$, a formula that is dimensionally consistent. \n\nPart A\n: Demonstrate that $a = v^2/r$ is dimensionally consistent.\n\n<script type=\"text/javascript\">\n      //save entered info\n      document.addEventListener('DOMContentLoaded', function() {\n      console.log('Adding event listener for differential-orbit-A.');\n      const form = document.getElementById('differential-orbit-A');\n      form.addEventListener(\"input\", function () {\n        var todo = document.getElementById('differential-orbit-A').value;\n        localStorage.setItem(\"differential-orbit-A-contents\", todo);\n        console.log(\"Saving value of differential-orbit-A.\")\n      }, false);\n\n      //on page load, read in the old value\n      const savedValue = localStorage.getItem(\"differential-orbit-A-contents\");\n      if (savedValue) {\n        document.getElementById('differential-orbit-A').value = savedValue;\n      }\n})\n</script>\n<textarea id=\"differential-orbit-A\" name=\"differential-orbit-A\" class=\"devoirs-text\" style=\"font-family: monospace, monospace;\" rows=\"Answer for Part A\" cols=\"50\" placeholder=\"Type here. (ID differential-orbit-A)\"></textarea>\n\n\nPart B\n: Knowing that $a \\approx 9.8$ m/s^2 , and specifying $r = 4050mi$ (that is, 100 mi above the surface of the Earth), we solved for $v$: $$v = \\sqrt{a \\times r} = \\sqrt{9.8 \\text{m}\\, \\text{s}^{-2} \\times 4050 \\text{mi}} = 191.5 \\sqrt{\\text{m}\\cdot\\text{mi}\\strut}\\ \\text{s}^{-1}$$\n\nWhat is the numerical value of $\\sqrt{\\text{m}\\cdot\\text{mi}\\strut}$ expressed in miles?\n\n\n\n::: {.cell show_hints='true'}\n <span>\n  <small style=\"color: grey;\" id=\"differential-orbit-1-hintarea\" class=\"hintarea\">differential-orbit-1</small>\n  <form id=\"differential-orbit-1-form\">\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$\\sqrt{160 ... = 40.12 m$\" id=\"differential-orbit-1-1\" w=\"19\" name=\"differential-orbit-1\" hint=\"You were asked for the value of $\\sqrt{\\text{m}\\cdot\\text{mi}\\strut}$ in miles, not meters.\" show_hints=\"TRUE\"/>\n      $\\sqrt{1609.34 \\text{m}^2} = 40.12 m$\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$\\sqrt{40. ... \\text{mi}$\" id=\"differential-orbit-1-2\" w=\"3\" name=\"differential-orbit-1\" hint=\"But if you think about the area of 1 meter times 1 mile, it is much, much less than a square mile. The square root of a square mile is 1 mile. So the true answer must be much less than that.\" show_hints=\"TRUE\"/>\n      $\\sqrt{40.12 \\text{mi}^2} \\approx 6.33 \\text{mi}$\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$\\sqrt{0.0 ... \\text{mi}$\" id=\"differential-orbit-1-3\" w=\"35\" name=\"differential-orbit-1\" hint=\"right-o roughly 1/1600, which makes sense considering there are roughly 1600 m in a mile.\" show_hints=\"TRUE\"/>\n      $\\sqrt{0.000621371 \\text{mi}^2} \\approx 0.025 \\text{mi}$\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"It is craz ... m\\strut}$.\" id=\"differential-orbit-1-4\" w=\"7\" name=\"differential-orbit-1\" hint=\"Indeed, there is no such thing as $\\sqrt{1 m\\strut}$. But that is  irrelevant here because the contents of the square-root are a product of 1 m $\\times$ 1 mile, which has dimension L^2 Taking the squareroot of a quantity with dimension L^2 gives a quantity with dimension L, a perfectly everyday affair.\" show_hints=\"TRUE\"/>\n      It is crazy to take the square root of a length. There is no such thing as $\\sqrt{1 m\\strut}$.\n      \n    </p>\n    <input type=\"radio\" class=\"devoirs-mcq\" name=\"differential-orbit-1\" id=\"differential-orbit-1.null\" style=\"display: none;\" w=\"skipped\" checked=\"\"/>\n  </form>\n  <script type=\"text/javascript\">\ndocument.addEventListener('DOMContentLoaded', function() {\n      console.log('Adding event listener for differential-orbit-1.');\n      const form = document.getElementById('differential-orbit-1-form');\n      const radioButtons = form.querySelectorAll('input[type=\"radio\"]');\n\n      // Load saved value on page load\n      const savedValue = localStorage.getItem('differential-orbit-1-choice');\n      if (savedValue) {\n        console.log(\"Restoring radio button values for differential-orbit-1.\");\n        radioButtons.forEach(radio => {\n          if (radio.value === savedValue) {\n            radio.checked = true;\n          }\n        });\n      }\n\n      // Save value on change\n      form.addEventListener('change', function(event) {\n        if (event.target.type === 'radio') {\n          console.log(\"Saving changed value for differential-orbit-1.\");\n          localStorage.setItem('differential-orbit-1-choice', event.target.value);\n        }\n      });\n    });\n</script>\n</span>\n:::\n\n\n\nPart C\n: Units aside, consider the formula $a = v^2/r$. It is dimensionally consistent, but how do we know that acceleration isn't twice or half or some other constant multiple of $v^2/r$? Now that we have tools from calculus, we can address this issue straight on.\n\n::: {#fig-centripetal.png}\n![](www/centripetal.png)\n\nThe figure shows a diagram of the situation. There is a satellite in circular orbit. (Earth hasn't been included in the diagram.) Annotating one point of the orbit is a vector, ${\\mathbf v}_1$, which represents the  velocity of the satellite at that point in the orbit. The velocity vector is tangent to the orbit itself; it is *instantaneous* velocity. One-hundred eighty degrees opposite ${\\mathbf v}_1$ is another velocity vector, ${\\mathbf v}_3$ that has the same length as ${\\mathbf v}_1$ but faces in exactly the opposite direction: ${\\mathbf v}_3 = -{\\mathbf v}_1$.\n:::\n\nThe change in the velocity vector over half the orbital time is simple: ${\\mathbf v}_3 - {\\mathbf v}_1 = {\\mathbf v}_3 + {\\mathbf v}_3 = 2 {\\mathbf v}_3$. \n\nNow calculus comes in: the change in velocity is the integral with respect to time of acceleration over the time to complete half an orbit. $$\\int_{t=\\text{start}}^{t=\\text{end}} {\\mathbf a}\\, dt = 2 {\\mathbf v}_3$$  \nWe can simplify by setting the \"start\" time to zero. The end time is how long it takes to complete half an orbit. This will be the distance covered divided by the speed. The half circumference of the orbit is $\\pi r$. The speed of the satellite is $|v|$. So the end time is $\\pi r/ v$.\n\nNow we will take a false step. (You may not see it as such yet, but heads up!) The acceleration is constant: the satellite is always a constant distance from the center of the Earth. That is the nature of circular orbits. So the integral is simple: \n\n$$\\int_{t=\\text{start}}^{t=\\text{end}} {\\mathbf a}\\, dt = \\int_{t=0}^{t=\\pi r /v} a\\, dt = a \\int_{t=0}^{t=\\pi r /v} dt = a \\pi r/v = 2v .$$\nThe rightmost equals relationship comes from our previous analysis of the change in velocity in half an orbit. Solving $a \\pi r/v = 2 v$ we get $$a = \\frac{2}{\\pi} \\frac{v^2}{r} \\neq \\frac{v^2}{r}$$\nThis half-an-orbit analysis gives a different answer for the relationship between acceleration and velocity than we used in the earlier calculation. At least one of them is wrong.\n\nWhere is the flaw in reasoning? First, although the magnitude of the acceleration is constant, the acceleration is a vector which is certainly not constant as the satellite moves through the orbit. And, being a vector, we need to keep track of the changing components of the vector. Referring to the diagram, only the \"horizontal\" component of the acceleration contributes to the change in velocity from point 1 to point 3, because that change is entirely horizontal. \n\nLook at an intermediate point between 1 and 3. The vector ${\\mathbf v}_2$ is shown at an angle $\\theta$ from the ${\\mathbf v}_1$. At point 2, the acceleration vector is directed (as always) toward the center of the orbit. The horizontal component of the acceleration vector is $a \\sin(\\theta)$, as you can see from the trigonometry of the situation. The previous integral should have been written in terms of the horizontal component of the acceleration:\n\n$$\\int_{t=0}^{t=\\pi r/v} |{\\mathbf a}|\\,\\sin(\\theta)\\, dt $$\nKeep in mind that $\\theta$ is a function of $t$. The relationship is $$\\theta = v t / r \\ \\ \\implies\\ \\ \\ d\\theta = \\frac{v}{r}dt$$  \nWe've written the differential of the relationship because we will substitute for $t$ and $dt$ to translate the integral to be solely in terms of $\\theta$:\n$$\\int_{\\theta=0}^{\\theta = \\pi} |{\\mathbf a}| \\sin(\\theta)\\frac{r}{v}\\, d \\theta = |{\\mathbf a}| \\frac{r}{v} \\int_{\\theta=0}^{\\theta = \\pi} \\sin(\\theta)\\, d \\theta$$\nThe integral involves one of the basic modeling functions, so you have already memorized the answer.\n\ni. What is $$\\int_{\\theta=0}^{\\theta = \\pi} \\sin(\\theta)\\, d \\theta \\ \\text{?}$$\n\n\n\n::: {.cell show_hints='true'}\n <span>\n  <small style=\"color: grey;\" id=\"differential-orbit-2-hintarea\" class=\"hintarea\">differential-orbit-2</small>\n  <form id=\"differential-orbit-2-form\">\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"0 \" id=\"differential-orbit-2-1\" w=\"7\" name=\"differential-orbit-2\" hint=\"Boo!\" show_hints=\"TRUE\"/>\n      0 \n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"2\" id=\"differential-orbit-2-2\" w=\"20\" name=\"differential-orbit-2\" hint=\"You&#39;ve got it!\" show_hints=\"TRUE\"/>\n      2\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$-\\cos(\\theta)$\" id=\"differential-orbit-2-3\" w=\"19\" name=\"differential-orbit-2\" hint=\"$-\\cos(\\theta)$ is the anti-derivative of $\\sin(\\theta)$, but we are asking for the value of a definite integral, so the answer you give should be a number.\" show_hints=\"TRUE\"/>\n      $-\\cos(\\theta)$\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$- \\pi \\co ... s(\\theta)$\" id=\"differential-orbit-2-4\" w=\"3\" name=\"differential-orbit-2\" hint=\"What&#39;s the $\\pi$ doing there?\" show_hints=\"TRUE\"/>\n      $- \\pi \\cos(\\theta)$\n      \n    </p>\n    <input type=\"radio\" class=\"devoirs-mcq\" name=\"differential-orbit-2\" id=\"differential-orbit-2.null\" style=\"display: none;\" w=\"skipped\" checked=\"\"/>\n  </form>\n  <script type=\"text/javascript\">\ndocument.addEventListener('DOMContentLoaded', function() {\n      console.log('Adding event listener for differential-orbit-2.');\n      const form = document.getElementById('differential-orbit-2-form');\n      const radioButtons = form.querySelectorAll('input[type=\"radio\"]');\n\n      // Load saved value on page load\n      const savedValue = localStorage.getItem('differential-orbit-2-choice');\n      if (savedValue) {\n        console.log(\"Restoring radio button values for differential-orbit-2.\");\n        radioButtons.forEach(radio => {\n          if (radio.value === savedValue) {\n            radio.checked = true;\n          }\n        });\n      }\n\n      // Save value on change\n      form.addEventListener('change', function(event) {\n        if (event.target.type === 'radio') {\n          console.log(\"Saving changed value for differential-orbit-2.\");\n          localStorage.setItem('differential-orbit-2-choice', event.target.value);\n        }\n      });\n    });\n</script>\n</span>\n:::\n\n\n\nii. Set $$|{\\mathbf a}| \\frac{r}{v}\\int_{\\theta=0}^{\\theta = \\pi} \\sin(\\theta)\\, d \\theta = 2 v$$ and solve for $a$. Which one of these is it?\n\n\n\n::: {.cell show_hints='true'}\n <span>\n  <small style=\"color: grey;\" id=\"differential-orbit-3-hintarea\" class=\"hintarea\">differential-orbit-3</small>\n  <form id=\"differential-orbit-3-form\">\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$a = 2 \\fr ... {v^2}{r}$ \" id=\"differential-orbit-3-1\" w=\"19\" name=\"differential-orbit-3\" hint=\"Incorrect choice.\" show_hints=\"TRUE\"/>\n      $a = 2 \\frac{v^2}{r}$ \n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$a = \\frac{v^2}{r}$\" id=\"differential-orbit-3-2\" w=\"16\" name=\"differential-orbit-3\" hint=\"Bingo!\" show_hints=\"TRUE\"/>\n      $a = \\frac{v^2}{r}$\n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$a = 4 \\fr ... {v^2}{r}$ \" id=\"differential-orbit-3-3\" w=\"7\" name=\"differential-orbit-3\" hint=\"Boo!\" show_hints=\"TRUE\"/>\n      $a = 4 \\frac{v^2}{r}$ \n      \n    </p>\n    <p>\n      <input type=\"radio\" class=\"devoirs-mcq\" value=\"$a = \\frac ... {v^2}{r}$ \" id=\"differential-orbit-3-4\" w=\"23\" name=\"differential-orbit-3\" hint=\"Better luck next time.\" show_hints=\"TRUE\"/>\n      $a = \\frac{2}{\\pi} \\frac{v^2}{r}$ \n      \n    </p>\n    <input type=\"radio\" class=\"devoirs-mcq\" name=\"differential-orbit-3\" id=\"differential-orbit-3.null\" style=\"display: none;\" w=\"skipped\" checked=\"\"/>\n  </form>\n  <script type=\"text/javascript\">\ndocument.addEventListener('DOMContentLoaded', function() {\n      console.log('Adding event listener for differential-orbit-3.');\n      const form = document.getElementById('differential-orbit-3-form');\n      const radioButtons = form.querySelectorAll('input[type=\"radio\"]');\n\n      // Load saved value on page load\n      const savedValue = localStorage.getItem('differential-orbit-3-choice');\n      if (savedValue) {\n        console.log(\"Restoring radio button values for differential-orbit-3.\");\n        radioButtons.forEach(radio => {\n          if (radio.value === savedValue) {\n            radio.checked = true;\n          }\n        });\n      }\n\n      // Save value on change\n      form.addEventListener('change', function(event) {\n        if (event.target.type === 'radio') {\n          console.log(\"Saving changed value for differential-orbit-3.\");\n          localStorage.setItem('differential-orbit-3-choice', event.target.value);\n        }\n      });\n    });\n</script>\n</span>\n:::\n\n\n\n:::\n\n\n\n# 2025-04-25 class notes\n\n```{webr-r}\n#| caption: User console A\n#| persist: true\n```\n\n```{webr-r}\n#| caption: User console B\n#| persist: true\n```\n\n```{webr-r}\n#| caption: User console C\n#| persist: true\n```\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}