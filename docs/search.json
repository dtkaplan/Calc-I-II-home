[
  {
    "objectID": "winter-term.html",
    "href": "winter-term.html",
    "title": "UATX Calculus Winter Term 2025",
    "section": "",
    "text": "1. Tuesday 7 January, 2025\nTopics: Orientation to course resources\nReading:\n\nMOSAIC Calculus Preface\nMOSAIC Calculus Chap 1: Quantity, function, space and reading questions.\n\n\n\n2. Thursday 9 January\nTopics:\n\nClearing up any start-up problems\nMath and computing notation for MOSAIC Calculus\n\nReading: MOSAIC Calculus Chap 2: Notation and reading questions\nAssignments due: - Chap 1 Exercises\n\n\n3. Friday 10 January\nTopics: Computing for calculus with R\nReading: MOSAIC Calculus Chap 3 Computing with R and reading questions\nAssignment due: Chapter 2 Exercises\n\n\n4. Tuesday 14 January\nTopics: Visualizing functions\nReading: MOSAIC Calculus Chap 4 Visualizing functions and reading questions due before class\nAssignment due: Chapter 3 Exercises\n\n\n5. Thursday 16 January\nTopics: Our pattern book functions\nReading: MOSAIC Calculus Chap 5 Pattern book functions and reading questions due before class\nAssignment due: Chapter 4 Exercises\n\n\n6. Friday 17 January\nTopics: Describing functions\nReading: MOSAIC Calculus Chap 6 Describing functions and reading questions due before class\nAssignment due: Chapter 5 Exercises\n\n\n7. Tuesday 21 January\nTopics: Graphics and parameters.\nReading: MOSAIC Calculus Chapter 7 & Chapter 8 and their associated reading questions. Why two chapters in one day? As it happens, Chap. 7 is a rehash of what you have already seen about graphing data from the QR2 course.\nStart on exercises for Chaps. 7 & 8. Due Thurs and Fri respectively\n\n\n8. Thursday 23 January\nTopics: Assembling functions\nReading: MOSAIC Calculus Chapter 9 & its associated reading questions.\nAssignment Due: Chapter 7 exercises\n\n\n9. Friday 24 January\nTopics: Fitting function features\nNote: We are covering Ch 11 and deferring Chapter 10 until next Tuesday.\nReading: MOSAIC Calculus Chapter 11 & its associated reading questions.\nAssignment Due: Chapter 8 exercises\nStart on:\n\nChapter 11 exercises (but not the project)\n\n\n\n10. Tuesday 28 January\nTopics: Fitting function features\nNote: Chapter 10 today!\nReading: MOSAIC Calculus Chapter 10 & its associated reading questions.\nAssignment Due: Chapter 11 exercises (but not the project)\nStart on:\n\nChapter 9 exercises numbers 1 through 8\nChapter 10 exercises (but not the “class activity”)\n\n\n\n11. Thursday 30 January\nReading: MOSAIC Calculus Chapter 12 and reading questions\nQUIZ through Chapter 10\nAssignmenta Due:\n\nChapter 9 exercises numbers 1 through 8\nChapter 10 exercises (but not the “class activity”)\n\nStart on: Assignment Due: Chapter 12 exercises (but not the project)\n\n\n12. Friday 31 January\nReading: MOSAIC Calculus Chapter 13 and reading questions\nAssignment Due:\n\nChapter 12 exercises\n\nStart on: Chapter 13 exercises\n\n\n13. Tuesday 4 February\nReading: MOSAIC Calculus Chapter 14 and reading questions\nAssignment Due: Chapter 13 exercises\nStart on: Chapter 14 exercises\n\n\n14. Thursday 6 February\nReading: MOSAIC Calculus Chapter 15 and reading questions\nAssignment Due: Chapter 14 exercises\nStart on:\n\nChapter 9 exercises number 9 through 18 (due by end of reading week)\nChapter 15 exercises (due by end of reading week)\n\n\n\n15. Friday 7 February\nReading: **MOSAIC Calculus* Chapter 16 and reading questions\nAssignment due: (by end of reading week)\n\nChapter 9 exercises number 9 through 18\nChapter 15 exercises\n\nQUIZ through Chapter 15\n\n\nMid-term break\n\n\n16. Tuesday 18 February\nTopics: Continuous change\nReading: MOSAIC Calculus Chap 17 and reading questions\nAssignment due: Chapter 16 Exercises\n\n\n17. Thursday 20 February\nTopics: Rate of change\nReading: MOSAIC Calculus Chap 18 and reading questions\nAssignment due: Chapter 17 Exercises\n\n\n18. Friday 21 February\nTopics: Evanescent \\(h\\)\nReading: MOSAIC Calculus Chap 19 and reading questions\nAssignment due: Chapter 18 Exercises\nQUIZ\n\n\n19. Tuesday 25 February\nTopics: Constructing derivatives\nReading: MOSAIC Calculus Chap 20 and reading questions\nAssignment due: Chapter 19 Exercises\n\n\n20. Thursday 27 February\nTopics: Concavity and curvature\nReading: MOSAIC Calculus Chap 21 and reading questions\nAssignment due: Chapter 20 Exercises\nQUIZ\n\n\n21. Friday 28 February\nTopics: Continuity & smoothness\nReading: MOSAIC Calculus Chap 22 and reading questions\nAssignment due: Chapter 21 Exercises\n\n\n\n\n\n\n22. Tuesday 4 March\n\n\n\nTopics: Derivatives of assembled functions\nReading: MOSAIC Calculus Chap 23 and reading questions\nAssignment due: Chapter 22 Exercises\n\n\n\n\n\n\n\n\n23 Thursday 6 March\n\n\n\nTopics: Optimization\nReading: MOSAIC Calculus Chap 24 and reading questions\nAssignment due: Chapter 23 Exercises\nQUIZ\n\n24. Friday 7 March\nTopics: Partial differentiation & the gradient vector\nReading: MOSAIC Calculus Chap 25 and reading questions\nAssignment due: Chapter 24 Exercises\n\n\n25. Tuesday 11 March\nTopics:\nReading: MOSAIC Calculus Chap 26 and reading questions\nAssignment due: Chapter 25 Exercises\n\n\n26 Thursday 13 March\nTopics: Taylor polynomials\nReading: MOSAIC Calculus Chap 27 and reading questions\nAssignment due: Chapter 26 Exercises\n\n\n27. Friday 14 March\nTopics: Infinite series, decimal expansions, convergence\nReading: MOSAIC Calculus Differentiation projects\nAssignment due: Chapter 27 Exercises\nQUIZ on differentiation\n\n\n28. Tuesday 18 March\nTopics: Do we need high order?\nRecursive calculation of sin, exp, log(x+1) to produce x near zero and obviate need for high-order polynomial approximations.\nAssignment due:\n\n\n29 Thursday 20 March\nTopics: Complex exponentials, damped pendulum\nLow-order, multi-equation differential systems as opposed to high order. Example: Coupled pendula\nQUIZ (30 minutes): Overview of the course.\n\n\n30. Friday 21 March\nLast day of this term!\nReview and preview of Spring term component of the course."
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Policies and other course information",
    "section": "",
    "text": "Assignments:\n\nThe readings should be completed before class (which will put you in a position to answer the reading questions). The reading questions should also be submitted before the class for which the reading is assigned.\nWhen you have questions about a reading, let’s make it part of a class discussion on the day the reading is due.\nExercises are due by the class day after they are assigned.\n\nAll of us are busy people and need to regulate how much time we spend on each activity. For UATX calculus, make sure to complete the readings and reading questions. The chapter-by-chapter exercises are also important for learning and as a component of the grade, but you are not obliged (unless otherwise stated) to do all the exercises. More is better. Exercises marked as “in-class” are not required homework.\n\n\n\n\n\n\nLink for homework submissions\n\n\n\nEach of the homework assignment documents is set up to collect your answers at the press of a button. The answers are copied to your clipboard in a web-standard format called JSON, which you aren’t expected to read.\nFrom your clipboard, paste the JSON string into this Google Form\nI suggest that you bookmark the Google Form link. You will be using it often.\n\n\nOrientation to each day: For simplicity, most class days will be structured in the same way:\n\nOften, we will cover one chapter of MOSAIC Calculus each class days. Some chapters may take longer.\nWe will discuss the reading in class, so you should do the reading and hand in the reading questions before that class.\nYou can go back, re-do, and re-submit the reading questions if you like, but this is not required.\nThe assignment for each chapter will be due the class day following the discussion of that chapter. If you have questions, bring them to that following day to discuss them, then you can complete your assignment."
  },
  {
    "objectID": "notes/2025-03-11-notes/index-03-11-2025.html",
    "href": "notes/2025-03-11-notes/index-03-11-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "25 2025-03-11 class notes\n\nPartial derivative\n\nA derivative with respect to one variable, holding all the other variables constant. “Constant” is not necessarily zero. For instance \\[f(x, y)\\equiv x y^2\\ \\ \\ \\longrightarrow\\ \\ \\ \\ \\partial_x f(x, y) = y^2 \\ \\text{ and } \\partial_y f(x,y) = 2 y x .\\]\n\n\nOr, computationally,\n\n\n\n\n\n\n\n25.1 Almar’s question from Friday\n\nWhat happens when \\(x\\) and \\(y\\) are related?\n\nA function \\(f(x,y)\\) does not itself impose any relationship between \\(x\\) and \\(y\\). They are the inputs and can be selected however you like.\nHOWEVER, when a function is held at a particular value, an implicit relationship between \\(x\\) and \\(y\\) is created: for a given value of \\(x\\) there are only certain corresponding valid values of \\(y\\).\nTo illustrate:\n\n\n\n\n\n\nAlthough convention calls for these to be interpreted as contours, it’s perfectly reasonable to think of each branch as defining a function \\(g(x)\\).\nFor instance, suppose we have a physical system that has inputs \\(x\\) and \\(y\\). We add on to this a control system that, for any valid input \\(x\\) changes \\(y\\) automatically to stay on the contour line.\nWe would like to have, for instance, a formula that relates any change \\(dx\\) in \\(x\\) to a required change \\(dy\\) in \\(y\\) to keep us on the control line.\nThe change \\(dx\\) induces a change in the function value of \\(\\partial_x f(x,y) dx\\). Any nonzero change in \\(x\\) would take us off the control line unless we change \\(y\\) to balance it out. The change in function value due to a change \\(dy\\) is \\(\\partial_y f(x,y) dy\\).\nWe want the total change, due to both \\(dx\\) and \\(dy\\) to be zero. Hence:\n\\[\\partial_x f(x, y) dx = - \\partial_y f(x, y) dy\\] or, re-arranged, \\[\\frac{dy}{dx} = -\\frac{\\partial_x f(x, y)}{\\partial_y f(x, y)} .\\] This is sometimes called “implicit differentiation,” and is taught in conventional Calc I courses. I don’t see why. If you know about partial derivatives, the result is simple.\nor, in terms of the control system, \\[dy = - \\frac{\\partial_x f(x, y)}{\\partial_y f(x, y)} dx\\]\nLet’s plot out this relationship between \\(dx\\) and \\(dy\\) need to keep us on a contour.\n\n\n\n\n\n\n\n\n25.2 Derivs of low-order-polynomials\nThe low-order polynomial in two variables:\n\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{xx} x^2 + a_{yy} y^2\\]\n\nPick out two students to do \\(\\partial_x g(x, y)\\) and \\(\\partial_y g(x,y)\\)\nPick out two students to do \\(\\partial_{xx} g(x, y)\\) and \\(\\partial_{yy} g(x, y)\\).\nPick out two students to do \\(\\partial_{xy} g(x, y)\\) and \\(\\partial_{yx} g(x, y)\\).\n\n\\[\\partial_x g(x, y) = a_x + a_{xy} y + 2 a_{xx} x\\] \\[\\partial_y g(x, y) = a_y + a_{xy} x + 2 a_{yy} y\\]\nA second-order polynomial in two inputs:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSecond-order partial derivatives\n\n\n\n\n\n\n\n\n25.3 Almar’s question: “What if \\(x\\) and \\(y\\) are related?”\nThree ways to think about this in terms of functions:\n\n\\(y\\) is a function of \\(x\\), that is, \\(y(x) \\equiv ...\\)\n\\(x\\) is a function of \\(y\\), that is \\(x(y) \\equiv ...\\)\n\\(x\\) and \\(y\\) are both functions of some third variable \\(t\\).\n\nHandling case 1:\n\n\n\n\n\n\nExample of \\(y\\) being a function of \\(x\\):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25.4 Practice problems on the “Rules”"
  },
  {
    "objectID": "notes/2025-01-07-notes/index.html",
    "href": "notes/2025-01-07-notes/index.html",
    "title": "2025-01-07 class notes",
    "section": "",
    "text": "1 About the preface\n\nYou took some mathematics in high school.\n\nStarting with, say, 9th grade, up to but not including calculus, what topics did you study? [Assemble a list.]\nWhat were these topics for? Directly of use? Preparation for further study? [Work with list].\n\nYou are taking this calculus course. What are you hoping to get out of it?\nDid you take a calculus course?\n\nTell me what calculus is about. (But don’t recite from the readings.)\nWhere does the word calculus come from?\nWhat calculus topics did you cover? [Assemble a list.]\nWhat were these topic for? Directly of use? Preparation for further study?\n\nA little history of this course.\n\nOrigins in “calculus reform” from the late 20th century\nMAA project to find what “partner disciplines” needed from college math. There was little overlap with traditional topics.\nIntroduced in 2003 at Macalester College with support from US NSF, Keck Foundation, HHMI\n\nBecame the second most heavily enrolled class at Macalester. (The statistics counterpart was the most enrolled.)\nStill taught at Macalester,\n\nThe US Air Force Academy invited me to redo their core math requirements. The current version of the course is now their official calculus curriculum, taken by about 800 cadets every year.\n\nWarning: This course will be different from any other calculus course you are likely to have encountered.\n\nMany obsolete topics have been discarded.\nComputing is at the center of the course. Algebraic manipulation is greatly de-emphasized.\nIt is multi-variate from the beginning.\nIt is an applied course, meaning that we focus on techniques that are useful across a broad array of tasks. We avoid the layer of theory that mathematicians added to calculus in the middle of the 19th century.\nJust two courses will cover the topics is the usual four- or five-semester-long sequence.\n\n\n\n\n2 Resources\n\nDay-by-day schedule will explicitly list readings and assignments. Reading questions are due before the class which they are linked to.\nFree, online textbook, MOSIAC Calculus.\nExercises, reading questions, projects are in the MOSAIC Calculus Workbook.\nShow how to hand in assignments electronically.\nComputing is integral to the course. We use the professional-level R platform, which is also being used in QR2.\n\nEverything is open source.\nEach course has its own set of basic R functions.\nThe computing is embedded into course documents, so you don’t have to install anything.\nFor those who are especially keen, you can install the (free) software on your laptop. But, to avoid confusion and to work with the electronic submission of assignments, use the embedded software for your course work.\n\n\n\n\n3 Chap 1: Quantity, function, space\nThese are the big three concepts for our calculus course. Neither Newton nor Leibniz would recognize them for what they are. Calculus has evolved hugely since its invention, and continues to evolve.\n\nExample: Our calculus course is closely related to the methods used in machine learning and (so-called) artificial intelligence.\n\nQuantity: the amount of some “stuff.” Need to specify both the amount and the kind of stuff.\n\nUnits tell us the kind of stuff.\n“Dimensions” is the framework for organizing units. It’s important to master this. Fundamental dimensions: L, T, M.\nDerived dimensions, e.g. L/T or L/T2, or M L2 / T2 are constructed by multiplying and dividing fundamental dimensions. Only multiplication and division are allowed!\nWe often have English words that correspond to specific dimensions, e.g. M L2 T-2 is “energy” while M L2 T-3 is “power.” Other, very common English dimension words: area, volume, flow, …\n\nFunction: in the calculus sense is a relationship between one or more inputs and a single output. You will learn about 20 vocabulary terms involving functions, some of which you already know. It is crucial to use the vocabulary precisely and accurately. Examples: input, domain, output, curvature, continuity, …\n\nNotation: Almost every function will have a name, e.g. sin, sqrt. We will usually write the name followed by a pair of empty parentheses to remind us that the name refers to a function.\nPutting inputs inside the parentheses means “evaluate the function for that input.” Example:\n\n\\(\\sin()\\) is the name of a function\n\\(\\sin(\\pi)\\) is a number, not a function.\nOften we will use names for the inputs to a function, especially when defining them, e.g., \\(f(x, t) \\equiv A \\exp(-t/T_0) \\sin(2\\pi t/P)\\).\n\nSurprising fundamental fact that you didn’t learn in high school. If \\(t\\) stands for time (say, units of seconds), then \\(\\sin(t)\\) is not a valid expression. We’ll see why later.\nA good, but partial definition of calculus is “the mathematics of functions.”\n\nSpace: This is at once completely intuitive and utterly incomprehensible. In a mathematical sense, a space is a “set of possibilities.” Each individual possibility is called a “point.”\nExamples: - A table-top is a space. You can put an object at any point on the table. - The stuff of the universe occupies space. Intuitively, this is 3-dimensional space, but relativists consider it to be 4-dimensional and string-theorists often talk about 9-dimensional space.\nCalculus is largely about state, change, and motion. A state is a point in the space. To change means to move from one point in the space to another. From any point, there is a set of independent directions in which you can move: e.g. left-right, forward-back, up-down. The number of such independent directions is called the “degrees of freedom” of the state.\n\n\n4 Activity\nWhat is the state of a baseball game? Construct a complete set of quantities to represent the state at an instant in time.\nThis is a modeling task. To get anywhere, you have to decide what aspects of the situation are important. For instance, saying the state is a set of molecular positions and orientations would be unwieldy and impractical.\n“Important” is a subjective term and depends on the goals of the modeler. A good place to start when constructing a model is to think about the people the model is intended to serve.\n\n\n5 Activity II\n\nDo the reading questions and hand them in.\nIf there is time … Start on the exercises. Have students hand in the work that they get done."
  },
  {
    "objectID": "notes/2025-03-13-notes/index-03-13-2025.html",
    "href": "notes/2025-03-13-notes/index-03-13-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "26 2025-03-13 class notes\nSteve Strogatz’s \\(pi\\)-day article\nTalking about convergence.\nNumber systems:\ncurrency: pounds, shillings, pence\ntime: hours, minutes, seconds\nangle, degrees, minutes seconds: show a decimal lat/long location on Google Maps\nHow do we know that 3.14159265358979 … converges to a finite number. It’s the sum of an infinite number of things:\n\\[ 3 x^0 + 1 x + 4 x^2 + 1 x^3 + 5 x^4 + 9 x^5 + 2 x^6 + \\ ... \\text{ at } x=1/10\\]\nThis looks like a function. (It is a function, it’s just that we are evaluating it at x=0.1 to get \\(\\pi\\))\na polynomial approximation found by matching the derivatives.\n\n26.1 Convergence of an infinitely long polynomial:\n\\[\\sum_{0}^{n\\rightarrow \\infty} x^{-n} = 1 + x \\sum_{0}^{n \\rightarrow \\infty} x^{-n} \\] so\n\\[ \\sum_{0}^{n\\rightarrow \\infty} x^{-n} \\left(1 -x \\strut\\right) = 1\\]\nso\n\\[ \\sum_{0}^{n\\rightarrow \\infty} x^{-n} = \\frac{1}{1-x} \\]"
  },
  {
    "objectID": "notes/2025-02-28-notes/index-02-28-2025.html",
    "href": "notes/2025-02-28-notes/index-02-28-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "21 2025-02-28 class notes\nFOR CHAPTER 23, put the activities from the workbook into the lesson plan.\nExercises 8, 9, 10"
  },
  {
    "objectID": "notes/2025-04-08-notes/index-04-08-2025.html",
    "href": "notes/2025-04-08-notes/index-04-08-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "Background software\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n34 2025-04-08 class notes\n\n\n\n\n\n\nConsole A\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConsole B\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConsole C\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n34.1 From last week …\nWe talked about the dot product, linear combinations, the idea of a subspace as defined by a set of vectors.\nWe started to think about linear modeling (as in model_train(), which uses lm()) in terms of vectors.\nReminder of “case space” versus “variable space.”\nToday’s goal is to give you a complete understanding of linear modeling in terms of vectors.\n\n\n34.2 Matrices\nA matrix is a set of vectors. All of them must share an embedding space, that is, they all must have the same number of components.\n\nMaking vectors, say with rvec()\nMaking matrices with cbind()\nSometimes it will be nice to display a large matrix visually, one pixel per number.\n\nExample: Matrix of random numbers\n\n\n\n\n\n\n\n\n34.3 Grabbing components of matrices\nOccasionally, we will need to look at just one (or a few) columns (or rows) in a matrix. We can use the indexing syntax for this, which involves square braces: [ , ]\nExample: Matrix of small integers\n\n\n\n\n\n\nNow for an R oddity. The people who initially wrote S (the precursor to R) created an object called a “vector” that, unlike the linear algebra conception, doesn’t distinguish between rows and columns. The indexing operator will collapse the result to an R vector, if it can.\nTo get the matrix part correctly formatted, you need to cancel this behavior:\n\n\n\n\n\n\n\n\n34.4 Matrix/vector multiplication\nCanonical form: m-by-n matrix times an n-dimensional vector gives an m-dimensional vector.\nThe times here is not scalar multiplication. It is “matrix multiplication.” The operator is\n%*%\nYou will mistakenly use simple * often. Be gentle with yourself!\nThe result is a linear combination of the vectors in the matrix, with the “coefficients”/“scalars” coming from the vector.\n\n\n\n\n\n\nNot necessarily commutative.\nWhy I was dodgy in writing the dot product using two column vectors. Better if the dot product is seen as a kind of matrix/vector multiplication, where the matrix consists simply as a row of scalars.\nUse values_mat() to create the vectors and the matrix.\n\n\n\n35 Finding the coefficients using lm()\n\n\n\n\n\n\nHow does model_train() manage this? It calls a more basic function lm() (short for “linear model”) which in turn calls qr.solve() which in turn calls a linear algebra package called “LINPACK” or a newer system “LAPACK” that’s used by technical workers world-wide.\n\n\n\n\n\n\n\n35.1 Q and R matrices\nqr.solve() takes the matrix and re-writes it as a linear combination of two special matrices, one called Q and the other R.\n\n\n\n\n\n\nEach of the vectors in Q is orthogonal to every other vector in Q.\n\n\n\n\n\n\nThe %dot% operator is really a special form of matrix multiplication, arranged to disregard whether vectors are in row or column format. With matrix multiplication, we have to be more careful.\n\n\n\n\n\n\nThe R matrix is also special. To illustrate, let’s solve a made-up set of equations:\n\n\n\n\n\n\nmyR\n\n\n\n\n\n\nThen work out the second column of M as a linear combination of the first two vectors in myQ.\n\n\n35.2 Projection onto a subspace\nLet’s look at the space spanned by the second and third vector in M\n\n\n\n\n\n\nProject the target vector onto mySpace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n35.3 Getting to Q\nGraham-Schmidt orthogonalization\nDo an example by hand.\n\n\n\n\n\n\n\n\n35.4 Functions as vectors\nGaussians over a two second-window\n\nstep = 2^(1/12)\n\nSounds &lt;- tibble::tibble(\n  time = (0:44100)/22050,\n  g1 = pmin(1.0, dnorm(time, mean = 1, sd=0.5)),\n  g2 = pmin(1.0, dnorm(time, mean = 0.25, sd=0.2)),\n  g3 = pmin(1.0, dnorm(time, mean = .75, sd=0.2)),\n  g4 = pmin(1.0, dnorm(time, mean = 1.25, sd=0.1)),\n  one =    sin(step^0  * 2 * pi * 440 * time),\n  two =    sin(step^1  * 2 * pi * 440 * time),\n  three =  sin(step^2  * 2 * pi * 440 * time),\n  four =   sin(step^3  * 2 * pi * 440 * time),\n  five =   sin(step^4  * 2 * pi * 440 * time),\n  six =    sin(step^5  * 2 * pi * 440 * time),\n  seven =  sin(step^6  * 2 * pi * 440 * time),\n  eight =  sin(step^7  * 2 * pi * 440 * time),\n  nine =   sin(step^8  * 2 * pi * 440 * time),\n  ten =    sin(step^9  * 2 * pi * 440 * time),\n  eleven = sin(step^10 * 2 * pi * 440 * time),\n  twelve = sin(step^11 * 2 * pi * 440 * time)\n)  |&gt;\n  mutate(sum = g2*three + g2*five + g2*seven + 2*three^2)\n\naudio::play(Sounds$sum / 10, rate = 22050)\n\n\n\n35.5 SVD and the dimension of subspaces\nCreate some vectors, then some linear combinations of them than look at the singular values."
  },
  {
    "objectID": "notes/2025-01-31-notes/index-01-31-2025.html",
    "href": "notes/2025-01-31-notes/index-01-31-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "12 2025-01-31 class notes\n\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ +\n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nWhat is the order of an interaction term?\nTo be proficient, a modeler must know how to translate a modeling context into the choice of terms for a low-order polynomial. AVOID terms that you don’t need.\n[Got to here on Thursday]\n\n12.1 Why do bicycles have gears\nSimilar to the reason that gasoline cars have gears, but electric cars don’t need them.\nBike speed \\(B\\) increases with power applied. You can also think of it as foot speed multiplied by gear ratio.\nMuscle Force and speed: There is a decreasing relationship between the force a muscle can apply and the speed of contraction. (Extension is similar, but we need a \\(\\Lambda\\)-shaped function to put both contraction and extraction into one function.)\nLet’s keep it simple, use a low-order polynomial, say F(v) = 1 - v. (I’m writing only the sign of the coefficients to make the notation as clean as possible, but in general it should be \\(F(v) = a - b\\ v\\)).\nPower: Power is Force times speed. Work out the dimensions.\nGraph the function: multiply the F(v) decreasing function by v, that is\n\\(Power(v) = v (1-v)\\)\nAn optimal speed to maximize power!\nASIDE: Gas engines: power proportional to RPM times efficiency of each fuel “event.” Efficiency also has an optimal: need to give the gas enough time to burn, but too much leads to “detonation.” Ergo, cars have gears.\n\n12.1.1 Extending the example\nFind the speed of a bicycle as a function of road steepness (\\(s\\)) and gear (\\(g\\)) selected.\n\nThere are of course many other factors that play a crucial role: power (\\(p\\)) provided by the cyclist, wind speed, tire inflation, and so on.\nIn our model today, we will consider these other factors fixed.\n\n\n\n12.1.2 Add in rider power\n\nAlways put in the linear time.\nAre there interactions with other variables?\nIs there an optimum power?\n\nAs a first pass, we don’t need to consider terms of order three or higher. Examples:\n\n\\(p s g\\)\n\\(p s^2\\) or \\(p g^2\\), let alone \\(p^2 s^2 g\\) (fifth order) and such.\n\n\n\n\n12.2 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as input\nproduce a quantity as output\n\n\nZero-finding\nOptimization\nIteration\n\nAfter break, we’ll start on the famous operations of calculus: differentiation and anti-differentiation. These both take a function as input and produce a function as output."
  },
  {
    "objectID": "notes/2025-02-27-notes/index-02-27-2025.html",
    "href": "notes/2025-02-27-notes/index-02-27-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "20 2025-02-27 class notes\nDegrees, minutes, seconds\nCounting out seconds activity against stop-watch\nTheme doing calculations with curvature without calculus.\nAssume that the boy, the center of the ball, and the center of the hoop in Figure 1 are all in the same plane, as required for a swish shot. Assume as well that when the ball left the boy’s hands it was in the position now occupied by the boy’s head and that there was no spin on the ball.\n\nWill the ball swish through the basket?\n\n\n\n\n\n\n\nFigure 1: A drawing from a children’s song book, I’m still here in the bathtub, illustrated by David Catrow. (Scholastic, Inc. 2004)\n\n\n\n\n20.1 French curves\n\n\n\n20.2 Formula for curvature \\(K(x)\\) of a function \\(f()\\)\n\\[ K(x) = \\frac{\\partial_{xx} f(x)}{(1 + \\partial_x f(x)^2)^{2/3}}\\]\nCurvature is 1/radius of the inscribed circle.\nCh 21 Activities, 8, 9\n\\[ r = \\frac{(1 - \\partial_x f(x)^2)^{2/3}}{\\partial_{xx} f(x)}\\]\n\n\n20.3 Specifying the curvature of a highway ramp\nHighway entrance/exit ramps from textbook\n\nK_design &lt;- function(x, xb1 = 1, xb2 = 3, A=.02) {\n  ifelse(\n    x &lt; 0, \n    0, \n    ifelse(\n      x &lt;= xb1, \n      A*x/xb1,\n      ifelse(\n        x &lt;= xb2, A,\n        ifelse(x &lt; xb2+xb1,\n               A * (1 - (x-xb2)/xb1),\n               0)\n      )\n    )\n  )\n}\n  \nslice_plot(K_design(x) ~ x, domain(x = -1:5), npts = 503)\n\n\n\n\n\n\n\n\n\nf &lt;- makeFun( sqrt(r^2 - x^2)    ~ x, r=3)\nslice_plot(f(x) ~ x, domain(x = -3:3), npts = 1000) |&gt;\n  gf_refine(coord_fixed())\n\n\n\n\n\n\n\nfprime &lt;- D(f(x) ~ x)\nfpp &lt;- D(f(x) ~ x + x)\nfpp\n\nfunction (x, r = 3) \n{\n    .e1 &lt;- x^2\n    .e3 &lt;- r^2 - .e1\n    -((1 + .e1/.e3)/sqrt(.e3))\n}\n\n\n\nh &lt;- 0.01\nstate &lt;- list(n = 0, x0 = 0, x1 = h, y0=0, y1 = h, yprime = 1)\n\n\nnext_state &lt;- function(state, h = 0.1, xb1 = 1, xb2 = 3, A = 2) {\n  with(state, {\n    n &lt;- n + 1\n    K &lt;- K_design(x1, xb1 = xb1, xb2 = xb2, A = A) \n    x0 &lt;- x1\n    x1 &lt;- x1 + h\n    y2 &lt;- 2*y1 - y0 # old y1 + (y1-x0)\n    ypp &lt;- abs((1 + ((y1-y0)/(x1 - x0))^2))^(2/3) * K\n    y2 &lt;- y2 - h^2 * ypp \n    list(n=n, x0=x0, x1=x1, y0=y1, y1=y2, yprime=ypp, K=K)\n  })\n}\n\n\nh = 0.1\nstate &lt;- list(n = 0, x0 = 0, x1 = h, y0=0, y1 = h, yprime = 1, K =0)\naccumulated_state &lt;- as.data.frame(state)\nfor (k in 1:1000) {\n  state &lt;- next_state(state, h=h, A = 0.02, xb1 = 10, xb2 = 90)\n  accumulated_state &lt;- bind_rows(accumulated_state, state)\n}\ngf_point(y0 ~ x0, data = accumulated_state) |&gt;\n  gf_refine(coord_fixed()) \n\n\n\n\n\n\n\n\naccumulated_state &lt;- as.data.frame(state)\n} bind_rows(accumulated_state, state) ```"
  },
  {
    "objectID": "notes/2025-02-25-notes/index-02-25-2025.html",
    "href": "notes/2025-02-25-notes/index-02-25-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "19 2025-02-25 class notes\nReminder: QUIZ at end of hour, mainly on the derivatives of the pattern-book functions.\n\nHundredth anniversary of microphone use in musical recordings. Link\n\nKhan Academy proof that \\[\\lim_{h\\rightarrow 0} \\frac{\\sin(x)}{x}\\]\n\n19.1 The finite-difference derivative operator, \\({\\cal D}_x\\)\n\nTakes a function as input and produces a function as output.\nAn infinity of ways to define it, all variations on the same thing.\n\nRight sided \\[{\\cal D}_t f(t) \\equiv \\frac{f(t + h) - f(t)}{h}\\]\nLeft sided: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t) - f(t-h)}{h}\\]\nCentered: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h/2) - f(t-h/2)}{h}\\]\nCentered: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h) - f(t-h)}{2 h}\\]\n\nWhich of these is “right”? Insofar as they give the same result, they are all right.\nLook at the value of the derivative at any specific input as a function of \\(h\\). For small enough \\(h\\), all these head in the same direction.\nDefinition of small enough in mathematics: \\(\\lim h \\rightarrow 0\\).\nDefinition of small enough in numerics: Check at \\(h\\) and at \\(h/8\\): do these give equivalent results. If so, we’re done.\n\nNOTE: “equivalent” requires that we accept the idea of “close enough for our purposes.”\n\n\n19.2 Higher order derivatives\nGo to the board and find formulas for the 2nd- and 3rd-order derivatives of a function with one input.\nTo find a finite-difference formula for a second derivative, \\(\\cal D_{t\\, t} f(t)\\) apply the finite-difference formula to \\(\\cal D_t f(t)\\):\n\\[\\cal D_{t\\ t} f(t) = \\frac{\\cal D_t f(t + h) - \\cal D_t f(t-h)}{2h} = \\]\n\\[= \\frac{\\frac{f(t + h + h) - f(t)}{2 h} - \\frac{f(t) - f(t-h - h)}{2 h}}{2 h}\\]\n\\[ \\frac{f(t + 2 h) - 2 f(t) + f(t-2h)}{4 h^2}\\]\nFor simplicity, let’s rewrite this using a new \\(h_\\star = 2 h\\), getting \\[\\cal D_{t\\ t} f(t) = \\frac{f(t + h_\\star) - 2 f(t) + f(t - h_\\star)}{2h_\\star^2}\\]\nPaint a geometric picture of this: The average of the two end points minus the middle point.\nThird derivative \\[\\cal D_{t\\, t\\, t} = \\frac{\\cal D_{t\\, t} f(t + h) - \\cal D_{t\\, t} f(t-h)}{2h}\\]\n\\[= \\frac{\\frac{f(t+2h) -2 f(t+h) + f(t)}{2h} - \\frac{f(t) - 2 f(t - h) + f(t - 2h)}{2h}}{2h}\\]\n\\[= \\frac{f(t + 2h) - 2\\left({\\large\\strut} f(t+h) - f(t-h)\\right) - f(t-2h)}{2 h^3}\\]\nLet’s check if this is right …\nf(x + 2 * .h) - 2 * (f(x + .h) - f(x - .h)) - f(x - 2 * .h)/(2 *.h^3)\n\nf &lt;- sin # Non-mosaiCalc notation\nslice_plot(\n  (f(t + 2*h) - 2*(f(t+h) - f(t-h)) - f(t - 2*h)) /\n    (2*h^3) ~ t, \n  domain(t = -5:5), \n  h = 0.001\n)\n\n\n\n\n\n\n\n\n\nnumD(f(x) ~ x + x + x)\n\nfunction (x, .h = 0.01) \n{\n    (f(x + 2 * .h) - 2 * (f(x + .h) - f(x - .h)) - f(x - 2 * \n        .h))/(2 * .h^3)\n}\n&lt;environment: 0x7fd658c26ce0&gt;\n\n\n\n\n19.3 If you have an analytic formula for a derivative, use it.\nExample: \\(g(t) \\equiv sin(t)\\).\nAlgebraic fact : \\(\\sin(a + b) = \\sin(a)\\cos(b) + \\cos(a)\\sin(b)\\)\nLet’s apply this to our definition of the derivative:\n\\[\\frac{\\sin(t + h) - \\sin(t)}{h} = \\frac{\\sin(t)\\cos(h) + \\cos(t)\\sin(h) - \\sin(t)}{h}\\] \\[ = \\frac{(\\cos{h} - 1)}{h} \\sin(t) + \\frac{\\sin(h)}{h} \\cos(t)\\]\nExample of a limit proof: \\(\\lim_{h \\rightarrow 0} \\frac{\\sin(h)}{h} = 1\\)\n\n\n19.4 Close enough\n\n19.4.1 Sound\nSound is communicated to our ears by a function pressure(t). What does “close enough for our purposes” mean here?\nRecording of report about the BEF entering Belgium (1940)\nA pure sine wave\n\ntime = (0:44100)/44100\nhz = 2*2*2*2*2*2*880\naudio::play(sin(hz*2*pi*time), rate = 44100)\n\nFor the purpose of representing audio to humans, we can cut out sounds that we can’t perceive.\n\n\n\n19.5 Digital audio: Nyquist sampling theorem\n\nsinc &lt;- makeFun(sin(t)/t ~ t)\nslice_plot(sinc(t) ~ t, domain(t = -25:25), npts = 500)\n\n\n\n\n\n\n\n\n\n19.5.1 Training neural networks\n\n\n\n19.6 Digital signal processing\n\naudio::play(Violin$y)\n\nSys.sleep(2)\nDcello &lt;- (Violin$y[-1] - Violin$y[-nrow(Cello)])\n\nWarning in Violin$y[-1] - Violin$y[-nrow(Cello)]: longer object length is not a\nmultiple of shorter object length\n\naudio::play(as.integer(20*Dcello))"
  },
  {
    "objectID": "notes/2025-03-18-notes/index-03-18-2025.html",
    "href": "notes/2025-03-18-notes/index-03-18-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "28 2025-03-18 class notes\nPlan for this week:\n\nI’ve got topics for today and Thursday\n30 minute quiz on Thursday\nAssignment for Friday\n\nSend evaluation answers to me via a friend’s email\nWrite down on paper three things that give you the most trouble.\n\n\n\n28.1 Complex exponentials\n\\(e^{i\\omega t}\\) as a replacement for \\(sin(\\omega t)\\).\n\n2nd derivative is proportional to negative itself.\nDifferentiation is a matter of multiplying by \\(i \\omega\\).\nMultiplication of one sine by another is akin (sort of) to advancing the argument.\n\nModeling a pendulum.\nASK: What do we know about the acceleration along the arc of swing.\n\nIt’s zero at an angle of zero.\nIt’s an odd function, meaning \\(f(-\\theta) = - f(\\theta)\\)\nWe can expand this out as a Taylor polynomial: first and third-order terms.\n\nEquation of motion:\n\\[\\partial_{tt} \\theta(t) = - \\omega^2 \\theta(t)\\] Substitute in \\(a \\sin(\\omega t)\\).\nNOW, add in air resistence. What do we know about air resistence?\n\nIt’s a function of speed\nIt’s odd\nIt’s nil when the velocity is zero.\n\nEquation of motion\n\\[\\partial_{tt} \\theta(t) = -\\omega^2 \\theta(t) + \\nu \\partial_t \\theta(t)\\]\nPlug in \\(\\sin(\\omega t)\\): doesn’t quite work.\nPlug in \\(e^{i k t}\\) giving\n\\[- k^2 e^{ikt} = - \\omega^2 e^{ikt} + i \\nu \\omega k e^{ikt}\\] or\n\\[\\omega^2 -i \\nu \\omega - k^2 = 0\\]\n\n\n28.2 Another Taylor expansion\nExpand \\(\\ln(x + 1)\\) around \\(x=0\\).\nOne team writes the derivatives, the other team sets up the polynomial waiting for the derivatives.\nImplement on the computer.\n\n\n\n\n\n\n\n\n28.3 How high a power do I really need for the polynomial?\n\n\n28.4 Exponential\n\n\n\n\n\n\n\n\n28.5 Sinusoid\n\n\n\n\n\n\n\n28.5.1 Logarithm\nIt’s easiest to write the Taylor series of \\(\\log(1+x)\\) around \\(x = 0\\)\n\nFind successive derivatives of \\(\\log(1+x)\\) and evaluate at \\(x=0\\). It becomes very easy.\nTurn these into the multipliers of a Taylor polynomial by dividing the \\(n\\)th derivative by \\(n!\\)\nUse this polynomial to calculate \\(\\log(1+x)\\).\n\n\nlogxp1_taylor &lt;- function(x){\n  x - x^2/2 + x^3/3 - x^4/4  + x^5/5 #- x^6/6 + x^7/7 - x^8/8\n}\n\nWe can then write log_taylor(x) as\n\n\n\n\n\n\nTry this out for x=2 and observe the bad answer compared to log(3). The answer gets even worse for bigger x. What’s wrong? Convergence.\nNow use manipulations to squeeze x closer to `.\n\n\n\n\n\n\n\n\n\n28.6 A least-squares approach.\nEvaluate \\(\\log(x + 1)\\) at a few points.\n\n\n\n\n\n\n\n\n28.7 Modeling project: Speed of a satellite\nWrite-up from Workbook"
  },
  {
    "objectID": "notes/2025-03-21-notes/index-03-21-2025.html",
    "href": "notes/2025-03-21-notes/index-03-21-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "30 2025-03-21 class notes\nIan and Max W are missing.\n\n30.1 Review of class topics\nPreliminary:\nWho didn’t have a serious calculus course before? Maxim, Grace, Ian, Max\n\nGradient vectors and Taylor series\n\nwe didn’t do problems on what vector fields might be gradient fields like the last problem on the long quiz.\n\nUnits and dimensions\n\nfelt like physics\nwrite “dimension” in a special notation so that it’s clear what we’re talking about.\n\nContinuity and non-continuous functions, C3 and such.\nMagnitudes.\n\nDoing more plotting and different bases of logarithm.\n\nShould be more computing throughout.\nBe more explicit about ChatGPT and R coding. Give a prompt to use a particular coding style.\nWhat surprised you to see in a calculus course.\nWhat are you anticipating in a second course.\n\n\n\n30.2 Evaluation of\n\nPace\n\nMake it clear that not all the exercises need to be done in each chapter.\nSometimes falling behind, especially after the mid-term break.\n\nPlotting derivatives and the cognitive shift between f() and f’().\n\nMaybe have an intermediate step: plot the slope on the input axis, then translate that to a graph of the value of the derivative.\n\nMaxim not enough time on derivatives Max L and Grace\n\nExercises and drill:\n\nMore drill on a day-to-day basis: practice problems.\nTry to make more connections between chapters explicit.\n\nAssignments:\n\nDrill for every chapter\nAssignment for each week, more projects\n\nAreas of application:\n\nMore connections to biology, economics, machine learning functions, maybe look at continuity with respect to those.\nImage processing: edge detection\nMore examples for low-order polynomials\nMaybe use DEs to generate trajectories and have them work on that.\n\nCalculus Topics\n\nhow many were familiar and repetitive\nequations, theoretical understanding\n\nequations are more of an algebraic thing: balancing\n\n\nOperations\n\nspend more time putting the 5 operations together and using them.\n\n\nHistory\n\n\n\nTechnology\nShall we use RStudio next term? They are lukewarm."
  },
  {
    "objectID": "notes/2025-03-07-notes/index-03-07-2025.html",
    "href": "notes/2025-03-07-notes/index-03-07-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "24 2025-03-07 class notes\n\n24.1 Partial derivative\nA derivative with respect to one variable, holding all the other variables constant. “Constant” is not necessarily zero.\n\n\n\n\n\n\nMoving this to 03-11 class\n\n\n\nExample, low-order polynomial in two variables:\n\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{xx} x^2 + a_{yy} y^2\\]\n\nPick out two students to do \\(\\partial_x g(x, y)\\) and \\(\\partial_y g(x,y)\\)\nPick out two students to do \\(\\partial_{xx} g(x, y)\\) and \\(\\partial_{yy} g(x, y)\\).\nPick out two students to do \\(\\partial_{xy} g(x, y)\\) and \\(\\partial_{yx} g(x, y)\\).\n\n\\[\\partial_x g(x, y) = a_x + a_{xy} y + 2 a_{xx} x\\] \\[\\partial_y g(x, y) = a_y + a_{xy} x + 2 a_{yy} y\\]\nA second-order polynomial in two inputs:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSecond-order partial derivatives\n\n\n\n\n\n\n\n\n\n\n24.2 Gradient field\n\n\n\n\n\n\nThe gradient field is a pair of functions on the \\(x, y\\) space:\n\n\n\n\n\n\nLet’s show the zero contour of both partial derivatives on top of the function \\(f(x, y)\\) itself.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n24.3 Gradient vector points in most steep direction\nImagine that we take a small step \\((h_x, h_y)\\) from an initial input point \\((x_0, y_0)\\).\nThe gradient vector is \\[\\nabla f(x, y) \\equiv\\left({\\Large\\strut}\\partial_x f(x, y) ,\\ \\  \\partial_y f(x,y)\\right)\\] but to keep the notation compact, we’ll write \\(\\nabla f(x,y) \\equiv (dx, dy)\\).\nThe total change in the function output will be approximately \\[h_x dx + h_y dy\\].\nWe want to pick \\(h_x\\) and \\(h_y\\) to make the increase as large as possible. But there needs to be some constraint, otherwise, we would just make the \\(h\\)’s big. So we will make it a unit length step, that is \\[(h_x, h_y) = (h, \\sqrt{\\strut1 - h^2})\\]\nThe total change is therefore \\[\\Delta (h) \\equiv h\\  dx + \\sqrt{\\strut 1 - h^2}\\ dy\\] We want to maximize this with our choice of \\(h\\).\nSet the derivative equal to zero:\n\\[\\partial_h \\Delta (h) = 0 = dx - \\frac{h}{\\sqrt{\\strut 1 - h^2}}  dy\\] or, \\[\\frac{dx}{dy} = \\frac{h}{\\sqrt{\\strut 1-h^2}} = \\frac{h_x}{h_y}\\]\nIn other words, we want \\(h_x\\) to be proportional to \\(dx\\) and \\(h_y\\) to be likewise proportional to \\(dy\\).\nThe direction to achieve the greatest increase in the value of \\(f()\\) is the same as the direction of \\(\\nabla f(x, y)\\).\nActivities from Ch. 25 exercises."
  },
  {
    "objectID": "notes/2025-01-30-notes/index-01-30-2025.html",
    "href": "notes/2025-01-30-notes/index-01-30-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "11 2025-01-30 class notes\n\n11.1 Polynomials and their order.\nPolynomials are a kind of modeling clay. They can be shaped into several different useful forms.\n\nAlthough polynomials were central to your high-school curriculum, there is nothing special about them from a modeling point of view.\n\nOther functions can give the same modeling properties.\nEven a hand-sketched function can give a good representation of the desired modeling properties. (Later in the course, we’ll see how to compute on hand-sketched functions!)\nDO NOT BE DECEIVED into thinking that they are more precise or meaningful than other similar shapes.\nWe use them from a combination of tradition (ancient), malleability with algebraic tools, and conventions for describing features of function, for example stability of a fixed point or the local shape of a landscape.\nThey are also very simple in terms of calculus properties, both globally and locally.\n\nA polynomial is a linear combination of monomials. \\(x^{-1}\\) is NOT a monomial.\nThere are other function structures that are important in specific areas, for instance ratios of polynomials. We are not going to touch these because they have specialized uses.\nOrder of a polynomial is an integer: 1, 2, 3, … (but in principle including zero)\nFactoring of polynomials is not a topic of general interest.\nIn calculus textbooks, there is always a section on “Taylor Series,” which are polynomials of potentially infinite order.\n\nThese are objects of mathematical interest, not of applied interest. The interest is whether and where they converge. The applicability here is that just about any function can be approximated by a polynomial and can be made equal as the order goes to infinity. Techniques here are beyond the scope of our course and rarely relevant to applications.\n\nInstead, our focus is on polynomials of finite order. And really, polynomials of low order: two or less.\n\nThese are incredibly useful in practice.\n\n\n\n\n11.2 Single-input low-order polynomials\nYou studied univariate low-order polynomials in high school. These are the constant, straight-line, and quadratic (square) functions.\nI want you to think of them as “shapes” rather than formulas. Here are the shapes:\ntextbook\nExample modeling contexts (from textbook):\n\nHow many minutes can you run as a function of speed? Concave down and downward sloping: Shape (F). In everyday terms, you wear out faster if you run at high speed.\nHow much fuel is consumed by an aircraft as a function of distance? For long flights, the function is concave up and positive sloping: Shape (D). In everyday terms: fuel use increases with distance, but the amount of fuel you have to carry also increases with distance. A heavy aircraft uses more fuel per mile.\nHow far can you walk as a function of time? Steep-then-shallow and concave down: Shape (E). Your pace slows as you get tired.\nHow does the stew taste as a function of saltiness? There is a local maximum: Shape (H). The taste improves as the amount of salt increases … up to a point. Too much salt and the stew is unpalatable.\nThe incidence of an out-of-control epidemic versus time is concave up, but shallow-then-steep. As the epidemic is brought under control, the decline is steep-then-shallow and concave up. Over the whole course of an epidemic, there is a maximum incidence. Experience shows that epidemics can have a phase where incidence reaches a local minimum: a decline as people practice social distancing followed by an increase as people become complacent.\nIn micro-economic theory there are production functions that describe how much of a good is produced at any given price, and demand functions that describe how much of the good will be purchased as a function of price. As a rule, production increases with price and demand decreases with price.\nIn the short term, production functions tend to be concave down, since it is hard to squeeze increased production out of existing facilities. Production functions are Shape (E).\nIn the short term, some consumers have no other choice than to buy the product, regardless of price. Short-term demand functions are downward sloping, but concave up: Shape C in Figure 12.1. the long term, demand functions can be concave down as consumers find alternatives to the high-priced good. For example, high prices of gasoline may, in the long term, prompt a switch to more efficient cars, hybrids, or electric vehicles. This will push demand for gas guzzlers down steeply.\n\n\n\n11.3 Multiple-input low-order polynomials\nWhat’s important to us is constructing functions with multiple inputs. We will focus on two inputs because it’s easiest to develop intuition about them and to display them graphically. But other than graphics, all the concepts apply to low-order polynomials with any number of inputs.\nHere is the general formula:\n\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{yy} y^2 + a_{xx} x^2\\]\nWe will use a standard set of names to identify the components here in the textbook.\n\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ +\n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nWhat is the order of an interaction term?\nTo be proficient, a modeler must know how to translate a modeling context into the choice of terms for a low-order polynomial. AVOID terms that you don’t need.\n[Got to here on Thursday]\n\n\n11.4 An example\nThe speed of a bicycle as a function of road steepness (\\(s\\)) and gear (\\(g\\)) selected.\n\nThere are of course many other factors that play a crucial role: power (\\(p\\)) provided by the cyclist, wind speed, tire inflation, and so on.\nIn our model today, we will consider these other factors fixed.\n\n\n11.4.1 Add in rider power\n\nAlways put in the linear time.\nAre there interactions with other variables?\nIs there an optimum power?\n\nAs a first pass, we don’t need to consider terms of order three or higher. Examples:\n\n\\(p s g\\)\n\\(p s^2\\) or \\(p g^2\\), let alone \\(p^2 s^2 g\\) (fifth order) and such.\n\n\n\n\n11.5 QUIZ"
  },
  {
    "objectID": "notes/2025-04-03-notes/index-04-03-2025.html",
    "href": "notes/2025-04-03-notes/index-04-03-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "30 2025-04-01 class notes\nReview of objects and operations:\n\n30.1 Mathematical object types\n\nQuantities. Have a unit and a Dimension e.g. L, T, L T-2 and so on.\n\nsymbolic notation: names from the start of the alphabet, names with subscripts, names with special superscripts, e.g. \\(x^\\star\\).\nparameters have their own naming conventions: \\(P, k, \\omega, \\tau\\), …\n\nSpaces. Sets of possibilities. In calculus, we are usually interested in continuous spaces such as the number line.\n\nsymbolic notation: often letters from the end of the alphabet: \\(t, u, v, w, x, y, z\\).\ndimension or “degrees of freedom.” Continuous spaces are often composed from lower-dimensional spaces. The number line has dimension 1 and is often denoted \\(\\mathbb{R}\\).\nOne notation for composed spaces looks like \\((x, y)\\). The dimension is the number of spaces involved (or, really, the sum of the dimensions of the individual spaces). Generic notation, \\(\\mathbb{R}^2\\).\nHeads up … In the linear algebra block, we will be specifying spaces using sets of vectors. Will need to distinguish between the number of vectors specified and the “rank” of the set of vectors. Also, we will see spaces with names like \\(\\vec{x}\\).\n\nFunctions. A transformation from an input space to an output space.\n\nDomain: the input space covered by the function\nRange: the output space\nWe have focussed on output spaces that are \\(\\mathbb{R}\\), but we are going to get more general. The “gradient” is a function with a higher-dimensional output space.\nNotation: - Definition \\[f(x,y,z) \\equiv \\text{some formula or algorithm involving the inputs}\\] - Refering to function, either \\(f()\\) or \\(f(x,y,z)\\).\n\n\n\n\n30.2 Operations\nThis will get a little abstract for operations that we haven’t yet encountered. Don’t worry.\n\nEvaluation. Provide quantity values to a function as inputs and recieve back the corresponding output. \\(f(a, b, c)\\) or \\(f(x_0, y_1, z_3)\\) or, as we are about to see, \\(f(\\vec{x})\\).\nVisualization. Making a graphical depiction of a function by displaying the input space and the output space.\n\nslice_plot() suitable for functions \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\)\ncontour_plot() suitable for functions \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}\\)\nBarely touched on last tem: vectorfield_plot() for functions \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}^2\\)\nAnother possible \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}^2\\) graphic is a “domain to range mapping.” This is fairly common for graphing functions with a complex number input and output. But we won’t need this.\n\nSolving, which we will call “zero-finding.” For polynomials, this is called “root finding.”\n\nThe mosaicCalc::Zeros() function handles \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\) functions.\nFor \\(\\mathbb{R}^2 \\rightarrow \\mathbb{R}\\) functions, use contour_plot() or reduce the dimension of the input space by “Currying.”\nBasic iterative method: Newton’s method $\\(x_{i+1} = x_{x} - f(x)/f'(x)\\). With linear algebra techniques, we will be able to handle \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) functions.\n\nCurrying. Reducing the dimension of the input space. We haven’t seen this much yet but will have many uses for it, for example with parametric plots for trajectories.\n\nGeneral idea: start with \\(f(x, y)\\) then restrict input to a subspace, e.g. \\(f(x, a x + b)\\). Trajectories are \\(f(x(t), y(t))\\), which is a function of \\(t\\).\n\nFinding argmaxes or argmin of an “objective function.”\n\nRead from slice plots (trivial) or contour plots.\nmosaicCalc::argM() for \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\) functions\nFor \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) functions, we will have a variety of methods: quadratic approximation, iteration.\nNewton’s method: $\\(x_{i+1} = x_{x} - f'(x)/f''(x)\\). With linear algebra techniques, we will be able to handle \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\)\nLater on, we’ll look at objectives \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}^m\\). This is handled by “constrained optimization.”\n\nDifferentiation. Takes a function \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) and gives back a function \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}^n\\).\n\nWhen \\(n = 1\\), this is just the conventional \\(\\partial_x f(x)\\)\nWhen \\(n &gt; 1\\), derivative with respect to one input is the “partial derivative.” In contrast, we sometimes differentiate with respect to all \\(n\\) inputs.this is the gradient, which is \\(n\\) functions of \\(n\\) inputs.\nFor the future … differentiating \\(n\\) functions of \\(n\\) inputs will give us \\(n^2\\) functions of \\(n\\) inputs.\n\nAnti-differentiation and accumulation/integration.\n\nSo far, we’ve only considered the anti-derivatives of the basic-modeling functions, that is finding the function whose derivative will be the one we already have in hand.\nWe’ll start this in a couple of weeks.\nIn the dynamics block, we’ll accumulate several derivatives simultaneously.\n\nConstructing functions from data\n\nSo far, we’ve done this by finding parameters, e.g. by model_train() or fitModel(). This will be an important application of linear algebra.\nMore generally, “machine-learning” methods can be applied.\nLater, we’ll look at “interpolating functions” and “smoothers” and “splines.”\n\nFuture: “Transformation” or “re-basing.” Referring to a space using a new set of coordinates.\n\nFourier transforms, singular-value-decomposition, eigenvectors\nIn physics, transformation to polar, cylindrical, or spherical coordinates is common, but we won’t touch on these."
  },
  {
    "objectID": "notes/2025-01-09-notes/index.html",
    "href": "notes/2025-01-09-notes/index.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "2 2025-01-09 class notes\n\n2.1 Where we are\n\nWe’ve talked about modeling, the construction of a mathematical representation of the context of interest. i.You had a very short time to lay out the quantities that might enter in to a model of a baseball game during a stop in the action, e.g. between innings or after a second out.\n\nYou got a glimpse that the intended purpose for a model shapes what kind of model (e.g. the quantities in (i)) is appropriate.\nA good mantra for modeling is that “All models are wrong. Some models are useful.”\n\nYou’ve gotten a brief introduction to three mathematical concepts that underlie modeling and calculus in general.\n\nQuantities (and their dimensions/units).\n\nProbably you are not completely clear on the difference between “units” and “dimensions.” Don’t worry. We will come back to it in a couple of weeks.\n\n\nFunctions, a relationship between zero or more inputs and a single output.\n\nMathematical functions with zero inputs are fairly called “constants.” But it simplifies notation if we can consider 1 or 0 or whatever to be a “function,” even though it always gives the same output.\n\nSpaces. A set of possibilities. a. Spaces have a dimension, but this use of the word is only tangentially replaced to the “dimension” associated with a quantity. b. Your intuition of position on a line (one dimensional), position in a plane (two dimensional), and position in everyday 3-dimensional space will suffice. c. The mathematical idea of “space” is an abstraction and generalization of the intuitive, everyday notion. So you’ll find yourself working with spaces that can have tens or hundreds or any (integer) number of dimensions. There is even an obscure mathematical idea of non-integer dimensions; “fractals” are best known. We will not be working with them. d. You know intuitively how to move around physical, 1-, 2-, and 3-dimensional spaces. You haven’t yet learned the methods of moving around high-dimensional spaces. Be patient.\n\n\nGo over chapter 1 reading questions.\n\n\n2.2 NOTATION: our topic for today.\nThe notation you learned in high-school involves pictures, which you have learned to interpret. There are individual tokens, say 2 and \\(x\\) as well as all the other letters, numbers, symbols. The geometrical arrangement of these tokens in a compound picture indicates what mathematical idea is being denoted. You’re used to pictures like \\(x^2\\) or \\(\\sin(2 \\pi t / P)\\). There are also pictures that are obscure until you get to higher math. For example, in Calculus, pictures like\n\\[\\int_0^\\infty \\frac{1}{x^2}dx\\]\nMany people (like me) think these picture can be beautiful, but there are several shortcomings.\n\nIt can require a lot of experience to understand the meaning of many pictures because very similar pictures can have very different meanings. For instance:\n\n\\[\\int_0^\\infty \\frac{1}{x^2}dx\\ \\text{ is a number, but } \\int_x^\\infty \\frac{1}{x^2}dx\\ \\text{is a function}.\\]\n\nThe pictograph-based notation is not easily used with computers. Most people in college-level calculus can use only a pencil or pen to draw the picture. They are devilishly tedious to type. And interpreting the picture typically relies on knowledge of the intent of the picture drawer.\nProfessionals, like me, have learned markup for typing the pictures. The most widely used professional system is TeX, which has been around for 50 years. I’m pretty fluent in TeX and can write a picture almost as fast as you can draw one. You do not need to use TeX, but knowing it gives fantastic insight into the structure of a mathematical expression.\nWe will be using a typewritten notation for communicating mathematical intent to the computer and you will gradually learn to use it for communicating with other people in the class.\nBut we will also use traditional notation, because you have already invested eight to ten years learning it. Talking to you, I’ll use the traditional notation a lot of the time, and computer notation increasingly often as we move along. Questions like, “Can you draw a picture of that expression?” are always in-bounds. But many important mathematical actions and ideas that have not standard equivalent in picture-based notation. Examples: Randomize. Repeat. Accumulate. And often, traditional mathematical instructions have to use natural language words, e.g. \n\n\\[\\text{Solve}\\ 3 x + 4 = 7\\ \\text{for}\\ x.\\]\n\nFinally, we will not have much use for the mathematical equal sign: \\(=\\). I was taught in a traditional way, with \\(=\\) all over the place. So I’ll slip up, and maybe I don’t appreciate how often I need \\(=\\).\n\nCall out “EQUALS” whenever I use \\(=\\) in mathematical notation. But we aware that our computer notation uses = from time to time, but in none of these times is it equivalent to mathematica \\(=\\).\n\n\n2.3 Kinds of things\nSome advice … Whenever you encounter a bit of notation, make sure to ask yourself what kind of thing is being represented by that notation.\n\n2.3.1 Names\nWill almost always be written using Roman letters. Some rules:\n\nNames always start with a letter. Never a numeral.\nUPPER CASE and lower case are different.\nWe will use letters idiomatically, that is, using rules of our own invention.\n\nLetters like u, v, w, x, y, z typically refer to a one-dimensional space, often the number line, but “quantity line” might be a more precise term. We’ll use number-line.\nLetters like a, b, c, A, B, C refer to specific quantities, even if we don’t yet have a specific value for that quantity in hand.\nWe will use non-numerical subscripts and superscripts, e.g. \\(x_0\\) or \\(x^\\star\\). These refer to a special point in the associated space.\nWe will use f, g, h, and a handful of others to be a pronoun for a function. We will usually write the name of a function with parentheses following the letters, e.g. f() or h().\n\n\n\n\n2.3.2 Numerals\nA numeral is the character representation of a number typically constructed from digits, the \\(-\\) sign, decimal point, etc.. Mostly this is familiar. Some numbers have representations not made of digits. You already know about \\(\\pi\\).\nSome numerals have additional characters.\n\n\n\nName\nTraditional\nComputer\n\n\n\n\nScientific notation\n\\(4.72 \\times 10^8\\)\n4.72e8\n\n\nRational numbers\n\\(\\frac{3}{4}\\)\n(3/4)\n\n\nImaginary numbers\n\\(3i\\)\n3i\n\n\n\nHow to find out if something is correct: Try the computer symbol e as a name. What do you get?\n\n\n2.3.3 Functions\nThe functions we work with will typically have a name, and often we will construct a new function and name it ourselves.\n\nTraditional notation gives you a choice: no parens, parens, some other kind of bracket.\n\n\\[ \\sin \\pi, \\ \\ \\ \\sin(\\pi), \\ \\ \\ \\ \\ \\sin[\\pi]\\]\n\nUse only the parenthesis form of a function name, e.g. \\(\\sin()\\), \\(\\log()\\), \\(\\exp()\\) or, in computer notation, sin(), log(), exp().\nWondering which logarithm \\(\\log()\\) refers to? Hold on to that. We will almost always be using the so-called “natural logarithm.” If you don’t know what this is, you are far from the only person. There’s plenty of time to find out.\nThe above style of notation can be called “functional notation.” There are very familiar functions that use a different system for notation, called infix. Infix functions, \\(+\\), \\(-\\), \\(\\times\\), \\(/\\) take two arguments, one placed on the left-hand side of the name the other on the right-hand side of the name, do not involve parentheses.\n\nExamples:\n\n\\(3+2\\) stands for something that in functional notation might be written \\(plus(3, 2)\\).\n\nYou can use infix notation in R, and there is a large number of infix functions. +, -, *, /, ||, %in$, and so on, including the “tilde” ~ that’s used to construct a “tilde expression.” (See Section 2.3.4.) You’re familiarity with traditional infix notation will get you through. Just be aware that the canonical syntax for a function is the “name followed by parentheses.”\nBy way of example of the last sentence in (b), here’s an R command that will accomplish \\(3 + 2\\): +(3, 2)`. The back-quotes (which you will never need to use) are R’s escape mechanism to allow otherwise invalid characters to be used as names.\n\n\n\n\n2.3.4 Defining functions\nHigh-school notation is incredibly sloppy when it comes to working with functions. You’ve seen \\(y = m x + b\\). Is this an equation (yes), a function defintion (sometimes), or a “constraint” (complicated).\nWe will use a consistent notation that yells at you that a function is being defined.\nTraditional notation: \\[\\text{snowfall}(t) \\equiv a t + b\\ .\\] We know that snowfall() is a function because it is a name followed immedidately by an open parenthesis. This has several components:\n\nsnowfall : the name of the function. (But in narratives the name will be written snowfall() so that we can tell immediately that the name refers to a function.)\n\\((t)\\) the function has one input, and we’re calling it \\(t\\).\n\\(\\equiv\\) means defined to be.\n\\(a t + b\\). In this case we are using a formula to define the function.\n\nYou can tell unambiguously that \\(t\\) is the input, because of the way we wrote snowfall(t) on the left side of \\(\\equiv\\).\n\\(a\\) and \\(b\\) are often called parameters. We’ll return to this later.\n\n\nComputer notation: snowfall &lt;- makeFun(a * t + b ~ t)\nThis has the same four components, but written differently.\n\nsnowfall: the name of the function.\n&lt;- a computer instruction called variously “assignment” or “naming” or “stored under the name”. The result of the computation on the right-hand side of &lt;- is the value that will be stored under that name.\nmakeFun(), the name of a computer function. These are the action verbs of computing; they do something with the arguments handed over in the parentheses. The job of makeFun() is to construct a set of computer instructions, packaging it as a function. It’s unfortunate that we use the word “function” to mean different things: 1) a mathematical relationship between inputs and an output and 2) a computer procedure that packages up computer instructions.\na * t + b ~ t. This is a special grammatical construction in the computer language called a tilde expression.\nThe name comes from the character ~.\n\nYou will use tilde expressions very extensively and for many purposes. The one here is taken apart by makeFun(). The R expression on the left-hand side of ~ is a formula, that is, a description of a computation. The R expression on the right-hand side tells makeFun() that the input name will be t.\n\n\nmakeFun() is the right tool for building functions from a formula. As we move through the course you will meet other function-building tools. Some examples (which you don’t need to understand yet):\n\nD() builds a function that is the derivative of the function specified in the tilde expression, e.g. D(snowfall(x) ~ x). I’ll demonstrate:\n\n\nsnowfall &lt;- makeFun(a * t + b ~ t)\nsnowfall\n\nfunction (t, a, b) \na * t + b\n\nD(snowfall(x) ~ x)\n\nfunction (x, a, b) \na\n\n\n\nantiD() builds the “anti-derivative” of the function specified in the tilde epxression.\n\n\nantiD(snowfall(x) ~ x)\n\nfunction (x, a, b, C = 0) \n(x^2 * a + 2 * x * b)/2 + C\n\n\n\nThere will be several others, each in good time.\n\nIF TIME, GO OVER EXERCISES."
  },
  {
    "objectID": "notes/2025-02-06-notes/index-02-06-2025.html",
    "href": "notes/2025-02-06-notes/index-02-06-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "14 2025-02-06 class notes\nI haven’t been going over the exercises. But I want to make clear that class is an appropriate place to talk about them:\n\nThings that made no sense.\nThings that you’re shakey on.\nNeed a review.\n\n\n14.1 Logarithms and digits\n\n14.1.1 The “digits()” function\nI used the name digits() for my function. But maybe, since scientific notation is a familiar in-between form, I should rely on that notation. In \\[6.32 \\times 10^{31}\\]\n31 is the exponent, 6.32 is the mantissa (and 10 is the base). Our goal with the digits function is to move the information from the mantissa into the exponent. That is, formally, we’ll use 1 as the mantissa, and allow fractional exponents so to record what previously was spread between the original mantissa and the original exponent. For instance: you can confirm that\n\\[6.32 \\times 10^{31} = 1 \\times 10^{31.80072}\\]\nWritten this way, with the formal 1 mantissa, we read off the digits from the exponent. So, digits(\\(3.2 \\times 10^{31}\\)) is 31.80072.\nNow, journey back historically to about 1580, before Napier’s invention of the logarithm. We are going to scoop Napier, but with the advantage of modern computing.\nOur goal is to create a digits() function that for input 10 will give output 1, for input 100 will give output 2, and so on. Or, as a table:\n\n\n\ninput\noutput\n\n\n\n\n1\n0\n\n\n10\n1\n\n\n100\n2\n\n\n1000\n3\n\n\n\nWe need to figure out what the output should be for an input like 3 or 59.\nSince multiplying the input by 10 raises the output by 1, we can imagine that multiplying the input by \\(\\sqrt{10}\\) will raise the output by 1/2.\nFrom ancient times, mathematicians knew how to compute the output of the sqrt() function. (We’ll see how to do this by Newton’s method in Block 3, but there is older methods, such as the Babylonian. By iteratively computing square roots we can get decimal format versions of \\(\\sqrt[16]{10}\\) or even \\(\\sqrt[256]{10}\\). Also, from ancient times, mathematicians could multiply numbers. Thus, even if tedious, we can calculate the decimal version of, say \\(10^{17/128}\\), which turns out to be 1.357727. That is, \\(10^{17/128}\\) has 1.357727 digits!\nLet’s make a lot of such numbers. The R code is not something you need to worry about.\n\nPairs &lt;- tibble::tibble(\n  basics = 2:31,\n  nice_powers = 10^(1/basics),\n  combiners = 1:30)\nMore_pairs &lt;- with(Pairs, expand.grid(nice_powers, combiners)) |&gt;\n  dplyr::rename(nice_powers = Var1, combiners = Var2) |&gt;\n  dplyr::mutate(basics = rep(2:31, times =30))\nDigits_function &lt;- More_pairs |&gt;\n  dplyr::mutate(input = (nice_powers)^combiners,\n                output = combiners/basics)\nDigits_function |&gt; \n  dplyr::filter(input &lt; 10) |&gt; \n  ggformula::gf_line(output ~ input)\n\n\n\n\n\n\n\n\n\n\n14.1.2 Logarithmic axes for graphing\nSome historical events as they are spaced over time. When there is no characteristic “scale” (e.g., a presidential term, a decade, a century), graphing the log is the way to go!\n\n\n\n\n\n\nhistorical events spaced in time\n\n\n\n\nFigure 1: Historical events spaced in time. Units are millions of years. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nTypically on a log scale such as Figure 1, the tick marks are evenly spaced and it is only the labels that show that the logarithm is being plotted. Usually the labels are given in decimal notation, as in the top scale in Figure 2. But, as you know, the labels on the bottom scale are exactly equivalent, although written in scientific notation.\n\n\n\n\n\n\nFigure 2: Exponentially spaced numbers plotted along a ruler. The bottom labels show the numbers in scientific notation. If you want to see the logarithm instead, simply look at the exponent in the scientific notation label. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nIf you use finer divisions between numbers than the factor-of-10 used in Figure 2, the decimal notation and scientific notation numbers don’t match so prettily.\n\n\n\n\n\n\nFigure 3: We can use steps smaller than the base of the log. Here the step is 0.1 log unit as opposed to the 1.0 log unit in Figure 2, the decimal equivalent of the log value seems bizarrely uneven. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nMost people are more comfortable with labels where the information is not squirreled up in the exponent, but displayed as round numbers as in #fig-labelled-1. To accomplish this, whenever ticks are spaced by smaller than a log unit, they end up being unevenly spaced.\nSometimes, as in Figure 4, only the occasional grid line is labelled, but the intermediate, unlabelled grid lines are unevenly spaced even if the labels are spaced evenly.\n\n\n\n\n\n\nFigure 4\n\n\n\nTwo different types of logarithmically labelled graphs are in wide use, as in Figure 5. Semi-log is appropriate when only one variable is “scaleless.” Log-log is when both variables are without a characteristic scale.\n\n\n\n\n\n\nFigure 5: Two types of logarithmically spaced graph paper for plotting one variable against another.\n\n\n\nEXERCISES:\n\nLabel the intermediate (unlabelled) ticks on a logarithmic axis.\nThe Figure 5 graphs are gridded on a “decade” system, that is, 1, 2, 3, …, 10, 20, 30, … 100, 200, …. What happens if we want to use a “century” system, that is 1, …, 100, …, 10000. What would be the values on the unlabelled tick marks.\n\nSolution:\nHere are the positions of 1, 2, 3, …, 10 on the unevenly spaced ticks between decades:\n\nlog10(seq(1, 10, by = 1))\n\n [1] 0.0000000 0.3010300 0.4771213 0.6020600 0.6989700 0.7781513 0.8450980\n [8] 0.9030900 0.9542425 1.0000000\n\n\nIf we want to use the same marks but have them divide a century, the evenly spaced values will be\n\nseq(1, 100, length=10)\n\n [1]   1  12  23  34  45  56  67  78  89 100\n\n\nand their logarithm positions will be\n\nlog10(seq(1, 100, length=10))\n\n [1] 0.000000 1.079181 1.361728 1.531479 1.653213 1.748188 1.826075 1.892095\n [9] 1.949390 2.000000\n\n\nWe put the ticks at these positions and could write the labels either in scientific form as \\[10^0, 10^{1.079181}, 10^{1.361728}, ...\\] or in decimal form as :\n\n10^(log10(seq(1, 100, length=10)))\n\n [1]   1  12  23  34  45  56  67  78  89 100\n\n\n\n\n\n14.2 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as primary input, and a domain as an argument.\nproduce a quantity as output\n\n\nZero-finding\n\nGuess two initial domain values and evaluate function at them.\nModify the state\n\nStraddle zero? We have a bracket. Bisection or linear interpolation (Newton’s Method)\nOtherwise: Move in the downhill direction until we have a bracket, then continue.\n\nIf move proves to be uphill, start with different initial values.\n\n\nReturn the average (or zero of the linear interpolant) of the bracketed values.\n\nOptimization in one input\n\nAlgorithm I: Gradient descent (for minimization)\n\nGuess two initial values\nPick a third in a downhill direction.\nIf the attempt to move downward results in an upward movement, now you have a bracket.\n\nAlgorithm II: Newton’s method for minimization (or maximization)\n\nGuess three initial domain values and evaluate function at them.\nFit a quadratic to the three points and find its argmin (or argmax)\nChoose the closest two of the initial values to the value in (ii) and repeat.\n\nStupid calculus algorithm: Differentiate objective function and find the zero crossing.\n\nBad because you need many function evaluations. In practice, you need a formula for the objective function to create the derivative without large number of function evaluations.\n\n\n\nFor functions of multiple inputs,\n\nZero finding follows a similar strategy.\nOptimization requires new concepts from calculus that we will start to talk about after break.\n\n\nIteration. Take a function and a state. Evaluate the function on the state to create a new state, and so on ….\n\nState is one value: a dynamical system or Newton’s method\nSometimes a state is a bracket.\n\n\n\n14.2.1 Examples\nIn each of the following code chunks, I am creating a randomly shaped function and operating on it. I might get zero or one or more rows.\n\n14.2.1.1 Zero-finding example:\n\n\n\n\n\n\n\n\n14.2.1.2 Optimization example:\n\n\n\n\n\n\n\n\n\n\n14.3 Magnitude\nScientific notation makes it easier to write very big or very small quantities.\n\nMass of the electron: 9.1093837 × 10-31 kilograms\nAvogadro’s number: 6.023 x 1023 (molecules per mol) 6.6743 × 10-11 m3 kg-1 s-2\nUniversal gravitational constant: 6.6743 × 10-11 m3 kg-1 s-2\nIdeal gas constant 8.31446261815324 J⋅K−1⋅mol−1\n\nSuch numerals come in two parts:\n\nThe mantissa, e.g. 9.1093837 or 6.023\nThe exponent, e.g. -31 or 23\n\nSometimes we need to work in settings that include a huge range of relative sizes. Here’s a table of internal combustion engines of various sizes.\n\nDT::datatable(Engines)\n\n\n\n\n\n\n14.3.1 Counting digits\n\n\n\n\n\n\n\n\n14.3.2 Computing via the axes\n\n14.3.2.1 Linear axes\nThis graph will not be informative about the engines.\n\n\n\n\n\n\n\n\n14.3.2.2 Semi-log axes\n\n\n\n\n\n\n\n\n14.3.2.3 Log-log axes\n\n\n\n\n\n\nUsing a ruler and a printed logarithmic scale\n\n\n\n\n14.4 Units and Dimensions\nThink about the kinds of physical things, e.g. velocity, force, frequency, energy, power.\nWe start out with an abstract sense of these, e.g. what’s the difference between force and velocity, or between energy and power.\nWe have a notation that enables us to construct any kind of thing by putting together powers of a very few general, simple kinds of thing: length, mass, time, money, …."
  },
  {
    "objectID": "notes/2025-02-04-notes/index-02-04-2025.html",
    "href": "notes/2025-02-04-notes/index-02-04-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "13 2025-02-04 class notes\nI haven’t been going over the exercises. But I want to make clear that class is an appropriate place to talk about them:\n\nThings that made no sense.\nThings that you’re shakey on.\nNeed a review.\n\n\n13.1 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as primary input, and a domain as an argument.\nproduce a quantity as output\n\n\nZero-finding\n\nGuess two initial domain values and evaluate function at them.\nModify the state\n\nStraddle zero? We have a bracket. Bisection or linear interpolation (Newton’s Method)\nOtherwise: Move in the downhill direction until we have a bracket, then continue.\n\nIf move proves to be uphill, start with different initial values.\n\n\nReturn the average (or zero of the linear interpolant) of the bracketed values.\n\nOptimization in one input\n\nAlgorithm I: Gradient descent (for minimization)\n\nGuess two initial values\nPick a third in a downhill direction.\nIf the attempt to move downward results in an upward movement, now you have a bracket.\n\nAlgorithm II: Newton’s method for minimization (or maximization)\n\nGuess three initial domain values and evaluate function at them.\nFit a quadratic to the three points and find its argmin (or argmax)\nChoose the closest two of the initial values to the value in (ii) and repeat.\n\nStupid calculus algorithm: Differentiate objective function and find the zero crossing.\n\nBad because you need many function evaluations. In practice, you need a formula for the objective function to create the derivative without large number of function evaluations.\n\n\n\nFor functions of multiple inputs,\n\nZero finding follows a similar strategy.\nOptimization requires new concepts from calculus that we will start to talk about after break.\n\n\nIteration. Take a function and a state. Evaluate the function on the state to create a new state, and so on ….\n\nState is one value: a dynamical system or Newton’s method\nSometimes a state is a bracket.\n\n\n\n13.1.1 Examples\nIn each of the following code chunks, I am creating a randomly shaped function and operating on it. I might get zero or one or more rows.\n\n13.1.1.1 Zero-finding example:\n\n\n\n\n\n\n\n\n13.1.1.2 Optimization example:\n\n\n\n\n\n\n\n\n\n\n13.2 Magnitude\nScientific notation makes it easier to write very big or very small quantities.\n\nMass of the electron: 9.1093837 × 10-31 kilograms\nAvogadro’s number: 6.023 x 1023 (molecules per mol) 6.6743 × 10-11 m3 kg-1 s-2\nUniversal gravitational constant: 6.6743 × 10-11 m3 kg-1 s-2\nIdeal gas constant 8.31446261815324 J⋅K−1⋅mol−1\n\nSuch numerals come in two parts:\n\nThe mantissa, e.g. 9.1093837 or 6.023\nThe exponent, e.g. -31 or 23\n\nSometimes we need to work in settings that include a huge range of relative sizes. Here’s a table of internal combustion engines of various sizes.\n\nDT::datatable(Engines)\n\n\n\n\n\n\n13.2.1 Counting digits\n\n\n\n\n\n\n\n\n13.2.2 Computing via the axes\n\n13.2.2.1 Linear axes\nThis graph will not be informative about the engines.\n\n\n\n\n\n\n\n\n13.2.2.2 Semi-log axes\n\n\n\n\n\n\n\n\n13.2.2.3 Log-log axes\n\n\n\n\n\n\nUsing a ruler and a printed logarithmic scale"
  },
  {
    "objectID": "notes/2025-03-20-notes/index-03-20-2025.html",
    "href": "notes/2025-03-20-notes/index-03-20-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "29 2025-03-20 class notes"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "UATX/MOSAIC Calculus",
    "section": "",
    "text": "This is the home page for both terms of the two-term UATX/MOSAIC Calculus sequence. The course has no specific pre-requisites and is suited both to those who have no previous experience with Calculus and those who have taken an AP or IB year-long calculus sequence. The MOSAIC Calculus sequence is designed to replace the entire multi-term traditional sequence—Calc I, II, III, differential equations, linear algebra—for STEM students and is highly relevant to economics, biology and medicine, data science, public policy, physics, and chemistry. Proof and other aspects of “pure” (theoretical) mathematics are introduced only where necessary and appropriate.\nPlease read the Basics page for course policies and such.\nHomework submission link"
  },
  {
    "objectID": "index.html#two-term-course-outline",
    "href": "index.html#two-term-course-outline",
    "title": "UATX/MOSAIC Calculus",
    "section": "Two-term course outline",
    "text": "Two-term course outline\n\nFirst term (10 weeks, winter term)\n\nPreliminaries: Quantities, spaces, functions, notation, computing\nModeling: General techniques used in constructing models, that is, building mathematical representations of real-world objects.\nDifferentiation/anti-differentiation and applications of derivatives.\n\nSecond term (10 weeks, spring term)\n\nLinear algebra (approx 3 weeks). High-dimensional spaces and their residents, projection, decomposition, transformation\nAccumulation (approx 3 weeks). Taking information about change of state and turning it into information about state.\nDynamics (approx 3 weeks). Modeling state as it evolves in time."
  },
  {
    "objectID": "index.html#day-by-day-schedule",
    "href": "index.html#day-by-day-schedule",
    "title": "UATX/MOSAIC Calculus",
    "section": "Day-by-day schedule",
    "text": "Day-by-day schedule\n\nWeek 1\n\nTuesday April 1\n\nTopics:\n\nReview: Objects and operators in calculus\nVectors and subspaces.\n\nReading: MOSAIC Calculus Chap 28\nStart Assignment 1. Due next week.\n\n\n\nThursday April 3\n\nModeling day: Review of first term\n\nWalking uphill\nFactory production\nAfter class: Assignment about walking project.\n\n\n\n\nFriday April 4\n\nTopic: Linear combinations of vectors\nReading: MOSAIC Calculus Chap 29\n\n\n\n\nWeek 2\n\nTuesday April 8\n\nTopic: Projection and residual\nReading: MOSAIC Calculus Chap 30\nStart Assignment 2. Due next week.\n\n\n\nThursday April 10\nModeling day: linear algebra\n\n\nFriday April 11\n\nReading: MOSAIC Calculus Chap 31\n\n\n\n\nWeek 3\n\nTuesday April 15\n\nReading: MOSAIC Calculus Chap 32\n\n\n\nThursday April 17\nModeling day: linear algebra 2\n\n\nFriday April 18\n\n\n\nWeek 4\n\nTuesday April 22\n\n\nThursday April 24\n\n\nFriday April 25\n\n\n\nWeek 5\n\nTuesday April 29\n\n\nThursday Map 1\n\n\nFriday May 2\n\n\n\nWeek 6\n\nTuesday May 13\n\n\nThursday May 15\n\n\nFriday May 16\n\n\n\nWeek 7\n\nTuesday May 20\n\n\nThursday May 22\n\n\nFriday May 23\n\n\n\nWeek 8\n\nTuesday May 27\n\n\nThursday May 29\n\n\nFriday May 30\n\n\n\nWeek 9\n\nTuesday June 3\n\n\nThursday June 5\n\n\nFriday June 6\n\n\n\nWeek 10\n\nTuesday June 10\n\n\nThursday June 12\n\n\nFriday June 13\n\nSchedule for Winter Term"
  },
  {
    "objectID": "projects/SVD-parliament/index-SVD-parliament.html",
    "href": "projects/SVD-parliament/index-SVD-parliament.html",
    "title": "SVD in politics",
    "section": "",
    "text": "It often happens that a variable carries little information that’s relevant to the task at hand. Even for variables that are informative, there can be redundancy or near duplication of variables. That is, two or more variables are giving essentially the same information; they have similar patterns across the cases.\nX1 X2 X3\n1   1  0  0\n2   1  1  0\n3   1 -1 -1\n4   1 -1 -1\n5  -1 -1 -1\n6   0 -1 -1\n7   0 -1 -1\n8  -1 -1 -1\n9   0  0  0\n10  1  1  1\nThe values from the Scottish Parliament voting record displayed using a color code. Each dot refers to one member’s vote on one ballot. Order is alphabetical by member, chronological by Ballot.\nSuch irrelevant or redundant variables make it harder to learn from data. The irrelevant variables are simply noise that obscures actual patterns. Similarly, when two or more variables are redundant, the differences between them may represent random noise.\nIt’s helpful to remove irrelevant or redundant variables so that they, and the noise they carry, don’t obscure the patterns that machine learning could learn.\nAs an example of such a situation, consider votes in a parliament or congress. This section explores one such voting record, the Scottish Parliament in 2008. The pattern of ayes and nays may indicate which members are affiliated, i.e. members of the same political party. To test this idea, you might try clustering the members by their voting record.\nTable @ref(tab:scot-votes-small) shows a small part of the voting record. The names of the members of parliament are the cases. Each ballot — identified by a file number such as “S1M-4.3” — is a variable. A \\(1\\) means an aye vote, \\(-1\\) is nay, and \\(0\\) is an abstention. There are more than 130 members and more than 700 ballots. It’s impractical to show all of the 100,000+ votes in a table. But there are only 3 levels for each variable, so displaying the table as an image might work. (Figure @ref(fig:raw-parliament-votes))\nIt’s hard to see much of a pattern here, although you may notice something like a tartan structure. The tartan pattern provides an indication to experts that the data could be re-organized in a much simpler way.1\nAs a start, Figure @ref(fig:ballot-values) shows the ballot values for all of the members of parliament for two randomly selected ballots. (Jittering is used to give a better idea of the point count at each position. The red dots are the actual positions.)\nPositions of members of parliament on two ballots.\nPositions of members of parliament on two ballot indices made up by the sum of groups of ballots.\nEach point is one member of parliament. Similarly aligned members are grouped together at one of the nine possibilities marked in red: (Aye, Nay), (Aye, Abstain), (Aye, Aye), and so on through to (Nay, Nay). In these two ballots, eight of the nine are possibilities are populated. Does this mean that there are 8 clusters of members?\nIntuition suggests that it would be better to use all of the ballots, rather than just two. In Figure @ref(fig:many-ballots), the first 336 ballots have been added together, as have the remaining ballots. This graphic suggests that there might be two clusters of members who are aligned with each other. Using all of the data seems to give more information than using just two ballots.\nYou may ask why the choice was made to add up the first 336 ballots as \\(x\\) and the remaining ballots as \\(y\\). Perhaps there is a better choice to display the underlying patterns, adding up the ballots in a different way.\nIn fact, there is a mathematical approach to finding the best way to add up the ballots, called “singular value decomposition” (SVD). The mathematics of SVD draw on a knowledge of matrix algebra, but the operation itself is readily available to anyone.2 Figure @ref(fig:ballot-PCA) shows the position of each member on the best two ways of summing up the ballots.\nWarning in geom_point(shape = 1, color = \"red\", size = 7, aes(x = 0, y = 0)): All aesthetics have length 1, but the data has 134 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\nThe position of each member of Parliament using the two ‘best’ ways of summing the ballots.\nFigure @ref(fig:ballot-PCA) shows, at a glance, that there are three main clusters. The red circle marks the “average” member. The three clusters move away from average in different directions. There are several members whose position is in-between the average and the cluster to which they are closest.\nFor a graphic, one is limited to using two variables for position. Clustering, however, can be based on many more variables. Using more SVD sums enables may allow the three clusters to be split up further. The color in Figure @ref(fig:ballot-PCA) above shows the result of asking for 6 clusters using the 5 best SVD sums. Table @ref(tab:scottish-clustering) compares the actual party of each member to the cluster memberships.\n# A tibble: 7 × 7\n  party     . . . . . . . . .           cl…¹   `1`   `2`   `3`   `4`   `5`   `6`\n  &lt;fct&gt;                                      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1 Member for Falkirk West                        0     0     0     1     0     0\n2 Scottish Conservative and Unionist Party       0     1     0     1     0    18\n3 Scottish Green Party                           0     0     0     1     0     0\n4 Scottish Labour                               49     5     0     2     2     0\n5 Scottish Liberal Democrats                     1     0     0     0    16     0\n6 Scottish National Party                        0     1    34     1     0     0\n7 Scottish Socialist Party                       0     0     0     1     0     0\n# ℹ abbreviated name: ¹​`party     . . . . . . . . .           cluster`\nHow well did clustering do? The party affiliation of each member of parliament is known, even though it wasn’t used in finding the clusters. For each of the parties with multiple members, the large majority of members are placed into a unique cluster for that party. In other words, the technique has identified correctly that there are four different major parties.\nWarning in geom_point(shape = 1, color = \"red\", size = 7, aes(x = 0, y = 0)): All aesthetics have length 1, but the data has 773 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\nOrientation of issues among the ballots.\nThere’s more information to be extracted from the ballot data. Just as there are clusters of political positions, there are clusters of ballots that might correspond to such factors as social effect, economic effect, etc. Figure @ref(fig:issue-clusters) a shows the position of each individual ballot, using the best two SVD sums as the x- and y-coordinates.\nThere are obvious clusters in Figure @ref(fig:issue-clusters). Still, interpretation can be tricky. Remember that, on each issue, there are both aye and nay votes. This is what accounts for the symmetry of the dots around the center (indicated by an open circle). The opposing dots along each angle from the center might be interpreted in terms of socially liberal vs socially conservative and economically liberal versus economically conservative. Deciding which is which likely involves reading the bill itself.\nFinally, the “best” sums from SVD can be used to re-arrange cases and separately re-arrange variables while keeping exactly the same values for each case in each variable. (Figure @ref(fig:SVD-ballots).) This amounts simply to re-ordering the members in a way other than alphabetical and similarly with the ballots. This dramatically simplifies the appearance of the data compared to Figure \\(\\ref{fig:raw-parliament-votes}\\). With the cases and rows arranged as in Figure @ref(fig:SVD-ballots), it’s easy to identify blocks of members and which ballots are about issues for which the members vote en bloc.\nRe-arranging the order of the variables and cases in the Scottish parliament data simplifies the appearance of the data table."
  },
  {
    "objectID": "projects/SVD-parliament/index-SVD-parliament.html#footnotes",
    "href": "projects/SVD-parliament/index-SVD-parliament.html#footnotes",
    "title": "SVD in politics",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFor those who have studied linear algebra: “Much simpler way” means that the matrix can be approximated by a matrix of low-rank.↩︎\nIn brief, SVD calculates the best way to add up (i.e. linearly combine) the columns and the rows of a matrix to produce the largest possible variance. Then SVD finds the best way to add up the what’s left, and so on.↩︎"
  },
  {
    "objectID": "projects/Gaussian-quadrature/index-gaussian-quadrature.html",
    "href": "projects/Gaussian-quadrature/index-gaussian-quadrature.html",
    "title": "Gaussian Quadrature",
    "section": "",
    "text": "Introduce Riemann sum and critique it."
  },
  {
    "objectID": "projects/Gaussian-quadrature/index-gaussian-quadrature.html#class-notes",
    "href": "projects/Gaussian-quadrature/index-gaussian-quadrature.html#class-notes",
    "title": "Gaussian Quadrature",
    "section": "",
    "text": "Introduce Riemann sum and critique it."
  },
  {
    "objectID": "projects/Gaussian-quadrature/index-gaussian-quadrature.html#software",
    "href": "projects/Gaussian-quadrature/index-gaussian-quadrature.html#software",
    "title": "Gaussian Quadrature",
    "section": "Software",
    "text": "Software\n\ngaussquad &lt;- function(f, a = -1, b = 1, order = 4, ...) {\n  foo = gausspts(order)\n  x = foo$roots\n  vals = x\n  x = ((b-a)*x + b + a)/2\n  for (k in 1:length(vals) )  vals[k] = f(x[k], ...)\n  return( (b-a)*sum(foo$coefs*vals)/2)\n}\n\ngausspts &lt;-  function(n=2){\n  if (n==1)\n    return( list(roots=0, coefs=2))\n  if (n==2)\n    return(list(roots=c(-1,1)*.57735026918963, coefs = c(1,1) ))\n  if (n==3)\n    return(list(roots=c(-1,0,1)*.77459666924148, coefs = c(5,8,5)/9 ))\n  if (n==4)\n    return(list(roots=c(-1,0,0,1)*.86113631159405 + c(0,-1,1,0)*0.33998104358486,\n                coefs = (90+c(-1,1,1,-1)*5*sqrt(30))/180))\n  if (n==5) {\n    middle = sqrt(5 - 2*sqrt(10/7))/3\n    outer =  sqrt(5 + 2*sqrt(10/7))/3\n    middlew = (322 + 13*sqrt(70))/900\n    outerw = (322 - 13*sqrt(70))/900\n    return(list(roots=c(-outer,-middle,0,middle,outer), coefs=c(outerw,middlew, 128/225, middlew, outerw)))\n    }\n  else\n    stop(\"Untabulated order for Gaussian Quadrature\")\n}\n\nSome examples:\n\n\\(\\int_{-1}^{1} \\sin(x) dx = -\\cos(1) = \\cos(-1) = 0\\)\n\n\ngaussquad(sin)\n\n[1] 5.551115e-17\n\n\n\n\\(\\int_{0}^{1} \\sin(x) dx = -\\cos(1) = \\cos(0) = 0.4596977\\)\n\n\ngaussquad(sin,0,1)\n\n[1] 0.4596977"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html",
    "href": "projects/Ranking-grades/index-grades.html",
    "title": "Ranking by grade",
    "section": "",
    "text": "The task of this modeling project is to construct a ranking of students based on their grades over a college career.\nThe data come from a small college in the US Midwest. For reasons of anonymity, student names have been replace with unique meaningless ID codes, with all the courses taken by a student and the grades received identified by that student’s code. Similarly, the instructor and department indentities are encoded. Also, only about half of the courses taken by each student are included. The students listed graduated in AY 2004/2005.\nThe data were originally in the form of three data frames in a relational database. We use data wrangling to merge them into a single data Events frame where the unit of observation is an event consisting of a single student receiving a grade in a single course.\nEvents &lt;- LSTbook::Grades |&gt;\n  left_join(LSTbook::Sessions) |&gt;\n  left_join(LSTbook::Gradepoint)\nTo orient you to the variables and their meanings, here are five randomly selected events:\nEvents |&gt; take_sample(n = 5)\n\n  grade   sessionID    sid     iid enroll dept level    sem gradepoint\n1     A session2326 S31245 inst169     20    E   100 SP2002       4.00\n2    B+ session2546 S31197 inst483     37    m   100 FA2002       3.33\n3     A session3762 S31695 inst220     20    U   400 SP2005       4.00\n4    B+ session2577 S31935 inst293     17    O   100 FA2002       3.33\n5    A- session3243 S31620 inst436     10    m   200 SP2004       3.66\nThe gradepoint variable is the numerical equivalent of the letter grade.\nOne oddity of the data is that, for a few students, courses were taken some years before the rest of the cohort. Let’s wrangle up the distribution of semesters:\nSemesters &lt;- Events |&gt; \n  mutate(sem = gsub(\"S(1|2)\", \"SP\", sem)) |&gt;\n  summarize(takers = n(), .by = sem) |&gt;\n  arrange(desc(takers)) |&gt;\n  mutate(keep = ifelse(takers &gt; 400, \"keep\", \"rid\"))\nSemesters\n\n      sem takers keep\n1  FA2002    890 keep\n2  FA2003    867 keep\n3  FA2001    826 keep\n4  SP2002    803 keep\n5  SP2003    775 keep\n6  FA2004    754 keep\n7  SP2005    629 keep\n8  SP2004    497 keep\n9  SP2001     31  rid\n10 FA2000     27  rid\n11 SP2000      7  rid\n12 FA1999      6  rid\n13 FA1993      3  rid\n14 FA1991      2  rid\n15 SP1997      2  rid\n16 SP1998      2  rid\n17 FA1997      1  rid\n18 IT1994      1  rid\n19 SP1994      1  rid\nTASK: Join Semesters with Events. Use it to remove students who took any course outside of the most populated 8 semesters.\nMost students are familiar with the GPA and its use in ranking students. Here’s the calculation written in the {dplyr} notation.\nGPA &lt;- Events |&gt;\n  summarize(gpa_raw = mean(gradepoint, na.rm = TRUE), .by = sid)\nGPA |&gt; take_sample(n = 5)\n\n     sid  gpa_raw\n1 S31566 3.841176\n2 S32025 3.534615\n3 S32391 3.854286\n4 S31443 2.553333\n5 S31437 3.712857\nTo be statistically literate, such an estimate of the GPA should come with a confidence interval. We’ll calculate the margin of error using stardard textbook formulas. In calculating the margin of error, I’ll artificially double the \\(n\\) for each student so that we get the magnitude of standard errors we would expect to see if we had all the student-grade records.\nGPA &lt;- Events |&gt;\n  summarize(gpa_raw = mean(gradepoint, na.rm = TRUE), \n            gp_var = var(gradepoint, na.rm = TRUE),\n            gp_me = 2 * sqrt(gp_var / 2 * n()),\n            .lwr = gpa_raw - gp_me,\n            .upr = gpa_raw + gp_me,\n            .by = sid) |&gt;\n  select(sid, .lwr, gpa_raw, .upr)\nGPA |&gt; take_sample(n=5)\n\n     sid       .lwr  gpa_raw     .upr\n1 S31350 -0.1491427 2.766154 5.681450\n2 S31944 -2.0870056 3.153333 8.393672\n3 S31788  2.0096387 3.586154 5.162669\n4 S31761  2.1780991 3.380769 4.583439\n5 S32340  1.8870669 3.725455 5.563842\n\nGPA |&gt; \n  arrange(gpa_raw) |&gt;\n  mutate(rank = 1:n()) |&gt;\n  gf_segment(.lwr + .upr ~ rank + rank) |&gt;\n  gf_point(gpa_raw ~ rank, color = \"red\", size=0.1)\nWe can do much the same calculation by modeling, but we’ll have to “adjust” the confidence intervals by hand to mimic data with the full collection of grades.\nGPA2 &lt;- Events |&gt; \n  model_train(gradepoint ~ sid) |&gt;\n  model_eval(data = tibble(sid = unique(Events$sid)), interval = \"confidence\") |&gt;\n  mutate(.lwr = .output - (.output - .lwr)/sqrt(2), .upr = .output + (.upr - .output)/sqrt(2))\nset.seed(101)\nGPA2 |&gt;\n  take_sample(n=5)\n\n# A tibble: 5 × 4\n  sid     .lwr .output  .upr\n  &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 S31932  2.67    2.87  3.06\n2 S31473  3.24    3.48  3.71\n3 S32019  2.47    2.66  2.86\n4 S31584  3.21    3.41  3.60\n5 S32253  3.71    3.89  4.07\nCompare GPA with GPA2:\nCompare &lt;- GPA |&gt; \n  select(sid, gpa_raw) |&gt;\n  mutate(gpa2 = GPA2$.output)\nCompare |&gt; point_plot(gpa_raw ~ gpa2)\nTASK: Let’s speculate on why registrars don’t report a GPA with a confidence interval.\nTASK: Add in some covariates: semester, class level, class size\nGPA3 &lt;- Events |&gt; \n  model_train(gradepoint ~ sid + enroll + level + sem) |&gt;\n  model_eval(data = tibble(sid = unique(Events$sid), sem=\"SP2005\", level=300, enroll=12), interval = \"confidence\") |&gt;\n  mutate(.lwr = .output - (.output - .lwr)/sqrt(2), .upr = .output + (.upr - .output)/sqrt(2))\nset.seed(101)\nGPA3 |&gt;\n  take_sample(n=5) |&gt;\n  select(sid, .lwr, .output, .upr)\n\n# A tibble: 5 × 4\n  sid     .lwr .output  .upr\n  &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 S31932  2.80    2.99  3.19\n2 S31473  3.39    3.63  3.86\n3 S32019  2.61    2.81  3.00\n4 S31584  3.37    3.56  3.76\n5 S32253  3.85    4.03  4.21\nCompare &lt;- Compare |&gt;\n  mutate(gpa3 = GPA3$.output)\nLet’s look at the extent to which dept or instructor plays a role:\nEvents |&gt; \n  model_train(gradepoint ~ enroll + level + sem + dept + iid + sid) |&gt;\n  anova_summary()\n\n# A tibble: 7 × 6\n  term         df   sumsq meansq statistic    p.value\n  &lt;chr&gt;     &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n1 enroll        1    8.42  8.42      40.3   2.33e- 10\n2 level         1    6.72  6.72      32.2   1.49e-  8\n3 sem          24   53.2   2.21      10.6   3.02e- 39\n4 dept         38  115.    3.04      14.5   4.74e- 87\n5 iid         345  231.    0.671      3.21  9.52e- 70\n6 sid         442  586.    1.33       6.35  1.33e-249\n7 Residuals  4838 1010.    0.209     NA    NA\nAnd find the “instructor-adjusted” GPA:\nGPA4 &lt;- Events |&gt; \n  model_train(gradepoint ~ sid + enroll + level + sem + dept + iid) |&gt;\n  model_eval(data = tibble(sid = unique(Events$sid), \n                           sem=\"SP2005\", level=300, enroll=12,\n                           iid = \"inst436\", dept = \"q\"), \n             interval = \"confidence\") |&gt;\n  mutate(.lwr = .output - (.output - .lwr)/sqrt(2), .upr = .output + (.upr - .output)/sqrt(2))\n\nWarning in predict.lm(model, newdata = data, type = \"response\", interval =\ninterval, : prediction from a rank-deficient fit may be misleading\nCompare &lt;- Compare |&gt;\n  mutate(gpa4 = GPA4$.output) |&gt;\n  mutate(r_gpa_raw = rank(gpa_raw),\n         r_gpa3 = rank(gpa3),\n         r_gpa4 = rank(gpa4))\n\nCompare |&gt;\n  point_plot(r_gpa_raw ~ r_gpa4)"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#a-political-problem",
    "href": "projects/Ranking-grades/index-grades.html#a-political-problem",
    "title": "Ranking by grade",
    "section": "A political problem",
    "text": "A political problem\nThe registrar would never perform such a regression. The political heat from the faculty would be too great.\nCan we construct a ranking that uses only sid, session, and gradepoint? That will let us avoid\nHow many students did each instructor teach?\n\nnstudents &lt;- Events |&gt; \n  summarize(count = n(), .by = iid) |&gt;\n  arrange(desc(count))\n\nLet’s look only at instructors with more than 10 students.\n\nKeepers &lt;-\n  nstudents |&gt;\n  filter(count &gt; 10) |&gt;\n  left_join(Events)\n\nJoining with `by = join_by(iid)`"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#method",
    "href": "projects/Ranking-grades/index-grades.html#method",
    "title": "Ranking by grade",
    "section": "Method",
    "text": "Method\nhttps://maherou.github.io/Teaching/files/CS317/masseyMethod.pdf"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#matrix-of-students-in-departments",
    "href": "projects/Ranking-grades/index-grades.html#matrix-of-students-in-departments",
    "title": "Ranking by grade",
    "section": "Matrix of students in departments",
    "text": "Matrix of students in departments\n\nTo &lt;- Keepers |&gt; select(sid, dept, gradepoint)\nM &lt;- matrix(0, nrow=40, ncol=443)\ndepts &lt;- unique(To$dept)\ndepts_inds &lt;- 1:length(depts)\nstudents &lt;- unique(To$sid)\nstudents_inds &lt;- 1:length(students)\n\n# Loop over the sessions\nfor (k in 1:length(depts)) {\n  this_session &lt;- To |&gt; filter(dept == depts[k]) |&gt; select(sid)\n  inds &lt;- which(students %in% this_session$sid)\n  M[k, inds] &lt;- 1\n}\nimage(1:ncol(M), 1:nrow(M), 1000*t(M), col = terrain.colors(5), axes = FALSE)\n\n\n\n\n\n\n\nS &lt;- svd(M)\ninds1 &lt;- order(c(S$u[,1]))\ninds2 &lt;- order(c(S$v[,1]))\nVA &lt;- M[ inds1, inds2 ]\n# assemble the first few rank-1 matrices\none &lt;- S$u[inds1,1, drop = FALSE] %*% t(S$v[inds2,1, drop = FALSE])\n\npartial &lt;- 0 # initial value\nfor (k in 1:4) {\n  partial &lt;- partial +  S$d[k] * S$u[inds1,k, drop = FALSE] %*% t(S$v[inds2,k, drop = FALSE])\n}\n\n\n\n\nimage(1:ncol(partial), 1:nrow(partial), t(partial), \n      col = scales::grey_pal(start = 0.2, end = 0.8)(15), \n      axes = FALSE)"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#matrix-of-students-in-sessions",
    "href": "projects/Ranking-grades/index-grades.html#matrix-of-students-in-sessions",
    "title": "Ranking by grade",
    "section": "Matrix of students in sessions",
    "text": "Matrix of students in sessions\n\nTo &lt;- Keepers |&gt; select(sid, sessionID, gradepoint)\nM &lt;- matrix(0, nrow=1368, ncol=443)\nsessions &lt;- unique(To$sessionID)\nsessions_inds &lt;- 1:length(sessions)\nstudents &lt;- unique(To$sid)\nstudents_inds &lt;- 1:length(students)\n\n# Loop over the sessions\nfor (k in 1:length(sessions)) {\n  this_session &lt;- To |&gt; filter(sessionID == sessions[k]) |&gt; select(sid)\n  inds &lt;- which(students %in% this_session$sid)\n  M[k, inds] &lt;- 1\n}\n\n\nimage(1:ncol(M), 1:nrow(M), 1000*t(M), col = terrain.colors(5), axes = FALSE)\n\n\n\n\n\n\n\nS &lt;- svd(M)\ninds1 &lt;- order(c(S$u[,1]))\ninds2 &lt;- order(c(S$v[,1]))\nVA &lt;- M[ inds1, inds2 ]\n# assemble the first few rank-1 matrices\none &lt;- S$u[inds1,1, drop = FALSE] %*% t(S$v[inds2,1, drop = FALSE])\n\nimage(1:ncol(one), 1:nrow(one), 1000*t(one), col = terrain.colors(5), axes = FALSE)\n\n\n\n\n\n\n\ndim((S$u[,1, drop = FALSE]))\n\n[1] 1368    1\n\ndim(S$u[,1, drop=FALSE])\n\n[1] 1368    1\n\n\n\nfoo &lt;- data.frame(index=c(t(VA)), \n  y=rep(1:443,times=1368),\n  x=rep(1:1368, each=443) )\nggplot( foo, aes(x=x, y=y, fill=index)) +\n  geom_tile() +\n  xlab(\"Class session\") + ylab(\"Student\")"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#head-to-head-competitions",
    "href": "projects/Ranking-grades/index-grades.html#head-to-head-competitions",
    "title": "Ranking by grade",
    "section": "Head-to-head competitions",
    "text": "Head-to-head competitions\n\nTo &lt;- Keepers |&gt; select(sid, sessionID, gradepoint)\nFrom &lt;- To |&gt;\n  rename(sid2 = sid,  gradepoint2 = gradepoint)\nAll &lt;- To |&gt; left_join(From) |&gt; unique()\n\nJoining with `by = join_by(sessionID)`\n\n\nWarning in left_join(To, From): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nSession_pos &lt;- All |&gt;\n  select(sessionID) |&gt;\n  unique() |&gt;\n  mutate(Session_pos = row_number())\nStudent_pos &lt;- All |&gt;\n  select(sid) |&gt;\n  unique() |&gt;\n  mutate(Student_pos = row_number())\n\nAll&lt;- All |&gt;\n  filter(sid &lt; sid2) |&gt;\n  mutate(pointdiff = gradepoint - gradepoint2) |&gt;\n  left_join(Session_pos) |&gt;\n  left_join(Student_pos) |&gt;\n  left_join(Student_pos |&gt; rename(sid2 = sid, Student2_pos = Student_pos))\n\nJoining with `by = join_by(sessionID)`\nJoining with `by = join_by(sid)`\nJoining with `by = join_by(sid2)`\n\nM &lt;- matrix(0, nrow = nrow(All), ncol = nrow(Student_pos))\n\nPos1 &lt;- All |&gt; select(Student_pos) |&gt;\n  mutate(pos = row_number() + n()*(Student_pos - 1))\nPos2 &lt;- All |&gt; select(Student2_pos) |&gt;\n  mutate(pos = row_number() + n()*(Student2_pos - 1))\nM[Pos1$pos] &lt;- 1\nM[Pos2$pos] &lt;- -1\nrankings &lt;- lm(All$pointdiff ~ M - 1)\nResult &lt;- tibble::tibble(ranking = coef(rankings), sid = Student_pos$sid) |&gt; \n  arrange(desc(ranking))\n\nCompare ranking to GPA\n\nSidebyside &lt;- Events |&gt; \n  summarize(gpa = mean(gradepoint, na.rm = TRUE), .by = sid) |&gt;\n  left_join(Result)\n\nJoining with `by = join_by(sid)`\n\nSidebyside |&gt; ggformula::gf_point(gpa ~ ranking)\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nNow we have the gradepoints in a head to head competition\n\nPairs &lt;- abs(M)\ndim(Pairs)\n\n[1] 13348   443\n\nS &lt;- svd(Pairs)\ninds1 &lt;- order(c(S$u[,1]))\ninds2 &lt;- order(c(S$v[,1]))\nVA &lt;- Pairs[ inds1, inds2 ]\nfoo &lt;- data.frame(index=c(t(Pairs)), \n  y=rep(1:443,times=13348),\n  x=rep(1:13348, each=443) )\nggplot( foo, aes(x=x, y=y, fill=index)) +\n  geom_tile() +\n  xlab(\"Class session\") + ylab(\"Student\")"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#svd-approach-not-working",
    "href": "projects/Ranking-grades/index-grades.html#svd-approach-not-working",
    "title": "Ranking by grade",
    "section": "SVD approach, not working",
    "text": "SVD approach, not working\nBreak into an array, students on vertical axis, instructors on horizontal.\nMINI- PROJect on cleaning: Who are the duplicates?\n\nMat &lt;-\n  Keepers |&gt; \n  unique() |&gt; # THERE ARE DUPLICATES\n  select(sessionID, sid, gradepoint) |&gt;\n  pivot_wider(names_from = sid, \n              values_from = gradepoint,\n              values_fn = ~ mean(.x))\nMat[is.na(Mat)] &lt;- 3.5\n\nMake into a matrix\n\nStudents &lt;- names(Mat)\nSessions &lt;- Mat$sessionID\nMat2 &lt;- Mat |&gt; select(-sessionID) |&gt;\n  unlist() |&gt; as.numeric() |&gt; \n  matrix(nrow = length(Sessions))\n\nDo the SVD\n\nres &lt;- svd( Mat2)\na1 &lt;- res$u[,1,drop=FALSE]\nb1 &lt;- res$v[,1,drop=FALSE] |&gt; t()\na2 &lt;- res$u[,2,drop=FALSE]\nb2 &lt;- res$v[,2,drop=FALSE] |&gt; t()\n\nShow the raw data\n\nlibrary(reshape2) # for melt\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\nmelt( Mat2 ) |&gt; \n  ggplot( aes(x=Var1, y=Var2, fill=value)) +\n  geom_tile() +\n  scale_fill_gradient2() +\n  xlab(\"\") + ylab(\"Student\") \n\n\n\n\n\n\n\n\nRe-arrange according to principal vectors\n\ninds1 &lt;- order(c(res$u[,1]))\ninds2 &lt;- order(c(res$v[,1]))\nSorted &lt;- Mat2[ inds1, inds2 ]\nSorted[1:50,1:50] |&gt; melt() |&gt; \n  ggplot( aes(x=Var1, y=Var2, fill=value)) +\n  geom_tile() +\n  scale_fill_gradient2() +\n  xlab(\"\") + ylab(\"Student\")"
  },
  {
    "objectID": "projects/Ranking-grades/index-grades.html#sat-scores-and-academic-performance",
    "href": "projects/Ranking-grades/index-grades.html#sat-scores-and-academic-performance",
    "title": "Ranking by grade",
    "section": "SAT scores and academic performance",
    "text": "SAT scores and academic performance\nThe College Board claims that the predictive power of the SAT on (first-year) college performance corresponds to \\(r \\approx 0.40\\).\nTo visualize what this means, let’s construct 10,000 pairs of SAT versus UATX performance that have this correlation and look at the rank of each student by both measures.\n\nn = 10000\nSimulation &lt;- tibble(\n  common = 0.4 * rnorm(n),\n  UATX = common + 0.47 * rnorm(n),\n  SAT = common + 0.47 * rnorm(n)\n)\nSimulation |&gt;\n  model_train(UATX ~ SAT) |&gt;\n  R2()\n\n      n k Rsquared        F     adjR2 p df.num df.denom\n1 10000 1 0.175413 2126.858 0.1753306 0      1     9998\n\nSimulation |&gt; point_plot(rank(UATX) ~ rank(SAT))\n\n\n\n\n\n\n\n\nPerhaps a better intuition can be had by imagining 200 applicants and looking at the performace of those in the top half of the SAT versus those in the bottom half.\n\nSimulation |&gt; \n  mutate(sat_position = ifelse(rank(SAT) &gt; n/2, \"top\", \"bottom\")) |&gt;\n  take_sample(n = 200) |&gt;\n  point_plot(rank(UATX) ~ sat_position, annot = \"model\",\n             point_ink = 0.5)"
  },
  {
    "objectID": "projects/Adaptive-quadrature/index-adaptive-quadrature.html",
    "href": "projects/Adaptive-quadrature/index-adaptive-quadrature.html",
    "title": "Adaptive Quadrature",
    "section": "",
    "text": "Translated from Sauer program 5.2 on p. 271\n\ngaussquad &lt;- function(f, a = -1, b = 1, order = 4, ...) {\n  foo = gausspts(order)\n  x = foo$roots\n  vals = x\n  x = ((b-a)*x + b + a)/2\n  for (k in 1:length(vals) )  vals[k] = f(x[k], ...)\n  return( (b-a)*sum(foo$coefs*vals)/2)\n}\n\ngausspts &lt;-  function(n=2){\n  if (n==1)\n    return( list(roots=0, coefs=2))\n  if (n==2)\n    return(list(roots=c(-1,1)*.57735026918963, coefs = c(1,1) ))\n  if (n==3)\n    return(list(roots=c(-1,0,1)*.77459666924148, coefs = c(5,8,5)/9 ))\n  if (n==4)\n    return(list(roots=c(-1,0,0,1)*.86113631159405 + c(0,-1,1,0)*0.33998104358486,\n                coefs = (90+c(-1,1,1,-1)*5*sqrt(30))/180))\n  if (n==5) {\n    middle = sqrt(5 - 2*sqrt(10/7))/3\n    outer =  sqrt(5 + 2*sqrt(10/7))/3\n    middlew = (322 + 13*sqrt(70))/900\n    outerw = (322 - 13*sqrt(70))/900\n    return(list(roots=c(-outer,-middle,0,middle,outer), coefs=c(outerw,middlew, 128/225, middlew, outerw)))\n    }\n  else\n    stop(\"Untabulated order for Gaussian Quadrature\")\n}\n\n\ntrap = function(f,a,b,...) {\n  return( (f(a,...) + f(b,...))*(b-a)/2)\n}\nsimpson = function(f,a,b,...) {\n  mid = (b+a)/2\n  x = c(a,mid,b)\n  vals = x\n  for (k in 1:3) vals[k] = f(x[k],...)\n  return( (mid-a)*sum(vals*c(1,4,1))/3 )\n}\n\nadapquad = function(f, a=-1, b=1, tol=0.005, maxn=1000, integrator=trap, ...){\n  sum=0; n=1;\n  pointlist = c(a,b) # for keeping the history --- just for display purposes\n  # the first step\n  app = integrator(f,a,b,...)\n  while (n&gt;0) {\n    cmid = (a[n]+b[n])/2; oldapp = app[n];\n    pointlist[length(pointlist)+1] = cmid\n    app[n] = integrator( f, a[n], cmid, ...);\n    app[n+1] = integrator( f, cmid, b[n], ... )\n    if (abs(oldapp - (app[n] + app[n+1])) &lt; 3*tol[n] ) {\n      sum = sum + app[n] + app[n+1]\n      n = n-1\n    } else {\n      b[n+1] = b[n]; b[n] = cmid;\n      a[n+1] = cmid;\n      tol[n] = tol[n]/2; tol[n+1] = tol[n]\n      n = n + 1\n      if (n &gt; maxn) stop(\"maxn exceeded.\")\n    }\n  }\n  return(list( val=sum, pts=sort(pointlist) ) )\n}\n\n\nExample 5.12\nUse adaptive quadrature to approximate the integral \\[ \\int_{-1}^1 (1 + \\sin( e^{3x} ) dx . \\]\n\nexample.5.12 = function(x){1 + sin(exp(3*x))}\n\nAdaptive quadrature with trapezoidal rule\n\nres = adapquad( example.5.12, a=-1, b=1, integrator=trap )\nplot( example.5.12, -1, 1, n=1000 )\npoints( res$pts, example.5.12(res$pts), pch=20)\nrug( res$pts )\n\n\n\n\n\n\n\n\nAdaptive quadrature with Simpson’s rule\n\nres = adapquad( example.5.12, a=-1, b=1, integrator=simpson )\nplot( example.5.12, -1, 1, n=1000 )\npoints( res$pts, example.5.12(res$pts), pch=20)\nrug( res$pts )\n\n\n\n\n\n\n\n\nAdaptive quadrature with Gaussian quadrature\n\nres = adapquad( example.5.12, a=-1, b=1, integrator=gaussquad )\nplot( example.5.12, -1, 1, n=1000 )\npoints( res$pts, example.5.12(res$pts), pch=20)\nrug( res$pts )\n\n\n\n\n\n\n\n\nRepeating, but with a finer tolerance:\n\nres = adapquad( example.5.12, a=-1, b=1, integrator=gaussquad, tol=0.000001 )\nplot( example.5.12, -1, 1, n=1000 )\npoints( res$pts, example.5.12(res$pts), pch=20)\nrug( res$pts )"
  },
  {
    "objectID": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html",
    "href": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html",
    "title": "Linear Algebra: Finding eigenvalues",
    "section": "",
    "text": "LEAD QUESTION: TELL me everything you know about eigenvalues and eigenvectors. What are they? Why do we study them? What are they useful for?\nStart with stories about Harry Cooper and Jon Franzen — eigenvectors are what drove them away from science.\nIn linear algebra, eigenvalues and eigenvectors are often introduced as an application of the determinant: you set up the problem \\(A x = \\lambda x\\) and then transform it into another problem, the roots of the characteristic equation \\(det( A - \\lambda I) = 0\\).\nThe theory of determinants certainly has something to say about eigenvalues, particularly for proving theorems. But once these theorems are proven, it’s not so clear what the determinant is doing for us.\nSome applications of eigenvectors and eigenvalues:\n\nThe PageRank problem.\nEigenfunctions of linear differential operators: sines and cosines, exponentials, complex exponentials. Modes of motion. Orbitals and other states in quantum mechanics.\nFace recognition software. See What is an ‘eigenface’\n\nLet’s focus on the geometry of the situation. [Fisher and Poincare had poor eyesight, couldn’t see equations written on the board, and had to figure out ways to visualize the situation in their heads.]\nBasics about Eigenvectors and Eigenvalues of a matrix \\(A\\).\n\n‘Eigen’ is German for ‘own’ or ‘individual.’ An eigenvector has its own, individual eigenvalue and it’s own, individual direction in space that is unaltered by \\(A\\). It used to be that the term ‘proper value’ was used for ‘eigenvalue.’ I presume this relates to an old meaning for ‘proper’ relating to the French ‘propre’ meaning ‘in it’s true form,’ or ‘particular or distinctively to.’\nNumerical methods date from 1929 when Von Mises published the power method.\nEigenvalues are the \\(\\lambda\\) such that \\(A x = \\lambda x\\) for some vector \\(x\\). The \\(x\\) is called the eigenvector.\nSuppose you have an invertible matrix \\(S\\). This means that the transformation performed by \\(S\\) can be undone and that the operation done by \\(A_1\\) can also be looked at in terms of another matrix \\(A_2\\) such that \\(A_1 = S A_2 S^{-1}\\). We call \\(A_1\\) and \\(A_2\\) ‘similar.’ Similar matrices have identical eigenvalues. \\[A_1 -\\lambda I = S A_2 S^{-1} - \\lambda I = S A_2 S^{-1} - \\lambda S I S^{-1} = S( A_2 - \\lambda I )S^{-1}\\] Since the determinant of a matrix product is the product of the determinants, and since \\(det(S) = 1/det(S^{-1})\\), the characteristic equations of \\(A_1\\) and \\(A_2\\) are the same.\nThis might make you think that determinants are important in calculating eigenvalues, but they are not, because the roots of the characteristic equation are not a stable route for finding eigenvalues.\nEigenvalues of a symmetric matrix are real numbers and the eigenvectors are mutually orthogonal.\nWhy are eigenvalues of interest?\n\nSome problems have a natural form \\(A x = \\lambda x\\). For instance, ranking problems of the sort encountered in web or sports rankins.\nCalculations involving matrices operating on vector ‘states’ are much simpler if they the states are written as a sum of eigenvectors. In particular, it becomes much easier to think about the evolution of the state.\nEigenvectors of differential operators are the ‘modes’ and have a physical reality. Modes (in linear systems) often have the pleasant property of evolving simply: the grow or decay exponentially as indicated by an eigenvalue.\n\nIn quantum mechanics, energies of different states are the eigenvalues of the Schr\"{o}dinger Equation: \\(H \\Psi =\nE \\Psi\\) where \\(H\\) is the Hamiltonian.\nSymmetrical matrices are important in statistics: they describe covariances and multivariate normal distributions.\nSymmetrical matrices. Why are they important?\n\nHessians. E.g. are they positive definite?\nOperators in quantum systems.\nCovariance matrix\n\n\n\nEigenvalues are the roots of the characteristic polynomial \\(det( A - \\lambda I)\\)\n\nHow to find eigenvalues and eigenvectors of a matrix A.\nSome principles:\n\nIf you know an eigenvector \\(x_\\star\\), you can find the corresponding eigenvalue \\(\\lambda_\\star\\): \\[\\lambda_\\star = \\frac{x_\\star^T A x_\\star}{x_\\star^T x_\\star}\\]\nYou can find the eigenvector \\(x_1\\) with the largest eigenvalue \\(\\lambda_1\\) by the power method. Pick some random \\(x\\) and compute \\(A^n x\\). The resulting vector will be aligned with \\(x_1\\).\nYou can find the smallest eigenvector by the inverse power method: \\((A^{-1})^n x\\). In practice, to avoid finding the inverse, solve \\(A x_{k+1} = x{x}\\) repeatedly.\nIf you know an eigenvalue \\(\\lambda_\\star\\), you can find the corresponding eigenvector. How? Shift by \\(\\lambda -\\eps\\) and use inverse power iteration.\nThe speed of convergence of the power method is proportional to the ratio of magnitudes of the first and second largest eigenvectors. For the inverse power method, it’s proportional to the ratio of magnitudes of the smallest and second smalles eigenvalues. By shifting appropriately, we can make this ratio as small as we like.\nRayleigh quotient iteration exploits this by shifting toward the eigenvalue that it is finding and using inverse power method.\nQR algorithm for symmetrical matrices. Since the eigenvectors are orthogonal, the power method pushes each vector toward the largest eigenvalue that’s an orthogonal complement to the vectors to the left, the QR part keeps things orthogonal."
  },
  {
    "objectID": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#class-notes",
    "href": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#class-notes",
    "title": "Linear Algebra: Finding eigenvalues",
    "section": "",
    "text": "LEAD QUESTION: TELL me everything you know about eigenvalues and eigenvectors. What are they? Why do we study them? What are they useful for?\nStart with stories about Harry Cooper and Jon Franzen — eigenvectors are what drove them away from science.\nIn linear algebra, eigenvalues and eigenvectors are often introduced as an application of the determinant: you set up the problem \\(A x = \\lambda x\\) and then transform it into another problem, the roots of the characteristic equation \\(det( A - \\lambda I) = 0\\).\nThe theory of determinants certainly has something to say about eigenvalues, particularly for proving theorems. But once these theorems are proven, it’s not so clear what the determinant is doing for us.\nSome applications of eigenvectors and eigenvalues:\n\nThe PageRank problem.\nEigenfunctions of linear differential operators: sines and cosines, exponentials, complex exponentials. Modes of motion. Orbitals and other states in quantum mechanics.\nFace recognition software. See What is an ‘eigenface’\n\nLet’s focus on the geometry of the situation. [Fisher and Poincare had poor eyesight, couldn’t see equations written on the board, and had to figure out ways to visualize the situation in their heads.]\nBasics about Eigenvectors and Eigenvalues of a matrix \\(A\\).\n\n‘Eigen’ is German for ‘own’ or ‘individual.’ An eigenvector has its own, individual eigenvalue and it’s own, individual direction in space that is unaltered by \\(A\\). It used to be that the term ‘proper value’ was used for ‘eigenvalue.’ I presume this relates to an old meaning for ‘proper’ relating to the French ‘propre’ meaning ‘in it’s true form,’ or ‘particular or distinctively to.’\nNumerical methods date from 1929 when Von Mises published the power method.\nEigenvalues are the \\(\\lambda\\) such that \\(A x = \\lambda x\\) for some vector \\(x\\). The \\(x\\) is called the eigenvector.\nSuppose you have an invertible matrix \\(S\\). This means that the transformation performed by \\(S\\) can be undone and that the operation done by \\(A_1\\) can also be looked at in terms of another matrix \\(A_2\\) such that \\(A_1 = S A_2 S^{-1}\\). We call \\(A_1\\) and \\(A_2\\) ‘similar.’ Similar matrices have identical eigenvalues. \\[A_1 -\\lambda I = S A_2 S^{-1} - \\lambda I = S A_2 S^{-1} - \\lambda S I S^{-1} = S( A_2 - \\lambda I )S^{-1}\\] Since the determinant of a matrix product is the product of the determinants, and since \\(det(S) = 1/det(S^{-1})\\), the characteristic equations of \\(A_1\\) and \\(A_2\\) are the same.\nThis might make you think that determinants are important in calculating eigenvalues, but they are not, because the roots of the characteristic equation are not a stable route for finding eigenvalues.\nEigenvalues of a symmetric matrix are real numbers and the eigenvectors are mutually orthogonal.\nWhy are eigenvalues of interest?\n\nSome problems have a natural form \\(A x = \\lambda x\\). For instance, ranking problems of the sort encountered in web or sports rankins.\nCalculations involving matrices operating on vector ‘states’ are much simpler if they the states are written as a sum of eigenvectors. In particular, it becomes much easier to think about the evolution of the state.\nEigenvectors of differential operators are the ‘modes’ and have a physical reality. Modes (in linear systems) often have the pleasant property of evolving simply: the grow or decay exponentially as indicated by an eigenvalue.\n\nIn quantum mechanics, energies of different states are the eigenvalues of the Schr\"{o}dinger Equation: \\(H \\Psi =\nE \\Psi\\) where \\(H\\) is the Hamiltonian.\nSymmetrical matrices are important in statistics: they describe covariances and multivariate normal distributions.\nSymmetrical matrices. Why are they important?\n\nHessians. E.g. are they positive definite?\nOperators in quantum systems.\nCovariance matrix\n\n\n\nEigenvalues are the roots of the characteristic polynomial \\(det( A - \\lambda I)\\)\n\nHow to find eigenvalues and eigenvectors of a matrix A.\nSome principles:\n\nIf you know an eigenvector \\(x_\\star\\), you can find the corresponding eigenvalue \\(\\lambda_\\star\\): \\[\\lambda_\\star = \\frac{x_\\star^T A x_\\star}{x_\\star^T x_\\star}\\]\nYou can find the eigenvector \\(x_1\\) with the largest eigenvalue \\(\\lambda_1\\) by the power method. Pick some random \\(x\\) and compute \\(A^n x\\). The resulting vector will be aligned with \\(x_1\\).\nYou can find the smallest eigenvector by the inverse power method: \\((A^{-1})^n x\\). In practice, to avoid finding the inverse, solve \\(A x_{k+1} = x{x}\\) repeatedly.\nIf you know an eigenvalue \\(\\lambda_\\star\\), you can find the corresponding eigenvector. How? Shift by \\(\\lambda -\\eps\\) and use inverse power iteration.\nThe speed of convergence of the power method is proportional to the ratio of magnitudes of the first and second largest eigenvectors. For the inverse power method, it’s proportional to the ratio of magnitudes of the smallest and second smalles eigenvalues. By shifting appropriately, we can make this ratio as small as we like.\nRayleigh quotient iteration exploits this by shifting toward the eigenvalue that it is finding and using inverse power method.\nQR algorithm for symmetrical matrices. Since the eigenvectors are orthogonal, the power method pushes each vector toward the largest eigenvalue that’s an orthogonal complement to the vectors to the left, the QR part keeps things orthogonal."
  },
  {
    "objectID": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#software",
    "href": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#software",
    "title": "Linear Algebra: Finding eigenvalues",
    "section": "Software",
    "text": "Software\nConstruct a matrix with the given eigenvalues\n\neigen_make &lt;- function(lambda = 1:4) {\n  rmat &lt;- matrix(rnorm(length(lambda)^2), nrow=length(lambda))\n  ortho &lt;- qr.Q(qr(rmat))\n  diagonal &lt;- diag(lambda)\n  t(ortho) %*% diagonal %*% ortho\n}\n\nIteration to find the dominant eigenvalue\n\n# Translated from Sauer p. 546 with small changes\npowerit &lt;- function(A, x = NULL, niters = 10){\n  if (is.null(x)) x &lt;- cbind(rnorm(ncol(A)))\n\n  # Normalize and advance, step by step\n  for (j in 1:niters) {\n    u &lt;- x / sqrt( sum(x^2) )\n    x &lt;- A%*% u\n  }\n  lam &lt;- t(u) %*% x\n  return( list(val = lam, vec = x))\n}\n\n\n# Example from p. 545\nA &lt;- cbind( c(1, 2), c(3, 2))\npowerit(A, niters = 20 )\n\n$val\n     [,1]\n[1,]    4\n\n$vec\n          [,1]\n[1,] -2.828427\n[2,] -2.828427\n\n\n\n# Inverse power iteration: finding the smallest eigenvalue\ninvpowerit = function(A,x=NULL,s=0,niters=10){\n  if (is.null(x) ) x = cbind( rnorm(ncol(A)))\n  diag(A) = diag(A)-s\n  for (j in 1:niters) {\n    u = x / sqrt( sum(x^2) )\n    x = solve( A, u)\n  }\n  lam = t(u)%*%x\n  return( list(val=s+ 1/lam, vec=x ) )\n}\n\nAn Example from p. 545. The matrix \\(A\\) there has a smallest magnitude eigenvalue of \\(-1\\).\n\ninvpowerit(A)\n\n$val\n     [,1]\n[1,]   -1\n\n$vec\n           [,1]\n[1,]  0.8320502\n[2,] -0.5547002"
  },
  {
    "objectID": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#activities",
    "href": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#activities",
    "title": "Linear Algebra: Finding eigenvalues",
    "section": "Activities",
    "text": "Activities\n\nConstruct and confirm a n x n orthogonal matrix using qr() and the qr.Q() extractor.\nMake a matrix with a given set of eigenvalues.\nDo power and inverse power iteration to confirm that you’re getting what you should from (2).\nShow that the eigenvalues of a matrix are shifted by subtracting a constant from the diagonal."
  },
  {
    "objectID": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#exercises",
    "href": "projects/Dominant-eigenvalue/index-dominant-eigenvalue.html#exercises",
    "title": "Linear Algebra: Finding eigenvalues",
    "section": "Exercises",
    "text": "Exercises\nUsing the power iteration method, find the dominant eigenvector of \\(A\\) and estimate the dominant eigenvalue.\n\n\n\n\nA.12.1.1.a = cbind( c(10,5,-1), c(-12,-5,0), c(-6,4,3) )\npowerit(A.12.1.1.a)\n\n$val\n         [,1]\n[1,] 7.402614\n\n$vec\n          [,1]\n[1,]  6.871431\n[2,]  2.269363\n[3,] -1.559530\n\n\n\nThis converges less rapidly because the two leading eigenvalues are similar in size:\n\n\nA.12.1.1.b = cbind( c(-14,-19,23), c(20,27,-32), c(10,12,-13) )\npowerit(A.12.1.1.b, niters=50)\n\n$val\n          [,1]\n[1,] -3.999996\n\n$vec\n          [,1]\n[1,] -2.309400\n[2,] -2.309399\n[3,]  2.309398\n\n\n\n\n\n\nA.12.1.1.c = cbind( c(8,12,-18), c(-8,-15,26), c(-4,-7,12) )\npowerit(A.12.1.1.c, niters=50)\n\n$val\n     [,1]\n[1,]    4\n\n$vec\n          [,1]\n[1,] -2.309401\n[2,] -2.309401\n[3,]  2.309401\n\n\n\nThis converges very slowly because the two leading eigenvalues are similar in size:\n\n\nA.12.1.1.d = cbind( c(12,19,-35), c(-4,-19,52), c(-2,-10,27))\npowerit(A.12.1.1.d, niters=50)\n\n$val\n         [,1]\n[1,] 10.00178\n\n$vec\n          [,1]\n[1,] -5.755917\n[2,] -5.769856\n[3,]  5.797735"
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html",
    "href": "projects/Walking-uphill/index-walking-uphill.html",
    "title": "Walking uphill",
    "section": "",
    "text": "In this project we’ll model the energy consumption of walking uphill. We will parameterize the walk as having distance \\(d\\) at grade (slope) \\(g\\). Our goal is to determine whether there is an optimal grade that minimizes energy consumption per altitude gained. You’ll translate your results into a recommendation to the National Park Service for designing challenging (but not too challenging!) hiking paths through a hilly terrain to reach a scenic viewpoint at the top of a hill or the crest of a ridge. Alternatively, you might want to set criteria for rating a given trial: accumulate the energy consumed in following the trail. Finally, you’ll illustrate your findings by drawing an example of a suitable route for a path."
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#modeling-framework",
    "href": "projects/Walking-uphill/index-walking-uphill.html#modeling-framework",
    "title": "Walking uphill",
    "section": "Modeling framework",
    "text": "Modeling framework\nFigure 1 shows part of a hillside in the form of a contour graph.\n\n\n\n\n\n\n\n\n\n\n\n\nA simple terrain near the top of a generic hill. The red vectors show the gradient of the function at the point marked by the root of the vector.\n\n\nFigure 1: The small blue rectangle shows how Figure 2 fits in as a small part of a larger landscape.\n\n\n\nAs simple as Figure 1 is, we’re going to simplify it even more in order to set up some terminology. One of the key strategies in calculus is to simplify a more complex picture by zooming in on a small part of the picture. In Figure 1, there is a small blue rectangle. We’re going to zoom in on this, drawing it as Figure 2.\n\n\n\n\n\n\nFigure 2: The basic geometry of the framework. Think of this picture as forming a tiny bit of the larger landscape in Figure 1.\n\n\n\nThe small blue region in Figure 1 is bounded by two vectors, one drawn with red ink and the other with black. The red vector is the gradient at the corner of the blue region. The black vector runs along the contour. That is, the black and red vectors are orthogonal.\nWe will set the coordinate system of our model based on that pair of orthogonal vectors. The \\(y\\) coordinate in Figure 2 corresponds to the steepest uphill direction, the \\(x\\) coordinate is orthogonal. We will use \\(z\\) to indicate the elevation of any point.\nDistances \\(a\\) and \\(b\\) in Figure 2 define a delimited plane. The hiker is going to walk along the diagonal \\(d\\) of the delimited plane. That will place the hiker at elevation \\(c\\) relative to the starting point.\nThe grade of the inclined plane, going in the steepest direction, is \\(c/b\\), where \\(c\\) is the height of the top of the inclined plane, and \\(b\\) is the \\(y\\)-coordinate of the top. A person desiring to find a shallower grade can walk obliquely, as in path \\(d\\). The red dashed line shows the route of this path on the \\(x,y\\)-plane, the the person is also ascending as they go up the path. So, starting with coordinate \\((x=0, y=0, z=0)\\), the person walking up path d will end up at coordinate \\((x=a, y=b, z=c)\\). Thus, the length of path d will be \\(\\sqrt{a^2 + b^2 + c^2}\\).\nThe grade of path d is the vertical distance divided by the horizontal distance (that is, the distance in the \\(x,y\\)-plane). This distance is \\(\\sqrt{a^2 + b^2}\\), so the grade of path d is \\(g_{path} = c / \\sqrt{a^2 + b^2}\\)."
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#energy-used",
    "href": "projects/Walking-uphill/index-walking-uphill.html#energy-used",
    "title": "Walking uphill",
    "section": "Energy used",
    "text": "Energy used\nThe energetics of human locomotion has been studied extensively by exercise physiologists. The literature is substantial, but here are three sources to inform your model.\n\nAlberto Minetti et al., (2002) “Energy cost of walking and running at extreme uphill and downhill slopes” J Appl Physiol 93:1039–1046 link. See their Figure 1 and note that the “m” in the units of the vertical axis refers to meters and not minutes.\nLindsay W. Ludlow and Peter G. Weyand (2016) “Energy expenditure during level human walking: seeking a simple and accurate predictive solution” J Appl Physiol 120: 481–494 link They propose a model of power consumed when walking at velocity \\(V\\) on a grade \\(g\\) for a person of height \\(h\\) that appears to be quite close to the experimental data: \\[P = P_\\text{resting} + 3.8 + 6.1 \\frac{V^2}{h}\\ .\\] See Figure 3E and F.\nThe American College of Sports Medicine (ACSM) “Guidelines for Exercise Testing and Prescription” (behind a paywall) gives a straightforward formula which, for compatibility with (i) and (ii) we will translate to the form of metabolic power consumed in walking: \\[P = (h + w g_{path}) V\\], where \\(P\\) is power and \\(V\\) is velocity. The parameters \\(h\\) and \\(w\\) have values near \\(h=0.1\\) and \\(w=1.8\\). (No units are given for \\(h\\) and \\(w\\), although their physical u-dimensionality is easily found from the formula.) Figures 3A and B in Ludlow shows the ACSM model compared to experimentally measured power consumption.\n\nFor simplicity, we’ll work through the consequences the ACSM model\n\nWhat is the dimension of \\(g\\)?\n\n\n  walking-uphill-1 \n\n   dimensionless        \\(L\\)        \\(L^2\\)        \\(LT\\)         \n\n\n\n\n\nWhat is the dimension of \\(E/d\\)?\n\n\n\n\n&lt;small style=\"color: grey;\" id=\"walking-uphill-2-hintarea\"&gt;walking-uphill-2&lt;/small&gt;\n\n\n\n \\(MLT^{-2}\\)\n\n\n \\(ML^2T^{-2}\\)\n\n\n \\(M^2 L^2 T^2\\)\n\n\n \\(M L^2 T^2\\)"
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#applying-the-geometry",
    "href": "projects/Walking-uphill/index-walking-uphill.html#applying-the-geometry",
    "title": "Walking uphill",
    "section": "Applying the geometry",
    "text": "Applying the geometry\nOur goal is to find path grade \\(g_{path}\\) that will minimize the energy used to ascend a given height. For simplicity, let’s assume that the height is 100 m.\nSuppose the path has a grade \\(g_{path}\\) and reaches a height of 100m. The distance \\(d\\) in meters travelled along the path will be \\(g_{path} d = 100\\) meters\n\nIf the distance travelled along the path (solid red line in Figure 1) is \\(d\\) meters, what is the length of the horizontal trace of the path (the dashed red line in Figure 2), given that the change in height is 100 meters?\n\n\n\n\n&lt;small style=\"color: grey;\" id=\"walking-uphill-3-hintarea\"&gt;walking-uphill-3&lt;/small&gt;\n\n\n\n \\(\\sqrt{d^2 - 100^2}\\)\n\n\n \\(\\sqrt{d^2 + 100^2}\\)\n\n\n \\(d\\)\n\n\n Need additional information\n\n\n\n\n\n\n\nWhat is the grade of the path when the length of the path \\(d\\) meters?\n\n\n\n\n&lt;small style=\"color: grey;\" id=\"walking-uphill-4-hintarea\"&gt;walking-uphill-4&lt;/small&gt;\n\n\n\n \\(g(d) \\equiv 100 / \\sqrt{d^2 - 100^2}\\)\n\n\n \\(g(d) \\equiv 100 / \\sqrt{d^2}\\)\n\n\n \\(g(d) \\equiv \\sqrt{d^2 - 100} / 100\\)\n\n\n \\(100^2 / (d^2 - 100^2)\\)\n\n\n\n\n\n\nAccording to the ACSM formula, the energy consumed in gaining an altitude of 100m over a path of length \\(d\\) is \\[E(g, d) = (h + v g)d\\]\nSince we have a formula for the grade as a function of distance, \\(g(d)\\), we can re-write the ACSM energy formula as a function only of \\(d\\). Find that formula for \\(E(d)\\) and then program it as the function Energy() in the sandbox. Then make a plot of Energy(d) and locate the extremum by reading the graph. (You may have to zoom in on the domain. And remember, since the vertical climb is 100 meters, the shortest possible \\(d\\) is—straight up the cliff!—100 meters.)\n\n\n\nListing 1\n\n\n\n\n\n\n\n\n\n\n\nIt’s a little easier to find the argmin of \\(d\\) by calculating the derivative of Energy() with respect to d and looking for a zero crossing. Try that."
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#extension-mini-projects",
    "href": "projects/Walking-uphill/index-walking-uphill.html#extension-mini-projects",
    "title": "Walking uphill",
    "section": "Extension mini-projects",
    "text": "Extension mini-projects\n\nDo the optimization using the Ludlow formula. Does the optimal grade depend substantially on the person’s height \\(h\\)?\nMinetti et al. give a formula for the energy cost (per meter gain in elevation) of walking uphill at gradient \\(g\\)\n\n\\[C_w(g) \\equiv 280.5\\ g^5 - 58.7\\ g^4 - 76.8\\ g^3 + 51.9\\ g^2 + 19.6\\ g + 2.5\\] Perform the optimization using this formula. Note that the energy cost is denominated in terms of “per 1 meter gain” in elevation, so you will need to relate \\(g\\) and \\(d\\) to the elevation gain. (Note that the model form is a 5th-order polynomial! Could a piecewise linear model have been used to the same effect? Are there wiggles in the polynomial model."
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#interpreting-the-optimal-grade",
    "href": "projects/Walking-uphill/index-walking-uphill.html#interpreting-the-optimal-grade",
    "title": "Walking uphill",
    "section": "Interpreting the optimal grade",
    "text": "Interpreting the optimal grade\nBy solving the minimization problem, you have found the optimal grade. In communicating your result, you should place it in context. For instance …\n\nThe ACSM values of \\(h=0.1\\) and \\(v=1.8\\) are estimates. Presumably there is some variation from one person to another as well as uncertainty in the estimate itself.\nThe minimum might be sharp or broad. This is a question of how much changing the input value changes the output value.\n\nHow to take these matters into account when giving your recommendation for an optimal grade? Here are some ideas.\nThe ACSM is the American College of Sports Medicine. Presumably the people they studied are athletes, not necessarily typical visitors to a national part.\n\nDo you think a typical park visitor would have larger or smaller \\(v\\) than an athlete? It’s reasonable to think that \\(v\\) might be different by a factor of 3 in non-athletes. How does such a change in \\(v\\) change the argmin grade and the min of the energy?\n\n\n\nIt may not be important to operate exactly at the argmin. What’s important is that the energy expended not be crazy bad.\n\nOne way to think about how acceptable is a grade is to think about how sensitive the output of the energy function is to a change in grade. Pick some percentage change that you regard as hardly likely to be noticed by a park visitor. (Give some justification for your selected percentage, but of course there is no exact right choice.) Translate your percentage into a range of distances \\(d\\) that is consistent with a change in output less than your percentage. Then convert the range in \\(d\\) to a range in \\(g\\)."
  },
  {
    "objectID": "projects/Walking-uphill/index-walking-uphill.html#communicating-your-result",
    "href": "projects/Walking-uphill/index-walking-uphill.html#communicating-your-result",
    "title": "Walking uphill",
    "section": "Communicating your result",
    "text": "Communicating your result\nConsider three levels of communication:\n\nYou report the argmin grade \\(g\\) only. This provides the reader of your report with no context. Must the grade be exactly that? Try to avoid such narrow communication.\nYou report a range of acceptable grades. This way if the path designer runs into some problem with a particular path, he or she can consider reasonable alternatives.\nYou report (2), but you also translate that into terms that will be comfortable for a decision-maker who is not mathematically trained. (You might be surprised how many well-educated people do not assimilate percentages well.)\n\nOne way to help people visualize your recommended grade … Pick a few real-world examples of paths, both steep and shallow. For example, there’s the Manitou incline near Colorado Springs as an example of a steep hike. Heartbreak Hill in the Boston Marathon has earned its name. Another example, pick a couple of streets in San Francisco, perhaps one with a cable-car running along it.\n\nReport your results in the form of a table showing your recommendations alongside the real-world examples.\n\n\nDraw some example paths on a real terrain. To support you in this task, here is a contour map of some imagined parkland. The contours are spaced 10 meters apart vertically and the axes give (horizontal) distance in meters.\n\nTranslate the upper and lower bounds of your grade interval (as in (2)) into a number of meters you must walk horizontally to go from one contour to the next. For instance, suppose your grade interval translate into 50 meters to 75 meters horizontally. (But use your own grade interval.)\nMark off on a ruler the horizontal distance that must be covered in going from one contour to another. (The red vertical bar in the top left is 50 meters long, the blue is 30 meters.) Then, from the starting point of the path, use that horizontal distance to connect to the next highest contour. Continue on from there, one contour at a time. If you find that the horizontal distance isn’t sufficient to reach the next contour, then your grade will be shallower than the most efficient one. So be it.\nAfter printing out this imagined map use the method in the previous paragraph to draw a path connecting the starting point for the path to the scenic outlook at the top of the hill at a grade that is as close as you can get to the bottom bound on efficient grade that you found. Then draw another path at the top bound for efficient grade. Hand in your maps.\n\n\n\n\n\nWarning: All aesthetics have length 1, but the data has 10000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\nAll aesthetics have length 1, but the data has 10000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\nAll aesthetics have length 1, but the data has 10000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\nAll aesthetics have length 1, but the data has 10000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\nAll aesthetics have length 1, but the data has 10000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: The terrain on which to draw paths between the start and the point at the top of the hill. PDF version for printing"
  },
  {
    "objectID": "projects/Life-tables/index-life-tables.html",
    "href": "projects/Life-tables/index-life-tables.html",
    "title": "Life tables",
    "section": "",
    "text": "See https://dtkaplan.github.io/MC-Workbook/Block-3-models.html"
  },
  {
    "objectID": "projects/TEMPLATE/index-TOPIC.html",
    "href": "projects/TEMPLATE/index-TOPIC.html",
    "title": "Subject: TOPIC",
    "section": "",
    "text": "Notes about topic"
  },
  {
    "objectID": "projects/Cobb-Douglas/index-Cobb-Douglas.html",
    "href": "projects/Cobb-Douglas/index-Cobb-Douglas.html",
    "title": "Factory production",
    "section": "",
    "text": "In the 1920s, economists Paul Douglas (University of Chicago) and Charles Cobb (Amherst College) undertook a study of the growth in US production value and the relative contributions of capital (e.g. machines, factories) and labor. This required a considerable effort in collecting and standardizing data on production, capital, and labor over about a quarter century. The paper reporting their results, “A Theory of Production” American Economic Review 1928 18(1), introduced a mathematical model of production that has become famous.\nThe data are nicely summarized by “Chart I” from the paper:\n\n\n\n\n\n\nFigure 1\n\n\n\nExamine Chart I to characterize mathematically the growth of capital, labor, and physical product over the 23-year period. What functional forms (\\(K(t)\\), \\(L(t)\\), \\(P(t)\\)) are appropriate given the types of axes used. State appropriate parameter values to approximate the general trends in each of the three functions.\nThe appropriate form for a model depends on the purpose for which the model is intended. Two of the questions they asked in their paper are:\n\n“May it be possible to determine … the relative influence upon production of labor as compared with capital?”\n“Can we measure the probable slopes of incremental product which are imputed to labor and to capital and thus give greater definiteness to what is at present purely an hypothesis with no quantitative values attached.” The hypothesis mentioned is often called the diminishing marginal return of the factors of production.\n\nHere are the data upon which “Chart I” is based:\n\nPKLdata &lt;- tibble::tribble(\n  ~ year, ~ product, ~labor, ~ capital, \n  1899, 100, 100, 100,\n  1900, 101, 105, 107, \n  1901, 112, 110, 114, \n  1902, 122, 118, 122, \n  1903, 124, 123, 131, \n  1904, 122, 116, 138, \n  1905, 143, 125, 149, \n  1906, 152, 133, 163, \n  1907, 151, 138, 176, \n  1908, 126, 121, 185, \n  1909, 155, 140, 198, \n  1910, 159, 144, 208, \n  1911, 153, 145, 216, \n  1912, 177, 152, 226, \n  1913, 184, 154, 236, \n  1914, 169, 149, 244, \n  1915, 189, 154, 266, \n  1916, 225, 182, 298, \n  1917, 227, 196, 335, \n  1918, 223, 200, 366, \n  1919, 218, 193, 387,\n  1920, 231, 193, 407,\n  1921, 179, 147, 417,\n  1922, 240, 161, 431,\n)\n\n\nPKLdata |&gt;\n  mutate(predicted = 0.25*capital + 0.75*labor) |&gt;\n  gf_point(capital ~ year) |&gt;\n  gf_line(capital ~ year) |&gt;\n  gf_point(labor ~ year, color = \"blue\") |&gt;\n  gf_line(labor ~ year, color = \"blue\") |&gt;\n  gf_point(product ~ year, color = \"magenta\") |&gt;\n  gf_line(product ~ year, color = \"magenta\") |&gt;\n  gf_line(predicted ~ year, color = \"red\") |&gt;\n  gf_refine(scale_y_log10())\n\n\n\n\n\n\n\nMod &lt;- PKLdata |&gt;\n  model_train(log10(product) ~ log10(labor) + log10(capital) - 1) \nMod |&gt; R2()\n\n   n k  Rsquared        F     adjR2 p df.num df.denom\n1 24 1 0.9998847 190741.3 0.9998794 0      1       22\n\nMod |&gt; conf_interval()\n\n# A tibble: 2 × 4\n  term            .lwr .coef  .upr\n  &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 log10(labor)   0.655 0.751 0.848\n2 log10(capital) 0.163 0.252 0.341\n\n\nBootstrapping the distribution of coefficients:\n\nSims &lt;-   \n  PKLdata |&gt; \n  take_sample(replace = TRUE) |&gt;\n  model_train(log10(product) ~ log10(labor) + log10(capital) - 1) |&gt;\n  conf_interval() |&gt;\n  select(term, .coef) |&gt;\n  trials(100)\nSims |&gt; \n  tidyr::pivot_wider(id_cols = .trial, \n                     names_from = term, \n                     values_from = .coef) |&gt;\n  gf_point(`log10(labor)` ~ `log10(capital)`, alpha = 0.2) |&gt;\n  gf_abline(slope = -1, intercept = 1, color = \"red\")\n\n\n\n\n\n\n\n\nThe Cobb-Douglas production function is a simple mathematical model of how labor \\(L\\) and capital \\(K\\) jointly contribute to the production level \\(P\\): \\[P(L, K) \\equiv A K^\\alpha L^{1-\\alpha}\\]\nFor simplicity, imagine that capital and labor are both measured in dollars per year—the amount that the labor force is paid in a year and the amount that one could rent a factory for a year.\n\nIf production \\(P(L, K)\\) is also measured in dollars per year (say, the value of the factory output each year), what is the dimension of the constant \\(A\\)?\nAccording to the model, what happens to production if both \\(K\\) and \\(L\\) are increased by a factor constant factor \\(\\beta\\)? (Hint: Substitute in \\(K \\rightarrow \\beta K\\) and \\(L \\rightarrow \\beta L\\) and simplify.)\nConsider a particular factory with \\(A = 2.5\\) and exponent \\(\\alpha = 0.33\\). Using Listing 1, implement the function \\(P (K, L)\\).\n\n\n\n\nListing 1\n\n\n\n\n\n\n\n\n\n\n\nUse your function to compute the production of the factory for \\(K = 10\\) and \\(L=20\\). Confirm that you get \\(P(K=10,L=20)= 39.78\\)\n\nA factory that rents for $10/yr and where the labor costs $20/yr is silly. Calculate the value \\(P (K, L)\\) when \\(K\\) is $10 million/yr and \\(L\\) is $20 million/yr.\n\nWe’ll stick with numbers like \\(K = 10\\) and \\(L = 20\\) to keep things easy to read, but feel free to interpret them as “millions of dollars.”\nCongratuations! Based on your ability to use the Cobb-Douglas model, you’ve been promoted to manager of the factory. One of your jobs is to decide how to balance expenditures on capital and labor to raise productivity.\nOne basic question is what happens when you raise either capital or labor, holding the other one constant. Using appropriate partial derivatives evaluated at \\(K = 10\\), \\(L = 20\\), calculate:\n\nThe rate at which an increase in spending on labor will increase productivity.\nThe rate at which an increase in spending on capital will increase productivity.\nBased on the above, if you had to choose between spending on capital or labor, and your goal is to increase productivity as much as possible, which would you spend on, capital or labor?\n\n\n\n\nListing 2\n\n\n\n\n\n\n\n\n\n\n\nYour economist friend tells you to watch out for “diminishing marginal returns.” This means that, as you increase spending on either labor or capital, the rate of increase in production tends to diminish. You’ll still get increased production as you increase spending, but it won’t increase as fast at high levels of expense as at low levels.\n\nCompute the partial derivative of production with respect to labor at a higher level of labor, say \\(L = 21\\), but holding \\(K = 10\\). How does the value of the derivative at \\(L = 21\\) compare to that at \\(L = 20\\)? Is this consistent with the idea of “diminishing marginal returns” for labor?\nDo the same for the partial derivative of production with respect to capital, evaluated at \\(L = 20\\) and \\(K = 11\\). How does the value of the derivative at \\(K = 11\\) compare to that at \\(K = 10\\). Is this consistent with the idea of “diminishing marginal returns” for capital?\nUse an appropriate partial second derivative to find the rate of diminishing partial returns for labor at \\(L = 20\\) and \\(K = 10\\). Show that it is consistent with the difference you got in Part (d).\n\n\n\n\nListing 3\n\n\n\n\n\n\n\n\n\n\n\n\nUse an appropriate partial second derivative to find the rate of diminishing partial returns for capital at \\(L = 20\\) and \\(K = 10\\). Show that it is consistent with the difference you got in Part (3).\nYou might think of the rate of increase in production with respect to labor as the “value rate” of labor. Similarly, the rate of increase in production with respect to capital is the value rate of capital. Due to diminishing marginal returns, an increase in labor spending, holding capital constant, decreases the value rate of labor. Similarly, an increase in capital spending holding labor spending constant decreases the value rate of capital.\n\nBut what happens to the value rate of labor when capital spending is increased? You can answer this by comparing the value rate of labor, \\(\\partial_L P\\) , at two different capital spending levels, say \\((K = 10,L = 20)\\) and \\((K = 11,L = 20)\\). Notice that even though you’re looking at the rate with respect to labor, you’re changing the expenditure on capital.\n\n\n\nListing 4\n\n\n\n\n\n\n\n\n\n\n\n\nCompare \\(\\partial_L P\\) at slightly different values of \\(K\\) , holding \\(L\\) constant at 20. Does the value rate of labor increase or decrease with spending on capital?\nSimilarly, compare \\(\\partial_K P\\) at slightly different values of \\(L\\), holding \\(K\\) constant at 20. Does the value rate of labor increase or decrease with spending on capital?\nFinally, construct and evaluate the mixed partial derivative, $_L _K P at \\(K = 10\\), \\(L = 20\\). Compare this to the results you got for the way \\(\\partial_K P\\) changes with increasing \\(L\\) and the way \\(\\partial_L P\\) changes with increasing \\(K\\).\n\n\nConcrete production: https://www.ijrbsm.org/pdf/v2-i5/4.pdf"
  },
  {
    "objectID": "projects/Life_expectancy/index-Life-expectancy.html",
    "href": "projects/Life_expectancy/index-Life-expectancy.html",
    "title": "Life expectancy",
    "section": "",
    "text": "SciComp2009 2009-04-30"
  },
  {
    "objectID": "projects/Automatic-differentiation/index-AD.html",
    "href": "projects/Automatic-differentiation/index-AD.html",
    "title": "Automatic differentiation",
    "section": "",
    "text": "We would teach the “rules” differently if using a different notation.\nA straightforward numerical technique for evaluating the derivative of a function at the same time that the function itself is created.\nThe basic idea is this: suppose that you have a value \\(y(x)\\) along with its derivative \\(dy/dx\\). When you compute \\(z = f(y)\\), you can compute \\(dz/dx\\) pretty simply: \\(dz/dx = f'(y) dy/dx\\). Now you have \\(z\\) and \\(dz/dx\\), which can be used in additional computations.\nFor binary operations, e.g., \\(w = y + z\\), there are similar rules for the derivative: \\(dw/dx =\ndy/dx + dz/dx\\).\nThe following code sets up a data type called that holds the value along with its derivative. It then defines a series of functions (e.g., exp, ln, …) where \\(f'\\) is known to override the native functions.\n\n# functions for automatic differentiation\nas.ad = function(first, second=1){ \n  foo = list(first = first, second=second)\n  class(foo) = 'ad'\n  return(foo)\n}\n\nNext, define the binary and unary functions in a way that carries forward the derivative.\n\n\"+.ad\" = function(a,b){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (is.numeric(b)) b = as.ad(b, 0)\n  res = as.ad( a$first+b$first, a$second+b$second ) \n  return(res)\n}\n\"-.ad\" = function(a,b){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (is.numeric(b)) b = as.ad(b, 0)\n  res = as.ad( a$first-b$first, a$second-b$second ) \n  return(res)\n}\n\"*.ad\" = function(a,b){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (is.numeric(b)) b = as.ad(b, 0)\n  res = as.ad( a$first*b$first, a$second*b$first + a$first*b$second ) \n  return(res)\n}\n\"/.ad\" = function(a,b){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (is.numeric(b)) b = as.ad(b, 0)\n  f = a$first/b$first  \n  res = as.ad( f, (a$second - f*b$second)/b$first ) \n  return(res)\n}\npow.ad = function(a,b){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (is.numeric(b)) b = as.ad(b, 0)\n  k = log(a$first)\n  f = exp(b$first*k) \n  res = as.ad( f, f*(k*b$second + b$first*a$second/a$first))\n  return(res)\n}\n\"^.ad\" = function(a,n){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  if (n &gt;= 1) {\n     k = a$first^(n-1)\n     res = as.ad( k*a$first, n*k*a$second)\n  } else {\n     f = a$first^n\n     res = as.ad( f, n*f*a$second/a$first )\n  }\n  return(res)\n}\nsqrt.ad = function(a) {\n  if (is.numeric(a)) a = as.ad(a, 0)\n  f = sqrt(a$first)\n  res = as.ad( f, a$second/(2*f))\n  return(res)\n}\nexp.ad = function(a){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  f = exp(a$first)\n  res = as.ad( f, f*a$second)\n  return(res)\n}\nlog.ad = function(a){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  res = as.ad( log(a$first), a$second/a$first)\n  return(res)\n}\nabs.ad = function(a){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  res = as.ad( abs(a$first), sign(a$first)*a$second)\n  return(res)\n}\nsin.ad = function(a){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  res = as.ad( sin(a$first), cos(a$first)*a$second)\n  return(res)\n}\ncos.ad = function(a){\n  if (is.numeric(a)) a = as.ad(a, 0)\n  res = as.ad( cos(a$first), 0-sin(a$first)*a$second)\n  return(res)\n}\n\nprint.ad = function(a) {\n  hoo = cbind( a$first, a$second)\n  colnames(hoo) = c('Value', 'Deriv')\n  print(hoo)\n  invisible(a)\n}\n\nTo carry out a computation, just use the above defined functions rather than the native functions. This is done automatically if the type of a quantity is ``ad.’’\nFor example, here is the variable \\(x\\) with value 3 written as an ``ad’’\n\nx = as.ad(3)\nx\n\n     Value Deriv\n[1,]     3     1\n\n\nNotice that the derivative of this value with respect to \\(x\\) is 1. It’s important to remember that \\(x\\) is not a constant, it is a variable whose value is 3.\nTo illustrate, calculate \\(x + 2\\). The value should be 5, and the derivative with respect to \\(x\\) should be 1:\n\nx + 2\n\n     Value Deriv\n[1,]     5     1\n\n\nMore complicated derivatives:\n\nx^2\n\n     Value Deriv\n[1,]     9     6\n\nabs(x)\n\n     Value Deriv\n[1,]     3     1\n\nabs(x-5)\n\n     Value Deriv\n[1,]     2    -1\n\nsin(x)\n\n       Value      Deriv\n[1,] 0.14112 -0.9899925\n\nsin(x)^2 + cos(x)^2\n\n     Value Deriv\n[1,]     1     0\n\nsin(x^2 + abs(x) - cos(abs(x))^2)\n\n          Value     Deriv\n[1,] -0.9997038 0.1635667\n\n\nThis approach to differentiation can be extended to 2nd (and presumably higher-order) derivatives, and to Jacobians and Hessians."
  },
  {
    "objectID": "projects/Present-value/index-present-value.html",
    "href": "projects/Present-value/index-present-value.html",
    "title": "Present and future value",
    "section": "",
    "text": "See https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Manifestations/51-future-value.html"
  },
  {
    "objectID": "projects/Probability/index-probability.html",
    "href": "projects/Probability/index-probability.html",
    "title": "Bayesian updating",
    "section": "",
    "text": "See https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Manifestations/50-probability.html"
  },
  {
    "objectID": "mosaic.html",
    "href": "mosaic.html",
    "title": "UATX, Innovation, STEM & MOSAIC",
    "section": "",
    "text": "University of Austin is founded on several principles. Among these is a conviction that many of the problems in higher education can best be solved by starting a new institution that is free to innovate creatively and productively.\nAn important locus for innovation is STEM education, especially traditional structures that do not correspond to the needs of a technically educated person in today’s world. The problems begin with calculus. Emerging from the Enlightenment world of the 1700s, calculus powered developments in science that form the basis of much of contempory life, for instance the technology of engines, electricity, and communication. The first calculus textbook was published in 1696. Its contents are recognizably present in today’s Calc I course despite the advent of technologies that were unimagined when the book was written. Even the simple pencil is more modern, but the epoch-changing technology is the computer. Among all the other things, computers enable a restructuring of the concepts of calculus that make them more accessible and applicable to real-world problems.\nUniversities are famously allergic to change in existing curricula. Calculus, as it became more applicable to more settings and topics, grew by accretion over two and a half centuries: adding a second course, then a third, and then for STEM students a fourth and fifth. The content of these courses was set by theoretical mathematicians who, understandably, focus on their own professional interests and the aesthetic of their discipline.\nIt’s illuminating to think of these courses in terms of dishes a meal. But unlike a real meal, the order content of the dishes is not coordinated and regulated to make a palatable and digestible whole. It’s just one plate of food after the other. The result would be predicable to a diner: most people are full after the first plate and leave the table. A few, with hearty digestions, can stomach the second and sometimes the third plate, but there is no room left for dessert.\nTo create a sensible meal for STEM students, we need to reduce the number of dishes and pay attention to what we know today about nutritional content. For instance, the five-plate traditional meal has no room for data and statistics, machine learning and other modern mathematical technologies, or even computing.\nBased on preliminary curricular work in the 1990s, Project MOSAIC was funded in 2009 by the US National Science Foundation to design a modern meal suited to modern needs and appetites. Important additional work was sponsored by the US Air Force Academy. The MOSAIC is constructed by shattering the traditional plates, picking the important pieces out and re-arranging them and grouting them together with modern concepts and technologies to produce a coherent picture.\nAt UATX, MOSAIC Calculus is a two-term course that comprises a complete mathematical program for STEM students. Elements come from all five semesters of the traditional sequence, but have been carefully selected and amended with a pedagogy designed to avoid the algebraic pitfalls that, in the convention scheme, prevent most students even from reaching calculus, let alone progressing to a second or third course.\nStudents arrive at UAustin with varied mathematical preparations and talents. Some students have already studied calculus, many have not. The MOSAIC curriculum has been designed to be accessible and worthwhile for all students. Even a student with one or two semesters of high-school calculus should enroll for the first semester of MOSAIC Calculus. Based on extensive experience over a couple of decades, students will find little that is repetitive with their earlier studies. After all, we’re a long way past the Calc I curriculum founded in 1696.\nFor the reader familiar with university-level mathematical topics …. MOSAIC Calculus is multi-variable from the start, organized around building models of real-world systems, engages linear algebra (which is the foundation of modern scientific mathematical work), dynamical systems, dimensions of physical quantities, and modern modes of constructing functions from data. It is not a machine-learning course, but it does cover the foundations of this. It also provides a solid introduction to technical computing, which is used both to develop conceptual understanding and to build and manipulate mathematical models."
  },
  {
    "objectID": "assignments/Week-12/index-assignment-12.html#by-hand-and-eye",
    "href": "assignments/Week-12/index-assignment-12.html#by-hand-and-eye",
    "title": "MOSAIC Week 12",
    "section": "By hand and eye",
    "text": "By hand and eye\n\nExercise 1  \n\n\n\n\n\n\n\n\n\nWhat will be the signs on the multipliers of \\(\\vec{u}\\) and \\(\\vec{w}\\) to construct \\(\\vec{b}_1\\)? (You don’t have to give the multipliers themselves, just their signs.)\n\n by-hand-A\n\n\n positive for \\(\\vec{u}\\), positive for \\(\\vec{w}\\)\n\n\n positive for \\(\\vec{u}\\), negative for \\(\\vec{w}\\)\n\n\n negative for \\(\\vec{u}\\), positive for \\(\\vec{w}\\)\n\n\n negative for \\(\\vec{u}\\), negative for \\(\\vec{w}\\)\n\n\n\n\n\n\n\n\nExercise 2  \n\n\n\n\n\n\n\n\n\nWhat will be the signs on the multipliers of \\(\\vec{x}\\) and \\(\\vec{v}\\) to construct \\(\\vec{b}_2\\)? (You don’t have to give the multipliers themselves, just their signs.)\n\n by-hand-B\n\n\n positive for \\(\\vec{x}\\), positive for \\(\\vec{v}\\)\n\n\n positive for \\(\\vec{x}\\), negative for \\(\\vec{v}\\)\n\n\n negative for \\(\\vec{x}\\), positive for \\(\\vec{v}\\)\n\n\n negative for \\(\\vec{x}\\), negative for \\(\\vec{v}\\)"
  },
  {
    "objectID": "assignments/Week-12/index-assignment-12.html#computing",
    "href": "assignments/Week-12/index-assignment-12.html#computing",
    "title": "MOSAIC Week 12",
    "section": "Computing",
    "text": "Computing\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n}"
  },
  {
    "objectID": "assignments/Week-13/index-assignment-13.html",
    "href": "assignments/Week-13/index-assignment-13.html",
    "title": "MOSAIC Week 13",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-13.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nCan I make this persistent?\n\n\n\nsave\n\n\nrestore"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Class notes and posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nApr 10, 2025\n\n\n2025-04-10 class notes\n\n\nDTK \n\n\n\n\nApr 8, 2025\n\n\nBackground software\n\n\nDTK \n\n\n\n\nApr 4, 2025\n\n\n2025-04-04 class notes\n\n\nDTK \n\n\n\n\nMar 21, 2025\n\n\n2025-04-01 class notes\n\n\nDTK \n\n\n\n\nMar 21, 2025\n\n\n2025-04-01 class notes\n\n\nDTK \n\n\n\n\nMar 21, 2025\n\n\n2025-03-21 class notes\n\n\nDTK \n\n\n\n\nMar 20, 2025\n\n\n2025-03-20 class notes\n\n\nDTK \n\n\n\n\nMar 18, 2025\n\n\n2025-03-18 class notes\n\n\nDTK \n\n\n\n\nMar 14, 2025\n\n\n2025-03-14 class notes\n\n\nDTK \n\n\n\n\nMar 13, 2025\n\n\n2025-03-13 class notes\n\n\nDTK \n\n\n\n\nMar 11, 2025\n\n\n2025-03-11 class notes\n\n\nDTK \n\n\n\n\nMar 7, 2025\n\n\n2025-03-07 class notes\n\n\nDTK \n\n\n\n\nMar 6, 2025\n\n\n2025-03-06 class notes\n\n\nDTK \n\n\n\n\nMar 4, 2025\n\n\n2025-03-04 class notes\n\n\nDTK \n\n\n\n\nFeb 28, 2025\n\n\n2025-02-28 class notes\n\n\nDTK \n\n\n\n\nFeb 27, 2025\n\n\n2025-02-27 class notes\n\n\nDTK \n\n\n\n\nFeb 25, 2025\n\n\n2025-02-25 class notes\n\n\nDTK \n\n\n\n\nFeb 21, 2025\n\n\n2025-02-21 class notes\n\n\nDTK \n\n\n\n\nFeb 20, 2025\n\n\n2025-02-20 class notes\n\n\nDTK \n\n\n\n\nFeb 18, 2025\n\n\n2025-02-18 class notes\n\n\nDTK \n\n\n\n\nFeb 6, 2025\n\n\n2025-02-06 class notes\n\n\nDTK \n\n\n\n\nFeb 4, 2025\n\n\n2025-02-04 class notes\n\n\nDTK \n\n\n\n\nJan 31, 2025\n\n\n2025-01-31 class notes\n\n\nDTK \n\n\n\n\nJan 30, 2025\n\n\n2025-01-30 class notes\n\n\nDTK \n\n\n\n\nJan 28, 2025\n\n\n2025-01-28 class notes\n\n\nDTK \n\n\n\n\nJan 24, 2025\n\n\n2025-01-24 class notes\n\n\nDTK \n\n\n\n\nJan 23, 2025\n\n\n2025-01-23 class notes\n\n\nDTK \n\n\n\n\nJan 21, 2025\n\n\n2025-01-21 class notes\n\n\nDTK \n\n\n\n\nJan 17, 2025\n\n\n2025-01-17 class notes\n\n\nDTK \n\n\n\n\nJan 16, 2025\n\n\n2025-01-16 class notes\n\n\nDTK \n\n\n\n\nJan 14, 2025\n\n\n2025-01-14 class notes\n\n\nDTK \n\n\n\n\nJan 10, 2025\n\n\n2025-01-10 class notes\n\n\nDTK \n\n\n\n\nJan 9, 2025\n\n\n2025-01-09 class notes\n\n\nDTK \n\n\n\n\nJan 7, 2025\n\n\n2025-01-07 class notes\n\n\nDTK \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Weekly assignments",
    "section": "",
    "text": "Refer to the class schedule for the due date for each assignment. Some of these are in development and may not be assigned.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nMar 31, 2025\n\n\nMOSAIC Assignment Week 11\n\n\n \n\n\n\n\nApr 3, 2025\n\n\nA nice walk up a hill\n\n\n \n\n\n\n\nApr 3, 2025\n\n\nMOSAIC Week 13\n\n\n \n\n\n\n\nApr 3, 2025\n\n\nMOSAIC Week 12\n\n\n \n\n\n\n\nApr 6, 2025\n\n\nMOSAIC Week 14\n\n\n \n\n\n\n\nApr 26, 2025\n\n\nMOSAIC Week 15 Assignment\n\n\n \n\n\n\n\nApr 26, 2025\n\n\nMOSAIC Week 18 Assignment\n\n\n \n\n\n\n\nMay 2, 2025\n\n\nMOSAIC Week 16 Assignment\n\n\n \n\n\n\n\nMay 11, 2025\n\n\nMOSAIC Week 17 Assignment\n\n\n \n\n\n\n\nMay 26, 2025\n\n\nMOSAIC Week 19 Assignment\n\n\n \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "assignments/Week-11-project/index-walking-project.html",
    "href": "assignments/Week-11-project/index-walking-project.html",
    "title": "A nice walk up a hill",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-walking-project.rmarkdown Collect your answers No answers yet collected\nPicking up from our discussion on Thursday 3 April about walking energetics …\nThe American College of Sports Medicine (ACSM) model of power consumption (watts, joules/min, horsepower, \\(\\dot{V}_{0_2}\\), etc. are units) when walking on an incline at grade \\(g_\\text{path}\\) is1:\n\\[P = (h + w g_\\text{path}) V \\tag{1}\\]\nWhat must be the u-dimension of \\(h\\) and \\(w\\) for Equation 1 to be dimensionally consistent. (\\(g_\\text{path}\\) has u-dimension L/L., while power has u-dimension ML2T-3.)\ndimension-h-w \n\n   Distance L        Velocity LT-1        Acceleration LT-2        Force M L T-2        Energy ML2T-2        Power ML2T-3\nThe physics quantity “work” (u-dimension: energy) is power times time, so consider walking for a time \\(t_d\\) to get us a distance \\(d\\):\n\\[E = P t_d = (h + w g_\\text{path}) V t_d = (h + w g_\\text{path}) d \\tag{2}\\]\nRemember that the objective of walking this distance \\(d\\) was to get the hiker to an elevation of 1000m. \\(d\\) is the hypothenuse of a right triangle, so what is the correct relationship between \\(d\\) and the gradient.\n&lt;small style=\"color: grey;\" id=\"walk-d-at-g-hintarea\"&gt;walk-d-at-g&lt;/small&gt;\n\n\n\n \\(d^2 = 1000^2 + (1000 g_\\text{path})^2\\)\n\n\n \\(d^2 = 1000^2 + (1000/g_\\text{path})^2\\)\n\n\n \\(d = 1000/g_\\text{path}\\)\n\n\n \\(d^2 = 1000^2 - (1000/g_\\text{path})^2\\)\nIn other words, \\(d\\) is a function of \\(g_\\text{path}\\), that is \\(d(g_\\text{path})\\). Substitute the formula for this function into Equation 2 to get an expression for \\(E(g_\\text{path})\\).\nGraph the function \\(E(g_\\text{path})\\) over an appropriate domain to determine if there is a minimum and, if there is, the corresponding argmin. This is the answer we sought: the grade that makes getting uphill as energy-efficient as possible.\nOne way to help people visualize your recommended grade … Pick a few real-world examples of paths, both steep and shallow. For example, there’s the Manitou incline near Colorado Springs as an example of a steep hike. Heartbreak Hill in the Boston Marathon has earned its name. Another example, pick a couple of streets in San Francisco, perhaps one with a cable-car running along it. Paste the URLs of the images that you like into the answer box.\nFigure 1 shows an imagined hill with contours drawn at intervals of 10. All units, horizontal and vertical, are in meters. Draw a path from the starting mark to the top of the hill that is at the optimal grade for walking. (You don’t need to have an exact answer, just a reasonable approximation.) A good way to proceed is to draw a short, straight segment from the starting point on one contour to the appropriate place at the next contour."
  },
  {
    "objectID": "assignments/Week-11-project/index-walking-project.html#footnotes",
    "href": "assignments/Week-11-project/index-walking-project.html#footnotes",
    "title": "A nice walk up a hill",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI’ve reformulated this to be consistent with the physiology literature↩︎"
  },
  {
    "objectID": "assignments/Week-14/index-assignment-14.html",
    "href": "assignments/Week-14/index-assignment-14.html",
    "title": "MOSAIC Week 14",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-14.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n  suns \n\n   Sun        Star        Quasar         \n\n\n\n\n\n  planets \n\n   Earth        Mars        Saturn        Jupiter         \n\n\n\n\n\n\n\n\nNow say something in this text box."
  },
  {
    "objectID": "assignments/Week-11/index-assignment-11.html#part-1-by-hand-and-eye",
    "href": "assignments/Week-11/index-assignment-11.html#part-1-by-hand-and-eye",
    "title": "MOSAIC Assignment Week 11",
    "section": "Part 1: By hand and eye",
    "text": "Part 1: By hand and eye\n\nExercise 1 Consider this set of vectors\n\n\n\n\n\n\nFigure 1: Vectors to use for this exercise\n\n\n\n\nFind the lengths of each of these vectors. Assume that the vectors begin and end exactly on the graph-paper intersections.\n\nWhich one of these is not a length of the vectors in Figure 1?\n\n  gsc-1 \n\n   \\(\\sqrt{8}\\)        \\(\\sqrt{16}\\)        5        \\(\\sqrt{40}\\)         \n\n\n\n\n\nTwo pairs of vectors in Figure 1 are orthogonal within each pair. Which one of these is not one of those pairs?\n\n\n  gsc-2 \n\n   A and B        B and C        C and D        All of these are orthogonal pairs.         \n\n\n\n\n\nJust using your eye, say whether the dot product between every pair of vectors is positive, zero, or negative.\n\n\n\nA & B     gsc-c1 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nA & C     gsc-c2 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nA & D     gsc-c3 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nA & E     gsc-c4 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nB & C     gsc-c5 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nB & D     gsc-c6 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nB & E     gsc-c7 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nC & D     gsc-c8 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nC & E     gsc-c9 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\nD & E     gsc-c10 \n\n   positive        zero        negative         \n\n\n\n\n\n\n\n\nExercise 2 Here are several vectors:\n\n\nRemembering that mathematical vectors have only two properties—length and direction—how many mathematically different vectors are being shown.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nFive. Color is not a property of a mathematical vector. Orientation, however, is.\n\n\n\n\nMeasure the length of each vector. (Hint: Use a ruler! You can round to the nearest millimeter.)\nFind the included angle between the \\(\\color{blue}{\\text{blue}}\\) and \\(\\color{brown}{\\text{brown}}\\) vectors. (Your answer should be correct to within \\(\\pm 15^\\circ\\).)\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nAbout 135 degrees. Note that the orientation makes a difference. The angle is measured with the vectors placed tail to tail.\n\n\n\n\nFind the included angle between the \\(\\color{magenta}{\\text{magenta}}\\) and \\(\\color{blue}{\\text{blue}}\\) vectors.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nMagenta points in the same direction as brown, so the answer is the same as in the previous question.\n\n\n\n\nFind the included angle between 0.7 times the \\(\\color{blue}{\\text{blue}}\\) vector and -11.3 times the \\(\\color{brown}{\\text{brown}}\\).\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nThe scaling does not matter except that the negative sign for the brown vector means that its orientation will be reversed. This means that the included angle will be 45 degrees, not 135 degrees as in the previous two questions.\n\n\n\n\n\n\nExercise 3 Collision course?\nConsider the diagram showing two straight-line tracks, a dot on each track, and a vector.\n\nLet’s imagine that dot 1 is an aircraft and that the black vector attached to it is the aircraft’s velocity. We will call this \\(\\vec{v}_1\\), Similarly for dot 2, where the velocity vector will be called \\(\\vec{v}_2\\).\nThere is a third vector drawn in red: the difference in position of the two aircraft at the exact moment depicted in the drawing.\nThe question we want to address is whether the aircraft are on a collision course. Obviously, the two courses cross. So we know that the two aircraft will cross the same point. For a collision, the aircraft have to cross that point at the same time.\nCopy over the drawing to your own piece of paper. You don’t need to get the vectors and positions exactly right; any reasonable approximation will do.\nNow you will do visual vector addition and subtraction to answer the collision question.\n\nThe relative velocity of the two planes is the difference between their velocities. Subtract \\(\\vec{v}_2\\) from \\(\\vec{v}_1\\) and draw the resulting vector. Pay attention to both the length and direction of the relative velocity.\nThe displacement between the two planes is the red vector: the position of dot 2 subtracted from dot 1. Compare the directions of the relative velocity vector and the displacement vector. If they are aligned, then the planes are on a collision course.\nIn the picture as drawn, the relative velocity vector and the displacement vector are not aligned. Figure out how much you would need to change the length of \\(\\vec{v}_2\\) so that the relative velocity does align with the displacement. (Keep the direction the same.) Draw this new vector and label it “vector for intercept.”\nIn (3) you changed the length of \\(\\vec{v}_2\\) keeping the direction the same. Now you will keep \\(\\vec{v}_2\\) at the original length, but change its direction so that the new relative velocity is aligned with the displacement vector.\n\nItems (3) and (4) are two different ways of designing an intercept of plane 1 by plane 2.\nBonus) You can figure out how long it takes for each plane to reach the intersection point by finding out how many multiples of the velocity vector will cover the line segment between the plane’s position and the intersection point. For example, in the original drawing \\(4 \\vec{v}_1\\) will bring the plane to the intersection point, so it takes 4 “time units” for the plane to reach the point. (What is the time unit? If velocity is in miles/hour, then the time unit is hours. If the velocity is in feet/second, then the time unit is seconds.) Your task: Figure out where aircraft 2 will be in 4 time units. This will tell you the separation between aircraft 2 and aircraft 1 when 1 reaches the intersection point. Draw and label this vector.\n\n\nExercise 4 Here are 12 vectors, labeled “a” through “m.” (Letter “i” has been left out.) There are several quick questions, each of which makes a claim about whether the sum of two vectors equals a third. Answer true or false to the claim. There are no tricks about exactitude, so if the claim is close to being true, answer true.\n\n\n\n\n\n\nFigure 2\n\n\n\n\n\n\\(\\vec{a} + \\vec{b} = \\vec{L}\\)     tsp-1 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{b} + \\vec{J} = \\vec{a}\\)     tsp-2 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{b} + \\vec{m} = \\vec{J}\\)     tsp-3 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{c} + \\vec{f} = \\vec{d}\\)     tsp-4 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{k} + \\vec{L} = \\vec{e}\\)     tsp-5 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{e} + \\vec{b} = \\vec{m}\\)     tsp-6 \n\n   True        False         \n\n\n\n\n\n\n\n\\(\\vec{m} + \\vec{g} = \\vec{b}\\)     tsp-7 \n\n   True        False         \n\n\n\n\n\n\n\nExercise 5 Locating WW I aircraft\nThe photograph shows part of an aircraft detection system from World War I. The concrete block is an “acoustic mirror.” Its purpose is to collect and reflect sound from an aircraft, concentrating them at a point where they can be picked up by a microphone. Moving the microphone to a point where the concentrated sound is strongest allows the aircraft’s bearing to be identified, helping observers acquire the aircraft visually.\n\nSource\nFigure 3 shows an imagined situation where two bearing vectors have been identified for an aircraft.\n\n\n\n\n\n\nFigure 3\n\n\n\nGive the position of the aircraft as a multiple of \\(\\vec{a}\\) from sound mirror A and as a multiple of \\(\\vec{b}\\) from sound mirror B. (Choose the closest answer)\n\n\n\n&lt;small style=\"color: grey;\" id=\"g4ZZQz-hintarea\"&gt;g4ZZQz&lt;/small&gt;\n\n\n\n \\(3 \\vec{a}\\) and \\(4.5 \\vec{b}\\)\n\n\n \\(4 \\vec{a}\\) and \\(6 \\vec{b}\\)\n\n\n \\(3\\vec{a}\\) and \\(2  \\vec{b}\\)\n\n\n \\(4\\vec{a}\\) and \\(4.5\\vec{b}\\)\n\n\n\n\n\n\n\n\nExercise 6 Define the vector \\[\\vec{v} \\equiv \\left[\\begin{array}{r}4\\\\1\\\\3\\\\-2\\end{array}\\right]\\ .\\]\nYour task is to construct different vectors that are orthogonal to \\(\\vec{v}\\). You can use the trick presented in ?@sec-orthogonality of creating templates with zero in all but two of the positions, e.g. \\[\\left[\\begin{array}{r}0\\\\0\\\\\\_\\\\\\_\\end{array}\\right] \\ \\ \\text{or}\\ \\ \\\n\\left[\\begin{array}{r}0\\\\\\_\\\\0\\\\\\_\\end{array}\\right] \\ \\ \\text{and}\\ \\ \\\n\\left[\\begin{array}{r}\\_\\\\\\_\\\\0\\\\0\\end{array}\\right]\\] To construct a vector orthogonal to \\(\\vec{v}\\), fill in the blanks by taking the corresponding elements of \\(\\vec{v}\\), swapping them, and negating one of them. For example, taking the first template will produce\n\\[\\left[\\begin{array}{c}0\\\\0\\\\\\underline{\\ 2\\ }\\\\\\underline{\\ 3\\ }\\end{array}\\right]\\ .\\]\n\nFill in the blanks of the other two tempates to create vectors orthogonal to \\(\\vec{v}\\).\nConstruct 3 new vectors by taking different linear combinations of the vectors you created in (A). Are any of these new vectors orthogonal to \\(\\vec{v}\\)? Show your work.\nProve algebraically that any linear combination of a set of vectors orthogonal to \\(\\vec{x}\\) will itself be orthogonal to \\(\\vec{x}\\)."
  },
  {
    "objectID": "assignments/Week-11/index-assignment-11.html#part2-computing",
    "href": "assignments/Week-11/index-assignment-11.html#part2-computing",
    "title": "MOSAIC Assignment Week 11",
    "section": "Part2: Computing",
    "text": "Part2: Computing\n\nBasic operations\n\nUse vec() to create a vector from individual components (scalars). Example:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nUse rvec() to create a random vector of the specified dimension.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nUse the %dot% operator to calculate the dot product.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nExercise 7 Write three test cases for %dot% using vectors for which you can easily find the value by eye.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWrite these functions and tests\n\nExercise 8 Use %dot%, sqrt(), and / to calculate the length of a vector\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nveclen &lt;- function(v) sqrt(v %dot% v)\n\n\n\n\n\nExercise 9 Write three tests for length() on vectors where you already know the answer.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExercise 10 Write a function, unitvec() that takes a vector as an input and returns the same vector but with unit magnitude.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nTip\n\n\n\n\n\n\nunitvec &lt;- function(vec) {\n  vec/length(vec)\n}\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere’s a test that I invented. See if it works in any dimension 2 or greater$\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nExplain the result of my test.\n\n\n\n\nExercise 11 Use %dot%, sqrt(), *, and / to calculated the cosine of the angle between two vectors.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncang &lt;- function(v, w) {\n  (v %dot% w) / (veclen(v) * veclen(w))\n}\n\n\n\n\n\n\nWrite these tests for cang() for cases where you already know the answer:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExercise 12 Application. The correlation coefficient is a dot product. I’ll write the function for you so that you can use the tilde notation from QR2.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTest this out on any data frame and pair of variables you like.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nExplain whether the results correspond or not.\n\n\n\nOrthogonality\n\nExercise 13 Create vectors that are orthogonal to each of these and confirm your answer using cang()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExercise 14 Here’s a function (written in jibberish that you won’t yet understand) but which will construct a vector orthogonal to any vector or set of vectors.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWrite some tests on vectors you create of various dimensions and find out whether dtk_ortho() works or not.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nWrite the test code in the above chunk and explain what you found here.\n\n\n\n\n\n\n\n\nSubmitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-11.rmarkdown Collect your answers No answers yet collected"
  },
  {
    "objectID": "projects/Iterative-search/index-iterative-search.html",
    "href": "projects/Iterative-search/index-iterative-search.html",
    "title": "Iterative search",
    "section": "",
    "text": "See https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Manifestations/49-optimization.html\nMaybe something on constructing a likelihood function from data.\nThen do the Fisher information and the standard error."
  },
  {
    "objectID": "projects/Standard-and-Poors-ratings/index-S-and-P.html",
    "href": "projects/Standard-and-Poors-ratings/index-S-and-P.html",
    "title": "Bond ratings ups and downs",
    "section": "",
    "text": "The ratings of companies and governments by agencies such as Moody’s Investor Services or Standard and Poor’s are used by investors to indicate the level of risk of loaning money (through, say, a bond).\nThe ratings take the form of letter grades as in Table 1.\n\n\n\nTable 1: Rating grades and their interpretion for Standard and Poor’s\n\n\n\n\n\nGrade\nFinancial strength description\n\n\n\n\nAAA\nExtremely strong\n\n\nAA\nVery strong\n\n\nA\nStrong\n\n\nBBB\nAdequate\n\n\nBB\nFacing financial uncertainty\n\n\nB\nVulnerable\n\n\nCCC\nVulnerable and dependent on good business conditions to continue\n\n\nCC\nHighly vulnerable\n\n\nC\nHighly vulnerable to non-payment with low expectation of recovery\n\n\nD\nGeneral default or breach\n\n\nNR\nNot rated\n\n\n\n\n\n\nThe letter grade is often used to set the interest rate for the loan, a combination of a “safe” interest rate (generally, the US Treasury Bill rate) and a premium to reflect risk. Low-rated companies have to pay a higher interest premium.\nBonds are often long-term affairs, spanning several years or even a decade or more. But a company’s fortunes can change over the years; it’s helpful to know, for example, the probability that a strongly-rated company will fall to a lower rating.\nThe transition matrix below was published by S&P in 2017 and reflects the changes in ratings over a three-year period. Prof. Haiyan Su (of Montclair State University) describes the use of the data in an “industrial mathematics” course in an upcoming AMS/MAA Classroom Resource Materials volume edited by Tim Chartier and Jason Douma, Data Science: Plug-and-play Modules for the College Classroom.\nThe Transitions data frame states the probability over the three year period of a company moving from one grade to another. The starting grade is given in the first column, and the different ending grades are the columns.\n\nTransitions &lt;- read.table(header = TRUE,  text = \"\nfrom  AAA   AA    A     BBB   BB    B     CCCC  D   NR \nAAA   .6548 .2209 .0235 .0032 .0019 .0008 .0011 .0013 .0924 \nAA    .0121 .6614 .1853 .0206 .0035 .0022 .0003 .0012 .1133 \nA     .0006 .0407 .6885 .1172 .0130 .0044 .0009 .0025 .1321\nBBB   .0002 .0028 .0842 .6466 .0711 .0164 .0030 .0087 .1670 \nBB    .0001 .0006 .0051 .1108 .4704 .1158 .0125 .0396 .2451 \nB      0    .0003 .0021 .0078 .1023 .4146 .0467 .1257 .3005\nCCCC   0     0    .0014 .0061 .0163 .1686 .1054 .4065 .2957\"\n)\n\n\ntmat &lt;- Transitions |&gt; \n  select(-from, -D, -NR) |&gt;\n  as.matrix() %&gt;% t()\ndim(tmat)\n\n[1] 7 7\n\n\n12-year transition simulation.\n\ntmat %*% tmat %*% tmat %*% tmat\n\n             [,1]        [,2]        [,3]         [,4]         [,5]\nAAA  0.1909304142 0.014455646 0.002169655 0.0005827262 0.0001842381\nAA   0.2605915319 0.219475490 0.053605790 0.0128459981 0.0027255159\nA    0.1421310190 0.243735823 0.274080901 0.1083564702 0.0263878502\nBBB  0.0365166019 0.084730617 0.153222682 0.2193634350 0.0896928779\nBB   0.0076541316 0.016105436 0.031928425 0.0610341243 0.0790377991\nB    0.0037453571 0.006947270 0.012942941 0.0267556765 0.0507105327\nCCCC 0.0008750053 0.001072082 0.001936587 0.0037272003 0.0066180211\n             [,6]         [,7]\nAAA  4.356926e-05 1.474043e-05\nAA   7.828510e-04 3.126728e-04\nA    6.367000e-03 2.726844e-03\nBBB  2.496704e-02 9.119954e-03\nBB   4.222725e-02 1.599170e-02\nB    4.940885e-02 2.202523e-02\nCCCC 6.673059e-03 3.048269e-03\n\n\n\nFactorization &lt;- eigen(tmat)\nFactorization\n\neigen() decomposition\n$values\n[1] 0.82151650 0.69970529 0.63264315 0.56476458 0.50586267 0.33584280 0.08136501\n\n$vectors\n           [,1]        [,2]       [,3]        [,4]         [,5]          [,6]\n[1,] 0.01948894  0.09380906 -0.1034883  0.04558441 -0.007236647 -4.215963e-05\n[2,] 0.22106255  0.36952322  0.1797625 -0.36496211  0.100514559  5.379392e-03\n[3,] 0.71733703 -0.09792869  0.4885301  0.63683777 -0.379341435 -5.448650e-02\n[4,] 0.62768663 -0.82583724 -0.6558557 -0.10325685  0.641611732  2.374015e-01\n[5,] 0.18330737 -0.34783013 -0.4409848 -0.49621329 -0.391367554 -6.643193e-01\n[6,] 0.09177254 -0.20329059 -0.3034338 -0.44594050 -0.525623233  6.982704e-01\n[7,] 0.01283805 -0.02724719 -0.0403428 -0.05839381 -0.069502302  1.083565e-01\n              [,7]\n[1,] -1.326075e-05\n[2,]  1.345365e-04\n[3,]  1.757702e-03\n[4,] -2.126335e-02\n[5,]  9.174333e-02\n[6,] -4.738456e-01\n[7,]  8.755560e-01\n\n\nTask: Find the one-year transition matrix."
  },
  {
    "objectID": "projects/GPS/index-GPS.html",
    "href": "projects/GPS/index-GPS.html",
    "title": "Global positioning",
    "section": "",
    "text": "GPS data from SciComp2009 2009-03-24\nc.speed &lt;- 299792.458 # km/sec\n\nsat.positions &lt;- rbind(\n  c(15600,7540, 10380,.0593200),\n  c(11760, 2750, 16190, 0.0519200),\n  c(11610, 14630, 7680, 0.0624200),\n  c(15170, 610, 13320, 0.0557100))\n\nbook.answer &lt;-  cbind( -19.053, 11.318, 6370.252, -0.0000426)"
  },
  {
    "objectID": "projects/GPS/index-GPS.html#software",
    "href": "projects/GPS/index-GPS.html#software",
    "title": "Global positioning",
    "section": "Software",
    "text": "Software\n\nexample.positions = rbind(\n  c(15600,7540, 10380,.0593200),\n  c(11760, 2750, 16190, 0.0519200),\n  c(11610, 14630, 7680, 0.0624200),\n  c(15170, 610, 13320, 0.0557100))\n\nexample.positions2 = rbind(\n  c(15600,7540, 10380,.0593626),\n  c(11760, 2750, 16190, 0.0519626),\n  c(11610, 14630, 7680, 0.0624626),\n  c(15170, 610, 13320, 0.0557526))\n\nbook.answer =  cbind( -19.053, 11.318, 6370.252, -0.0000426)\n\nbook.answer2 = cbind( -19.053, 11.318, 6370.252, 0)"
  },
  {
    "objectID": "projects/Coupled-pendula/index-coupled-pendula.html#the-forced-pendulum-and-resonance",
    "href": "projects/Coupled-pendula/index-coupled-pendula.html#the-forced-pendulum-and-resonance",
    "title": "Dynamics: Coupled pendula",
    "section": "The forced pendulum and resonance",
    "text": "The forced pendulum and resonance\nUsing exponential ansatz and confirming numerically"
  },
  {
    "objectID": "projects/Coupled-pendula/index-coupled-pendula.html#two-pendula",
    "href": "projects/Coupled-pendula/index-coupled-pendula.html#two-pendula",
    "title": "Dynamics: Coupled pendula",
    "section": "Two pendula",
    "text": "Two pendula\nFirst set up the DEs with independent pendula, then add in coupling terms."
  },
  {
    "objectID": "projects/Coupled-pendula/index-coupled-pendula.html#many-pendula",
    "href": "projects/Coupled-pendula/index-coupled-pendula.html#many-pendula",
    "title": "Dynamics: Coupled pendula",
    "section": "Many pendula",
    "text": "Many pendula\nHow strong a coupling will produce synchrony?\nCan driving one pendulum drive them all?"
  },
  {
    "objectID": "projects/SIR/index-SIR.html",
    "href": "projects/SIR/index-SIR.html",
    "title": "A modeling framework for epidemics",
    "section": "",
    "text": "See https://dtkaplan.github.io/MC-Workbook/Block-5-models.html"
  },
  {
    "objectID": "projects/Fuel-use/index-fuel-use.html",
    "href": "projects/Fuel-use/index-fuel-use.html",
    "title": "Calculus of driving",
    "section": "",
    "text": "See https://dtkaplan.github.io/MC-Workbook/Block-4-models.html"
  },
  {
    "objectID": "projects/Shadow-prices/index-shadow-prices.html",
    "href": "projects/Shadow-prices/index-shadow-prices.html",
    "title": "Constraints and shadow prices",
    "section": "",
    "text": "See &lt;https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Manifestations/49-optimization.html#constraint-cost"
  },
  {
    "objectID": "projects/Diffusion/index-diffusion.html",
    "href": "projects/Diffusion/index-diffusion.html",
    "title": "Diffusion and random walks",
    "section": "",
    "text": "See https://www.mosaic-web.org/MOSAIC-Calculus/Textbook/Manifestations/53-diffusion.html"
  },
  {
    "objectID": "projects/Fourier_transform/index-FFT.html",
    "href": "projects/Fourier_transform/index-FFT.html",
    "title": "Fourier Transforms",
    "section": "",
    "text": "SciComp2009 2009-04-30\nfourier.pdf\nSciCompFiles/whistle.wav\nSciCompFiles/aeiou.wav g-fugue.wav finest-hour.wav"
  },
  {
    "objectID": "projects/SVD-ordway/index-ordway.html",
    "href": "projects/SVD-ordway/index-ordway.html",
    "title": "Bird Species",
    "section": "",
    "text": "Make a raster plot of the bird species versus month for the Ordway Birds data.\nPre-clean by cleaning species names and months, …\nPick out the 50 most common species, and give a count versus month.\nArrange this so that seasonality patterns are easier to see."
  },
  {
    "objectID": "projects/Stress-in-a-truss/index-stress-in-a-truss.html",
    "href": "projects/Stress-in-a-truss/index-stress-in-a-truss.html",
    "title": "Stress in a bridge",
    "section": "",
    "text": "Figure 17.1 in Chapter17.pdf\ndrawbridge.m findtensions.m readbridge.m"
  },
  {
    "objectID": "projects/Gaussian-quadrature/GQ-87a.html",
    "href": "projects/Gaussian-quadrature/GQ-87a.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "gaussquad &lt;- function(f, a = -1, b = 1, order = 4, ...) {\n  foo = gausspts(order)\n  x = foo$roots\n  vals = x\n  x = ((b-a)*x + b + a)/2\n  for (k in 1:length(vals) )  vals[k] = f(x[k], ...)\n  return( (b-a)*sum(foo$coefs*vals)/2)\n}\n\ngausspts &lt;-  function(n=2){\n  if (n==1)\n    return( list(roots=0, coefs=2))\n  if (n==2)\n    return(list(roots=c(-1,1)*.57735026918963, coefs = c(1,1) ))\n  if (n==3)\n    return(list(roots=c(-1,0,1)*.77459666924148, coefs = c(5,8,5)/9 ))\n  if (n==4)\n    return(list(roots=c(-1,0,0,1)*.86113631159405 + c(0,-1,1,0)*0.33998104358486,\n                coefs = (90+c(-1,1,1,-1)*5*sqrt(30))/180))\n  if (n==5) {\n    middle = sqrt(5 - 2*sqrt(10/7))/3\n    outer =  sqrt(5 + 2*sqrt(10/7))/3\n    middlew = (322 + 13*sqrt(70))/900\n    outerw = (322 - 13*sqrt(70))/900\n    return(list(roots=c(-outer,-middle,0,middle,outer), coefs=c(outerw,middlew, 128/225, middlew, outerw)))\n    }\n  else\n    stop(\"Untabulated order for Gaussian Quadrature\")\n}"
  },
  {
    "objectID": "projects/Engine-scaling/index-engine-scaling.html",
    "href": "projects/Engine-scaling/index-engine-scaling.html",
    "title": "Linear Algebra: Engine scaling",
    "section": "",
    "text": "See https://dtkaplan.github.io/MC-Workbook/Block-1-models.html#engine-scaling"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Project topics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\nApr 3, 2025\n\n\nWalking uphill\n\n\nDTK \n\n\n\n\nMar 24, 2025\n\n\nSubject: TOPIC\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nStress in a bridge\n\n\nDTK \n\n\n\n\nApr 3, 2025\n\n\nSVD in politics\n\n\nDTK \n\n\n\n\nApr 7, 2025\n\n\nRanking by grade\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nPresent and future value\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nLinear Algebra: Finding eigenvalues\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nLinear Algebra: Engine scaling\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nLife tables\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nLife expectancy\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nIterative search\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nGlobal positioning\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nGaussian Quadrature\n\n\nDTK \n\n\n\n\nApr 2, 2025\n\n\nFourier Transforms\n\n\nDTK \n\n\n\n\nApr 2, 2025\n\n\nFactory production\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nDynamics: Coupled pendula\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nDiffusion and random walks\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nConstraints and shadow prices\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nCalculus of driving\n\n\nDTK \n\n\n\n\nMar 31, 2025\n\n\nBond ratings ups and downs\n\n\nDTK \n\n\n\n\nApr 1, 2025\n\n\nBird Species\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nBayesian updating\n\n\nDTK \n\n\n\n\nMar 25, 2025\n\n\nAutomatic differentiation\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nAdaptive Quadrature\n\n\nDTK \n\n\n\n\nMar 26, 2025\n\n\nA modeling framework for epidemics\n\n\nDTK \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "notes/2025-02-20-notes/index-02-20-2025.html",
    "href": "notes/2025-02-20-notes/index-02-20-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "17 2025-02-20 class notes\nFrom last time: Simulated Galileo’s ramp experiment\nWe found that putting bells at positions \\(0, 1, 4, 9, 16, 25, 36\\) created a steady beat of sounds. This means that the ball took equal intervals of time to run between successive bell positions.\n\nPositions \\(0, 1, 4, 9, 16, 25, 36\\)\nFirst-differences \\(1, 3, 5, 7, 9, 11\\)\n\nWe can all see the pattern here: the positions are the perfect squares (where the interval between the first two bells is 1). The first differences are even easier: the odd integers.\nGalileo would have understood Platonic ideas. Things that do not change are the ideal, e.g. the stars, the Earth. Things that change in an orderly way—motion of the planets—are less idea, but understandable. Things that change in a disorderly way—meteorites, or meteorolgy (the weather)—are not subject to understanding. Galileo would look for an even simpler pattern in the equal time positions. The first difference is simple, but simpler still is the second differences.\n\nSecond-differences: \\(2, 2, 2, 2, 2\\)\n\nGalileo could have summarized his findings thus:\n\nUnder the motion induced by gravity, position is predictable. The position reached after equal increments of time are such that their second differences are constant.\n\nWe can imagine that young Newton, who knew about Galileo’s findings, would have found things not to like.\n\nMotion is continuous. Can we describe it in a continuous way?\nThe size of the “second differences” depends on the unit spacing between the bells. Could we make this unit much, much smaller?\nAre there situations where motion works differently? Rolling along a level board: first-differences are constant! A boat coming into dock: first differences get smaller! Does it make sense to express both of these situations in terms of the second differences?\n\nIt was well understood among mathematicians that “analytic expressions” describe curves. Is motion about turning one kind of curve into another, e.g. going from first- or second-differences to positions?\n\n“Pierre de Fermat also pioneered the development of analytic geometry. Although not published in his lifetime, a manuscript form of Ad locos planos et solidos isagoge (Introduction to Plane and Solid Loci) was circulating in Paris in 1637, just prior to the publication of Descartes’ Discourse. Clearly written and well received, the Introduction also laid the groundwork for analytical geometry. The key difference between Fermat’s and Descartes’ treatments is a matter of viewpoint: Fermat always started with an algebraic equation and then described the geometric curve that satisfied it, whereas Descartes started with geometric curves and produced their equations as one of several properties of the curves. As a consequence of this approach, Descartes had to deal with more complicated equations and he had to develop the methods to work with polynomial equations of higher degree. It was Leonhard Euler who first applied the coordinate method in a systematic study of space curves and surfaces.” Source\n\n\nReminder: Metaphor of Anglo-Saxon and Norse intermarriage resulting in the simplification of English. Anglo-Saxon and Norse had different verb inflections, adding cognitive load to communication. Dropping both sets of inflections, replacing them with word order and prepositions, made the language easier to share.\n\nTwo starts to modern calculus:\n\nNewton: fluents and fluxions: \\(x\\), first differences \\(\\dot{x}\\), second differences \\(\\ddot{x}\\).\nLeibniz: infinitesimals: the increments dx and dt\n\n\n17.1 How this was described in early days\nShow John Adam’s copy of l’Hôpital’s textbook.\n\nGraphs are at end of book, not a function among them.\n\n\nSimpsons Doctrine and Application of Fluxions Vol.1.p.150. Scholium 134 Link\n\n[The following is copied from the above source.]\n\n[In t]he Beginning of this and the preceeding Sections, We have seen how the Fluxions of Quantities are determined by conceiving the generating Motion, to become uniform to the proposed Positions: but hitherto no notice as been taken of the method of Increments or indefinitely little Parts, used and mistaken by many for that of Fluxions, in which the operations are, for the general Part exactly the same and which, tho less accurate, may be applied to good purpose in finding the Fluxions themselves in many cases to show the Beginner how the two Methods differ from each other.\n\n\nThe Fluxions of Quantities are always measured by how much the quantities themselves would be uniformly augmented in a given time. Therefore if two quantities or lines [?] A.B. and C.D. be generated together by the uniform or equable action of the Points B. and D. it follows that [?] any span Bb and Dd actualy gone over whereby AB and CD. are augmented, in the same time will nearly [?] express the Fluxions of the given lines A.B and C.D. whence it appears that the Increments or Spans [?] actually gone over and the Fluxions are the Same in tis case, where the generating Velocities are equable,\n\n\n\nbut if on the contrary, the velocities of the two Points in generating the Increments Mb and Nd be Supposed either to increase or decrease, the Lines or Increments so generated will no longer express the Fluxions of A.B. and C.D. being greater or less than the Spans [?] that might be uniformly described in the Same time with the Velocities at M. and N.\n\n\n[I]f indeed those Increments and the time of this Description be taken so small that the motion of the points during that time may be considered as equable, The Ratio of the said Increments will then express that of the Fluxtion [?] or be as the Velocity of M. to that at N, indefinitely near but cannot be conceived to be strictly so; unless, perhaps in certain particular cases.\n\n\nHence We See tht the Differential Method, which proceeds upon those indefinitely little Increments, actually generated as we do upon Fluxions, or the Spaces that might be uniformly generated differs little or nothing from the Method of Fluxions, except in the manner of conceptions, and in point of accuracy, wherein it appears defective: and yet it is very certain the conclusions thiw way derived are mathematically true.\n\n\nFor although the whole compleat Increment is actually understood by the Notation and first Deffinition of the Differential Method yet in the Solution of Problems the exact Measure thereof is not taken, but only that Part of it which would arise from an uniform increase, agreable to the Notion of a Fluxion; whih admits of a strict demonstration. But after all the Differential Method has on advantage above that of Fluxions, which is, we are not here obpliged to introduce the Properties of Motion. Since We reason upon the Increments themselves, and not upon the manner in which they may be generated.\n\n\n\n17.2 A function and it’s change over a small interval\n\nWe’ll divide the x-axis into 60 equal segments, then plot out the change in the function from the start to the end of the segment. The height of each sloping graph is the amount of change during the segment.\n\nNow to convert that “change” into a rate of change, just divide by the small interval of time. That is, divide by 1/60.\n\n\n\n17.3 Definition of the “change function”\nThe changeFun() function will be a new function that describes how much the function given as an argument changes in an increment of time \\(h\\).\n\n\n\n\n\n\nShow that changeFun() depends on h\n\n\n\n\n\n\nModify this to become the “rate of change” function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.4 Algebra\nLet’s compute the rate-of-change function for \\(f(x) \\equiv x^2\\)\n\\[ \\frac{f(x + h) - f(x)}{h} =\n\\frac{x^2 + 2hx + h^2 - x^2}{h} = \\frac{2hx + h^2}{h} = 2x + h\\] Since \\(h\\) can be as small as we want to make it, let’s treat it as zero, so the rate of change of \\(x^2\\) is \\(2x\\)."
  },
  {
    "objectID": "notes/2025-04-01-notes/index-04-01-2025.html",
    "href": "notes/2025-04-01-notes/index-04-01-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "30 2025-04-01 class notes\nReview of objects and operations:\n\n30.1 Mathematical object types\n\nQuantities. Have a unit and a Dimension e.g. L, T, L T-2 and so on.\n\nsymbolic notation: names from the start of the alphabet, names with subscripts, names with special superscripts, e.g. \\(x^\\star\\).\nparameters have their own naming conventions: \\(P, k, \\omega, \\tau\\), …\n\nSpaces. Sets of possibilities. In calculus, we are usually interested in continuous spaces such as the number line.\n\nsymbolic notation: often letters from the end of the alphabet: \\(t, u, v, w, x, y, z\\).\ndimension or “degrees of freedom.” Continuous spaces are often composed from lower-dimensional spaces. The number line has dimension 1 and is often denoted \\(\\mathbb{R}\\).\nOne notation for composed spaces looks like \\((x, y)\\). The dimension is the number of spaces involved (or, really, the sum of the dimensions of the individual spaces). Generic notation, \\(\\mathbb{R}^2\\).\nHeads up … In the linear algebra block, we will be specifying spaces using sets of vectors. Will need to distinguish between the number of vectors specified and the “rank” of the set of vectors. Also, we will see spaces with names like \\(\\vec{x}\\).\n\nFunctions. A transformation from an input space to an output space.\n\nDomain: the input space covered by the function\nRange: the output space\nWe have focussed on output spaces that are \\(\\mathbb{R}\\), but we are going to get more general. The “gradient” is a function with a higher-dimensional output space.\nNotation: - Definition \\[f(x,y,z) \\equiv \\text{some formula or algorithm involving the inputs}\\] - Refering to function, either \\(f()\\) or \\(f(x,y,z)\\).\n\n\n\n\n30.2 Operations\nThis will get a little abstract for operations that we haven’t yet encountered. Don’t worry.\n\nEvaluation. Provide quantity values to a function as inputs and recieve back the corresponding output. \\(f(a, b, c)\\) or \\(f(x_0, y_1, z_3)\\) or, as we are about to see, \\(f(\\vec{x})\\).\nVisualization. Making a graphical depiction of a function by displaying the input space and the output space.\n\nslice_plot() suitable for functions \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\)\ncontour_plot() suitable for functions \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}\\)\nBarely touched on last tem: vectorfield_plot() for functions \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}^2\\)\nAnother possible \\(\\mathbb{R^2} \\rightarrow \\mathbb{R}^2\\) graphic is a “domain to range mapping.” This is fairly common for graphing functions with a complex number input and output. But we won’t need this.\n\nSolving, which we will call “zero-finding.” For polynomials, this is called “root finding.”\n\nThe mosaicCalc::Zeros() function handles \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\) functions.\nFor \\(\\mathbb{R}^2 \\rightarrow \\mathbb{R}\\) functions, use contour_plot() or reduce the dimension of the input space by “Currying.”\nBasic iterative method: Newton’s method $\\(x_{i+1} = x_{x} - f(x)/f'(x)\\). With linear algebra techniques, we will be able to handle \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) functions.\n\nCurrying. Reducing the dimension of the input space. We haven’t seen this much yet but will have many uses for it, for example with parametric plots for trajectories.\n\nGeneral idea: start with \\(f(x, y)\\) then restrict input to a subspace, e.g. \\(f(x, a x + b)\\). Trajectories are \\(f(x(t), y(t))\\), which is a function of \\(t\\).\n\nFinding argmaxes or argmin of an “objective function.”\n\nRead from slice plots (trivial) or contour plots.\nmosaicCalc::argM() for \\(\\mathbb{R} \\rightarrow \\mathbb{R}\\) functions\nFor \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) functions, we will have a variety of methods: quadratic approximation, iteration.\nNewton’s method: $\\(x_{i+1} = x_{x} - f'(x)/f''(x)\\). With linear algebra techniques, we will be able to handle \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\)\nLater on, we’ll look at objectives \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}^m\\). This is handled by “constrained optimization.”\n\nDifferentiation. Takes a function \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}\\) and gives back a function \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}^n\\).\n\nWhen \\(n = 1\\), this is just the conventional \\(\\partial_x f(x)\\)\nWhen \\(n &gt; 1\\), derivative with respect to one input is the “partial derivative.” In contrast, we sometimes differentiate with respect to all \\(n\\) inputs.this is the gradient, which is \\(n\\) functions of \\(n\\) inputs.\nFor the future … differentiating \\(n\\) functions of \\(n\\) inputs will give us \\(n^2\\) functions of \\(n\\) inputs.\n\nAnti-differentiation and accumulation/integration.\n\nSo far, we’ve only considered the anti-derivatives of the basic-modeling functions, that is finding the function whose derivative will be the one we already have in hand.\nWe’ll start this in a couple of weeks.\nIn the dynamics block, we’ll accumulate several derivatives simultaneously.\n\nConstructing functions from data\n\nSo far, we’ve done this by finding parameters, e.g. by model_train() or fitModel(). This will be an important application of linear algebra.\nMore generally, “machine-learning” methods can be applied.\nLater, we’ll look at “interpolating functions” and “smoothers” and “splines.”\n\nFuture: “Transformation” or “re-basing.” Referring to a space using a new set of coordinates.\n\nFourier transforms, singular-value-decomposition, eigenvectors\nIn physics, transformation to polar, cylindrical, or spherical coordinates is common, but we won’t touch on these."
  },
  {
    "objectID": "notes/2025-03-04-notes/index-03-04-2025.html",
    "href": "notes/2025-03-04-notes/index-03-04-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "22 2025-03-04 class notes\n\n22.1 Recursive nature of differentiation.\nConsider the structure of a tilde expression. We’ll use this one as a running example:\n\n\n\n\n\n\nThis doesn’t have any compelling modeling context. I chose it to illustrate the mechanics of differentiation.\nWhat we call a “tilde expression” has a different standard name in the R language: a “formula.” We use “tilde expression” because we are reserving “formula” to use under its standard mathematical expression. But we will need some more R names to work with tilde expressions. Here’s how to find out the “class” of an R object.\n\n\n\n\n\n\nThe tilde expression stored under the name Tilde has three parts: the tilde symbol itself, and two valid R expressions, one on the right and one on the left side.\nWhat do I mean by a valid R expression? A fragment of code that would be recognized as a complete command by R so long as bindings were provided giving values for the names: A, x, y, k, B.\nWe can look at each of the three parts separately. The double-bracket [[]] notation is effective here. We aren’t using this notation elsewhere in MOSAIC Calculus. It relates to pulling a part out of a list. There is also a single-brack notation [] that pulls a list out of a list.\n\n\n\n\n\n\nThe first part of Tilde is the tilde symbol itself. Notice, however, the two little back-ticks around the printed form of Tilde[[1]]. This indicates that Tilde[[1]] contains a “name.” It might be surprising, but the tilde symbol (with those backticks) is the name of a function, an infix operation much like + or *.\n\n\n\n\n\n\nThe object stored in slot 1 of Tilde is really the name of a function, whose printed form is the back-ticked tilde.\n\n\n\n\n\n\nThe other two parts of Tilde are objects, in this case, of class “call.” This signifies that each of the objects is an invocation of a function on arguments (as in “call a function”).\n\n\n\n\n\n\n\n\n\n\n\n\n“Calls” are also stored in a list fashion, just like tilde expressions. But instead of ~ being the first item of the list, the function itself is the first item. Functions can have zero, one, two, three, or more arguments, which are stored as items in the list.\nThose arguments can be numbers or R expressions, in this case, “name”s or “call”s.\n\n\n\n\n\n\nThe right-hand expression is simpler, consisting only of a name.\n\n\n\n\n\n\nIn the case where an expression is a numeral, the “type” will be “numeric.” The derivative of a numeric expression is zero.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe rest of this has been superceded by the {Driv} package.\n\nLet’s start writing a symbolic differentiation function, keeping it very simple:\n\n\n\n\n\n\nAnd some stand-ins for names used in Dsimp1():\n\n\n\n\n\n\nHandling constants as functions\nAll this does, at this point, is to check whether the expression given is a name, and, if so, return the appropriate function for the derivative of this name with respect to wrt.\nWe will also need a function to supervise the proces of differentiating an expression. For consistency with our use of tilde expressions to hold a formula and the WRT variables, this supervisory function will take a tilde expression as its only argument.\n\n\n\n\n\n\nLet’s try out what we have so far:\n\n\n\n\n\n\nSo far, so good. Now let’s teach Dsuper another differentiation rule, the “plus” or “minus” rule. We’ll package this into Dsimp2(), and make a new kick-the-can function Dsimp3() which we can elaborate on late.\n\n\n\n\n\n\nTry it out:\n\n\n\n\n\n\nNow to handle simple cases: sin(), exp() where the leading function name will be replaced by cos() and exp() respectively. All we need is the chain rule. And we’ll do a bit of simplification for zero() and one().\n\n\n\n\n\n\n\nAdd activities from Ch 23 to lesson plan. 8-12"
  },
  {
    "objectID": "notes/2025-03-06-notes/index-03-06-2025.html",
    "href": "notes/2025-03-06-notes/index-03-06-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "23 2025-03-06 class notes\nGo over the cylinder minimum area for a given volume.\n\\[V(r, h) \\equiv \\pi r^2 h \\ \\ \\ \\text{and}\\ \\ \\ A(r, h) \\equiv 2 \\pi r^2 + 2 \\pi r h\\]\nSet the volume for the cylinder and use that to find h as a function of \\(r\\) that is \\(h = V^\\star / r^2\\).\nPlug this into the formula for \\(A()\\) to eliminate the \\(h\\) dependence.\n\\[A(r) = 2 \\pi r^2 + 2 V^\\star / r\\]\n\\(A()\\) has all the hallmarks of a function with an optimum. The first term grows with \\(r\\), the second term gets smaller with \\(r\\).\nThe process of optimizing: set \\(\\partial_r A(r) = 0\\) and solve:\n\\(\\partial_r A(r) = 4 \\pi r - -2 V^\\star /r^2\\). This gives\n\\(2 \\pi r_\\star - V^\\star /r^2_\\star = 0\\) or, \\(r_\\star^3 = \\frac {V^\\star}{2\\pi}\\).\n\n23.1 Curvature at an argmax\nFind the second derivative and from that the curvature.\n\\[{\\cal K}_f(x)  \\equiv \\frac{\\left|\\partial_{xx} f(x)\\right|}{\\ \\ \\ \\ \\left|1 + \\left[\\strut\\partial_x f(x)\\right]^2\\right|^{3/2}}\\]\nBut at the argmax, \\(\\partial_x f(x^\\star) = 0\\) so the curvature is just \\[{\\cal K}_f(x^\\star) = \\left|\\strut\\partial_{xx} f(x^\\star)\\right|\\] Draw the picture of the objective function with the little circle tucked under the maximum.\n\n\n23.2 Newton Step\nMaximize \\(f(x)\\)\nFind zero of \\(g(x) \\equiv \\partial_x f(x)\\).\nNewton step: \\(x_{n+1} = x_n - g(x_n) / g'(x_n)\\)\nOr, translated back to \\(f()\\)\nMove from current point by \\(-\\frac{\\partial_x f(x_n)}{\\partial_{xx}f(x_n)}\\)\nSort out what are units of this “move by” quantity.\nChapter 24.\nShow Nelder-Mead animation\n\n\n23.3 Maximum likelihood\nSetting: equipment failure. How long until items break? Let’s give the probability of an item lasting \\(x\\) time units.\nExponential PDF: \\(p(x) = \\lambda e^{-x \\lambda}\\)\nMost likely to break immediately (short lifetime) but a few will have extremely long lifetime.\n\n\n\n\n\n\nI measure \\(n\\) examples, each lasts for \\(x_i\\) time units.\nThe likelihood is the product of the individual PDFs. I know \\(x=x_i\\), so the likelihood is a function of \\(\\lambda\\).\nLikelihood: \\[\\prod_{i=1}^n \\lambda e^{-\\lambda x_i}\\]\nWant to find \\(\\lambda\\) that maximizes this.\n\nlikelihood &lt;- function(lambda, x) {\n  prod(lambda * exp(-lambda*x))\n}\n\nobservations &lt;- c(3,6,2,3,9)\n\nlikelihood(.5, x = observations)\n\n[1] 3.165654e-07\n\nvlikelihood &lt;- Vectorize(likelihood, \"lambda\")\n\nslice_plot(\n  vlikelihood(lambda, x=observations) ~ lambda, \n  domain(lambda = 0:1))\n\n\n\n\n\n\n\n\nToo small. So let’s look at the logarithm.\n\nslice_plot(\n  log(vlikelihood(lambda, x=observations)) ~ lambda, \n  domain(lambda = 0:1))\n\n\n\n\n\n\n\n\nSome statistical theory. Maximum likelihood estimation.\nIf \\(x_i\\) are the values of \\(n\\) observations, then the log-likelihood function is\n\\({\\cal L}(\\lambda) \\equiv n \\ln(\\lambda) - \\lambda \\sum x_i\\)\nWhere is the maximum? Differentiate and solve for zero.\n\\[\\partial_\\lambda {\\cal L}(\\lambda) = \\frac{n}{\\lambda} -  \\sum x_i\\] Consequently, \\(\\lambda^* = n / \\sum x_i\\), the “maximimum likelihood estimator.\n\n\n23.4 Finding the variance through differentiation\nSuppose we have a normal probability distribution on \\(x\\) with variance \\(\\sigma^2\\):\n\\[p(x) \\equiv \\frac{1}{\\sqrt{2 \\pi \\sigma^2}} \\Large e^{- (x - m)^2/2\\sigma^2}\\] Given this curve, I want to find \\(\\sigma^2\\). Here’s one way:\n\\[\\ln(p(x)) \\equiv - \\ln(2\\pi) -2 \\ln(\\sigma) - (x-m)^2/2\\sigma^2\\]\nLet’s look at \\(\\partial_x \\ln(p(x))\\):\n\\[\\partial_x \\ln(p(x)) \\equiv  -2 /\\sigma - 2 (x-m)/2\\sigma^2\\]\nAnd now \\(\\partial_{xx} \\ln(p(x))\\):\n\\[\\partial_{xx} \\ln(p(x)) \\equiv  \\frac{1}{\\sigma^2}\\] That is, the radius at the argmax is \\(\\sigma^2\\).\nSo, to find the variance of a distribution, take one over the second derivative of the logarithm of the distribution at the argmax.\nThe likelihood is proportional to a probability distribution. So let’s find its variance. Then, we can translate that into a confidence interval, a range that will include 95% of the probability.\nIt will be based on the curvature, more specifically 2 times the square-root of the radius of the inscribed circle.\nHere’s the curvature at the argmax\n\\[{\\cal K} = \\left|\\partial_{\\lambda\\lambda} {\\cal L}(\\lambda)\\right| = \\frac{n}{\\lambda^2}\\] In other words, the variance is \\(\\lambda^2 / n\\) so the 95% confidence interval is \\(2 \\lambda / \\sqrt{n}\\).\nWe have an estimator and its variance."
  },
  {
    "objectID": "notes/2025-01-10-notes/index.html",
    "href": "notes/2025-01-10-notes/index.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "3 2025-01-10 class notes\n\n3.1 Where we are\nWe’ve been introducing new terms that we will employ throughout the semester, mostly with an eye to creating an explicit nomenclature and notation.\n\nFundamental concepts: Quantity, Function, Space\nModeling: The process of constructing a model. We will cover this systematically, but not yet.\nWe will use two systems for notation:\n\ntraditional, as you might see in the textbook reading.\ncomputing, to be used in constructing computer commands\n\n\nI’ve taken pains to make the two systems of notation as similar as possible, but respect for tradition and the restrictions of computer language interpreters force some divergences.\nElements of notation:\n\nnames: x, y, t, rainfall, temp_{high}. When writing a name in computer notation, do not use quotation marks.\nnumerals: the character representation of a number.\nfunctions: f(), g(), h() are common pronouns, but we will use a lot of proper names for functions, e.g. sin(), log(), dnorm(). (dnorm() is a new one for you! Be patient.)\n\nI write the () after a function name to remind you that the thing being named is a function.\nA handful of functions are written in infix notation. Thus, + is a function name, but you use it as 3 + 2 with the two arguments on the different sides of the function name. This contrasts with functional notation which would look something like \\(plus(3, 2)\\). Even on the computer, don’t convert infix notation to functional notation. Infix is usually easier to read (so long as there are just a handful of operators.)\n\ndefining mathematical functions. When modeling, we will be creating and using mathematical functions. We will also be building computing expressions using computer functions.\ntraditional notation to define a function named henry(): \\(\\text{henry}(t) \\equiv t^2 / \\sin(2\\pi t/P)\\)\ncomputer notation: henry &lt;- makeFun(t^2 / sin(2*pi*t/P) ~ t)\nNote that the computer notation doesn’t have “implicit multiplication.” You must use the * infix operator.\n\n\n\n3.2 Computing with R\n\n3.2.1 Chunks for composing commands\nIn your own work, you will use interactive boxes—called “chunks” or “webr chunks”—to construct commands and, by pressing the “Run Code” button, get the computer to process them and appropriately display the results. It looks like this:\n\nIn writing up notes, I often use a different system that looks like this, without a “Run Code” button.\n\n2 + 3\n\n[1] 5\n\n\nIn both styles, the output is reported with some formatting. The content of the output in the above chunks is 5. Often, output will have more than one component and the [1] is just telling you that the 5 is the first component.\nYou’ll also sometimes see me using a different interface, called “RStudio,” where I type commands in a console or in a document. You don’t need to worry about this.\nYou cannot create on your own a webr chunk. I create them in the process of writing documents that you use. For instance, here is one:\n\n\n\n\n\n\nBut you can use a webr-chunk for any purpose that you like. Feel free to erase whatever expression has been typed and put in your own.\nNB: Use the Calc I/II webr chunks for calculus, and the QR2 webr chunks for QR2. It would have been possible to arrange things so that you could use any chunk for any course, but I haven’t thought this necessary.\nIN-CLASS EXERCISES:\nDo some arithmetic and simple function application in R:\n\n\\(\\frac{22 - 5}{7}\\)\n\\(4.14\\! \\times\\! 10^{-3} \\times 2.83\\!\\times\\!10^{4}\\)\n\\(18 \\sin \\frac{\\pi}{5}\\)\n\\(\\ln(200)\\)\n\\(\\log_{10}(1000)\\)\n\\(\\sqrt{17}\\)\n\\(\\sqrt[3]{17}\\)\n\\(2.14^{3.1 + 7.8}\\)\n\\(e^2\\)\n\n\n\n\n\n\n\n\n\n\n3.3 Storage\nWe often will want to give names to computed objects.\n\nI use the strange word “object” because there are different kinds of computationally constructed things, e.g. numbers and functions among several others. (For instance, in QR2, you will sometimes create “simulations.”)\nThe computer syntax for giving a name to an object involves the “storage arrow” -&gt;. Here, I’ll store the value 5.3 under the name b. The name always goes on the RHS of &lt;-.\n\n\nb &lt;- 5.3\n\nNote that when you store an object, the object is not printed.\nTo recall the named object from storage, just use the name as a command or as part of a command. For instance:\n\nb\n\n[1] 5.3\n\nb + 17\n\n[1] 22.3\n\n\nIN-CLASS EXERCISES:\n\nStore the value \\(\\sqrt{22}\\) under the name billy_bob. Then confirm by calculating billy_bob squared.\nWhy is \\(y^4 = 19\\) not a valid storage expression? Fix it to express the intent.\nCan = be used in place of &lt;-?\n\n\n\n\n\n\n\n\n\n3.4 Errors\nIn response to an ill-formed computer command or some other troubling condition, R will cancel the computation and display an error message. For instance, here is an expression that refers to a name that is not yet in use:\n\nbb\n\nError: object 'bb' not found\n\n\nOn some web browsers, the webr-chunk error messages are not shown. That’s a bug, and I’m trying to figure out what to do about it. For now, I can only apologize and give you a heads up.\nError messages are your friend. Admittedly, it is the kind of friend who you only welcome under special circumstances and otherwise avoid. The friend’s affect is offputting and intimidating. Try to overcome being affected by that. Also, the friend mostly mumbles. It takes work to feret out the valuable hint that your friend is trying to provide.\nIn-class EXERCISES:\n\nWhat happens if you use the name billy bob to hold the value \\(\\cos(22)\\)? After observing the error message, fix it.\n\n\n\n\n\n\n\n\nHere is a command intended to create a function francis():\n\n\n\n\n\n\n\nFigure out what’s wrong and fix it.\n\n\n3.5 Graphs of functions\nGraphing functions of one variable and setting the graphics domain.\n\ndomain(x = 0:10)\nslice_plot(x^2 - 3*x + 2 ~ x, domain(x=-5:5))\n\nIn-class EXERCISES:\n\n\n\n\n\n\n\nPlot out each of the pattern-book functions on a suitable domain. pnorm(), dnorm(), exp(), sin(), sqrt(), log(),\nDefine a recip() function using makeFun().\nDefine an identity() function using makeFun(). (The identity function returns its input unaltered.)\nDefine a power_law() function using makeFun(). Example of a power-law function: \\(y^{2.4}\\)"
  },
  {
    "objectID": "notes/2025-01-14-notes/index-01-14-2025.html",
    "href": "notes/2025-01-14-notes/index-01-14-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "4 2025-01-14 class notes\n\n4.1 Where we are\nActivities we didn’t get to on Friday\n\n\n\nListing 1\n\n\n\n\n\n\n\n\n\n\n\n\nPlot out each of the pattern-book functions on a suitable domain. pnorm(), dnorm(), exp(), sin(), sqrt(), log(),\nDefine a recip() function using makeFun().\nDefine an identity() function using makeFun(). (The identity function returns its input unaltered.)\nDefine a power_law() function using makeFun(). Example of a power-law function: \\(y^{2.4}\\)\n\n\n\n4.2 Spaces, graphs, and graphics\nComposition of input and output spaces in slice_plot(). link\nMapping from (part of?) input space to output space.\n\n4.2.1 2-d input spaces.\n\nCan compose input space with output space to get a 3-dimensional space. Mathematicians like this because the surfaces are beautiful, especially when you can interact with them.\n\nExample: \nThe above example is quite complicated and relates to physics/engineering: a wave packet, and such.\nOf more general use in modeling are simpler functions that resemble terrain locally. The word “local” will be important. Calculus provides tools for translating between the local and the global.\n\n\n\nf &lt;- doodle_fun(~ w & z, seed=101)\nsurface_plot(f(w, z) ~ w & z, domain(w=-5:5, z=-5:5))\n\nLoading required namespace: plotly\n\n\n\n\n\n\nWe will tend to use “contour plots” instead. It’s easier to make measurements on them, but you have to learn how.\n\ncontour_plot(f(w, z) ~ w & z, domain(w=-5:5, z=-5:5), fill_alpha = 0.5)"
  },
  {
    "objectID": "notes/2025-01-16-notes/index-01-16-2025.html",
    "href": "notes/2025-01-16-notes/index-01-16-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "5 2025-01-16 class notes\n\n5.1 Administration\n\nI want to arrange a 5-10 minute meeting (or longer, if you want) with each of you, just to get to know you a little.\n\nI’m free the rest of this morning, and from about 2:30 - 4:00 this afternoon. Or tomorrow.\n\nI’m going to start looking at reading questions, exercises, and such on a regular schedule.\n\nIf you are still shakey about submitting your work, let’s fix it!\nI want to see submissions from all of you on every document from now on.\n\nGrading. The STEM faculty have set a rule for instructors about grading.\n\n\nHalf or more of graded content should be presented and done in a classroom setting.\n\n\nI’m thinking to make this about 50%. Split more or less evenly between class participation and short (15 min) inclass quizzes roughly once a week.\nI won’t necessarily tell you in advance about such a quiz. If you need to make one up, we can do it in my office.\nI’ll adopt a more formal way of keeping track of contributions in class—random sampling. Don’t read too much into this, and absolutely feel free to chip in whenever you want or fend off a question that you would rather someone else answer.\n\nFor instance ….\ntodays_roster()\n\n5.1.1 Class roster for Fri Apr 4\n\nAlistair Haglund\nSimon Rinehart\nGrace Price\nIan Wicht\nMax Litvinenka\nMax Weinstein\nNicole Kargin\nEverett McAlister\nAlmar Tishenko\n\n\n\n\n5.2 Where we are\n\nYou have been introduced to two systems for notation:\n\nmore or less traditional math notation\n{mosaicCalc} computer notation\n\nWe’ve talked about three big concepts you should be becoming very familiar with:\n\nSpace and dimensionality\n\nWhen I write \\(\\sin(x)\\) or sin(x) I’m talking about the input coming from a space named x.\nWhen I write \\(f(x,y) \\equiv y \\sin(x)\\) (or f &lt;- makeFun(y*sin(x) ~ x & y)) the input space has two dimensions.\n\nQuantity\n\nthe amount of some stuff.\neach quantity has in principle two components:\n\na number\nunits that specify how the quantity is measured, e.g. m/s or m/s2\n\nGotcha! We’ll use the word “dimension” to describe the “kind of stuff”, for instance, M L T-2. But you’ll have to determine from context whether we’re talking about the dimension of a space or the dimension of a quantity. (Always feel free to ask!) There is a relationship between to two meanings of “dimension,” but we don’t need to get into it.\n\nFunction - A relationship between one or more (well, … “zero or more”) inputs and a single output. - The space of inputs is called the domain. - The space of output is called the range\n\n\nAside: Good (simple) quiz questions might be - “Define what we mean by a function?” - “What is the dimensionality of the input space to some function \\(f()\\)?” (that I’ll describe) - “What’s the conceptual difference between the units of a quantity and the dimension of that quantity?”\n\nGraphics\n\nYou’ve learned to make two kinds of graphics using {mosaicCalc} software:\n\nA “graph” of a function of one input.\nA “contour plot” of a function of two inputs.\n\nYou know that you have to tell the computer which part of the input space (“domain”) to show in the graph and that you do this with an argument that looks like domain(x=-5:5, y = 10:50)\nAs we move along, we’ll need a few other types of graph, e.g.:\n\nparametric plot\nvector field (or “flow” field)\n\nMost of you learned pretty well in high school how to “read” a graph of \\(f(x)\\).\nYou’re learning how to read a contour plot, e.g. interpret it as a landscape, figure out the value of the output when the input is between two contours, figure out whether movement in a particular direction leads you uphill or downhill.\n\n\nAside: A good quiz question would be a completely artificial task … “Draw a few contours of this function of two variables.”\n\n\n\n\n\n\n\n\n\n\n\n5.3 Today’s topic: “Pattern-book functions”\nSimile: “Shall I compare thee to a summer day?”\nMetaphor: “… and summer’s lease hath all too short a date.”\nA metaphor for the pattern-book functions … styles of painting\n\n\n\n\n\n\n\n\n\nImpressionism\nAmerican Primitive\nPop art\nCubism\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach pattern-book function is a reference example of each style of art. We will use many variations on each style and call these “basic modeling functions.”\nShapes of the pattern book functions:\n\n\n\n\nName\nTraditional notation\nR notation\n\n\n\n\nexponential\n\\(e^x\\)\nexp(x)\n\n\nlogarithm (“natural log”)\n\\(\\ln(x)\\)\nlog(x)\n\n\nsinusoid\n\\(\\sin(x)\\)\nsin(x)\n\n\nsquare\n\\(x^2\\)\nx^2\n\n\nidentity\n\\(x\\)\nx\n\n\none\n\\(1\\)\n1\n\n\nreciprocal\n\\(1/x\\) or \\(x^{-1}\\)\n1/x\n\n\ngaussian\n\\(\\dnorm(x)\\)\ndnorm(x)\n\n\nsigmoid\n\\(\\pnorm(x)\\)\npnorm(x)\n\n\n\nYou need to:\n\nFrom the name of a pattern-book function, be able to draw a pretty accurate graph of the reference example.\nFrom a graph of the reference example, say the name of the function\nFor the functions that we write as formulas (e.g. square is \\(x^2\\)), know the formula. Other functions you just need to know the name, the traditional notation, and the R notation.\nKnow the domain of each pattern-book function.\nKnow the exact output value for one or more “special” values of the input, e.g. \\(\\ln(1)\\) or \\(\\sin(0)\\).\nLater: For each function, know a modeling context where use of the function is standard. E.g.\n\nexponential: radioactive decay, cooling\nsinusoid: waves\nsigmoid: growth in a finite environment\n\nEventually: Wonder how you could ever have confused an exponential function with a power-law function.\nLater: say how a basic-modeling function differs from the reference example\nLater: put together entirely new functions by combining pattern-book functions.\nLater: memorize the derivative and anti-derivative of each pattern-book function.\n\n\n\n5.4 Activity\nIn small groups: Pick three pattern-book functions. Find some special inputs where the output is easy to remember, e.g. the output is zero or the output is an integer."
  },
  {
    "objectID": "notes/2025-02-21-notes/index-02-21-2025.html",
    "href": "notes/2025-02-21-notes/index-02-21-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "18 2025-02-21 class notes\nOne of our pattern-book functions is \\(e^x\\), or, in computer notation, exp(). As you know, this is the exponential function, as are \\(2^x\\), \\(10^x\\), or \\(7.321^x\\). These functions all have the same shapes, the familiar exponential.\nslice_plot(exp(x) ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(2^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(10^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(7.321^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\n\n\n\n\n\n\n\n\n\n\n\n(a) \\(e^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(b) \\(2^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(c) \\(10^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(d) \\(7.321^x\\)\n\n\n\n\n\n\n\nFigure 1: Some different denominations of exponential functions.\n\n\n\nMy personal favorite for a standard denomination is \\(2^x\\). People have an easy time understanding “doubling” and “halving,” and I would call this function \\(\\text{double}(t)\\) and double(t). It would be easy to remember that \\(2 \\text{double}(t) = \\text{double}(t + 1)\\).\nThe convenience of \\(\\text{double}()\\) is balanced, unfortunately, by a bit of an inconvenience. This has to do with the derivative, \\[\\begin{align}\n{\\cal D}_t \\text{double}(t) & \\equiv\n\\frac{\\text{double}(t + h) - \\text{double}(t)}{h}\\\\\n& = \\frac{2^{t+h} - 2^t}{h}\\\\\n& = \\frac{2^h - 1}{h}2^t\n\\end{align}\\]\nThe brilliant thing here is that \\[{\\cal D}_t\\, \\text{double}(t)\\  \\propto\\  \\text{double}(t),\\] the derivative is proportional to the function itself!\nThe constant of proportionality is \\(\\frac{2^h - 1}{h}\\). What number is this, and does it depend on \\(h\\)?\n\n\n\n\n\n\nClearly \\(\\frac{2^h - 1}{h}\\) does depend on \\(h\\), but for \\(h\\) very small, it approaches 0.693. (Make \\(h\\) smaller still in the graph.)\nIt’s inconvenient to have to remember the proportionality constant 0.693. Could we choose some other base for the exponential function that would make the constant of proportionality 1?\nTry it by making \\(h\\) small (say, h = 0.000001) and plotting out the constant of proportionality as a function of the base:\n\n\n\n\n\n\nA base somewhere between 2 and 3 will lead to a constant of proportionality of 1. Zoom in and find it.\nOr, find the zero-crossing of the function\n\n\n\n\n\n\nDoes this depend on \\(h\\)? Try it.\n\\(e\\) (that is, exp(1)) is the number that makes the constant of proportionality 1:\n\\[{\\cal D}_t e^t = e^t\\]\n\n18.1 Differentiation rules for the pattern-book functions\n\n\\(\\partial_x\\) one(x) \\(=\\) zero(x)\n\\(\\partial_x\\) identity(x) \\(=\\) one(x)\n\\(\\partial_x\\) square(x) \\(=\\) 2 identity(x)\n\\(\\partial_x\\) reciprocal(x) \\(=\\) -1/square(x)\n\\(\\partial_x\\) log(x) \\(=\\) reciprocal(x)\n\\(\\partial_x\\) sin(x) \\(=\\) cos(x)\n\\(\\partial_x\\) exp(x) \\(=\\) exp(x)\n\\(\\partial_x\\) sigmoid(x) \\(=\\) gaussian(x)\n\\(\\partial_x\\) gaussian(x) \\(=\\) - x gaussian(x)\n\nLet’s confirm these using our simple rateOfChange() function:\n\n\n\n\n\n\nExample:\n\nf &lt;- makeFun(log(t) ~ t)\ncandidate &lt;- makeFun(1/t ~ t)\nDf &lt;- rateOfChange(f(t) ~ t)\nslice_plot(\n  candidate(t) ~ t,\n  domain(t = -3:3)\n) |&gt;\n  slice_plot(\n    Df(t) ~ t, \n    color = \"blue\", alpha = 0.2,\n    linewidth = 5\n  )\n\nWarning in log(t): NaNs produced\nWarning in log(t): NaNs produced\nWarning in log(t): NaNs produced\nWarning in log(t): NaNs produced\n\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\nActivities 8, 9, 10, 11 in Chapter 19 exercises.\n\n\n18.2 Exercise 11\nLet’s explore the derivative \\(\\partial_x \\frac{1}{x}\\) using the evanescent-h method.\nThe general definition of the derivative of a function \\(f(x)\\) is the limit as \\(h\\rightarrow 0\\) of a ratio: \\[\\partial_x f(x) \\equiv \\underbrace{\\lim_{h \\rightarrow 0}}_\\text{limit}\\  \\underbrace{\\frac{f(x + h) - f(x)}{h}}_\\text{ratio}\\ .\\] For an evanescent-h calculation, we put aside for a moment \\(\\lim_{h\\rightarrow0}\\) and operate algebraically on the ratio. In our operations, we treat \\(h\\) as non-zero.\n\nSubstitute in \\(f(x) = 1/x\\) and show step-by-step that the ratio (for non-zero \\(h\\)) is equivalent to \\(- \\frac{1}{x^2 + hx}\\).\nThe domain of the function \\(1/x\\) is the entire number line, except zero. Examine the expression \\(- \\frac{1}{x^2 + hx}\\) to see if setting \\(h\\) to zero would ever involve a division by zero for any \\(x\\) in the domain of \\(1/x\\).\nIf setting \\(h=0\\) cannot cause a division by zero, it is legitimate to do so. Set \\(h=0\\) and simplify the expression \\(- \\frac{1}{x^2 + hx}\\). Compare this to the rule for \\(\\partial_x \\frac{1}{x}\\) given in MOSAIC Calculus Ch. 19.\n\n\n\n18.3 Exercise 7\nConsider the function \\(f(x) \\equiv \\frac{x-3}{x-3}\\). Simple algebra suggests that the output will be 1 for any \\(x\\) value input, but the rules are division mean that the output is undefined for input \\(x=3\\). Thus, the function has a “singularity” at \\(x=3\\). We want to test whether this singularity is removable, that is, whether the function has a finite limit as \\(x \\rightarrow 3\\). The computer can help us out. The basic idea is to try inputs closer and closer to \\(x=3\\) and see if the output behaves nicely. To help you distinguish between non-removable and removable singularities (or, in the words of the song “Santa Claus is Coming to Town”, to know “who’s naughty or nice”), Listing 1 defines the function \\(f()\\) and a similar function \\(g()\\). Try out both \\(f()\\) and \\(g()\\) for a sequence of inputs that get closer and closer to \\(x=3\\) but are not exactly 3.\n\n\n\nListing 1"
  },
  {
    "objectID": "notes/2025-02-18-notes/index-02-18-2025.html",
    "href": "notes/2025-02-18-notes/index-02-18-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "16 2025-02-18 class notes\nWe start on the “differentiation” part of the course today.\n\n“Differentiation” is an operation that takes a function as input and produces a function as output.\nIf you had calculus before, you almost certainly learned “rules” for differentiation, for instance \\(\\frac{d x^2}{dx} \\rightarrow 2 x\\) or \\(\\frac{d \\sin(a x)}{dx} \\rightarrow a \\cos(a x)\\)\nWe will study these rules mostly as a matter of aculturating you to calculus: about 15 generations of calculus students have learned these.\nComputers know the rules, too.\n\n\nD(x^2 ~ x)\n\nfunction (x) \n2 * x\n\nD(sin(a*x) ~ x)\n\nfunction (x, a) \na * cos(a * x)\n\n\n\n\n\n\n\n\nFun facts!\n\n\n\n\nDifferentiation takes a function A() as input and returns a function B() as output.\nAnti-differentiation takes the function B() as input and returns the function A() + C.\n\n\nantiD(a*cos(a*x) ~ x)\n\nfunction (x, a, C = 0) \nsin(x * a) + C\n\n\n\nBoth differentiation and anti-generation produce functions with different dimension than the original.\n\n\n\n\n16.1 Simple or hard\nOur task for today is to see how simple differentiation is and why so many generations have found it to be an “advanced” math topic.\nThe idea of a derivative revolutionized science and math. It’s a big deal.\nYet the underlying concept is very simple to modern eyes.\nBut not so simple for people living in 1600-1850. These sorts of things were not available in that era.\n\nthe idea of a “function”\nthe idea of input and output spaces\nthe idea of a graph of data or of a function\ngrowing up with speedometers in cars that make it easy to monitor speed continuously.\nthey only had algebra, not computers and computer languages\n\n\n“Mathematicians of the 18th century typically regarded a function as being defined by an analytic expression.” Source\n\n\n“An analytic expression (also known as expression in analytic form or analytic formula) is a mathematical expression constructed using well-known operations that lend themselves readily to calculation. … [T]he set of well-known functions allowed can vary according to context but always includes the basic arithmetic operations (addition, subtraction, multiplication, and division), exponentiation to a real exponent (which includes extraction of the nth root), logarithms, and trigonometric functions.” Source\n\nThe conception of a function as “being defined by an analytic expression” is perhaps what leads to the idea of differentiation as being about formulas: translating one analytic expression into another.\n\n“In the 19th century, the demands of the rigorous development of analysis by Weierstrass and others, the reformulation of geometry in terms of analysis, and the invention of set theory by Cantor, eventually led to the much more general modern concept of a function as a single-valued mapping from one set to another.” Source\n\nInstead of “one set to another,” think of it as a mapping from an input space to an output space. A space is a set of continuous possibilities.\n\n\n16.2 Galileo’s experiment\nWe can trace the essential cognitive shift that led to the invention of differentiation by looking at where Galileo (1564 - 1642) left things off and what Newton (1643-1727) needed to change to give a modern conception of motion. - That Newton was born the year after Galileo died provides a nice symbol of the emergence of calculus.\n\nWe’re going to reproduce Galileo ball-on-ramp experiment with a computer simulation. Our task is to position the belled-gated to produce a steady beat.\nNeed to run these interactively, but not using webr because webr doesn’t play sounds.\n\nplay_seq &lt;- function(n=5, bump = 0, intervals=rep(.5,n)) {\n  k &lt;- sample(2:(n-2), size = 1)\n  if (bump &gt; 0) intervals[k] &lt;- intervals[k] + sample(c(-bump, bump), size=1)\n  for (wait in intervals) {\n    Sys.sleep(wait)\n    audio::play(sin(1:5000/20))\n  }\n}\n\ninterval_from_pos &lt;- function(pos = 1:10, fun = sqrt) {\n  diff(fun(pos))\n}\n\nplay_ramp &lt;- function(n=7, intervals=rep(.5,n)) {\n  audio::play(dnorm(seq(-2,2, length=5000)) *sin(1:5000/20))\n  for (wait in intervals) {\n    Sys.sleep(wait)\n    audio::play(dnorm(seq(-2,2, length=5000)) *sin(1:5000/20))\n  }\n}\n\n\nplay_ramp()\nplay_seq(n=10, bump = .000)\n\nStarting point: evenly spaced gates.\n\npositions &lt;- c(0,1,2,3,4,5,6)\nplay_ramp(intervals = interval_from_pos(positions))\n\nCalculate the first differences\n\ndiff(positions)\n\n[1] 1 1 1 1 1 1\n\n\nAnd the second differences\n\ndiff(diff(positions))\n\n[1] 0 0 0 0 0\n\n\n\n\n16.3 Quiz from Feb 7\nQuestion 1 Inflation is an important economic phenomenon concerning the level of prices. As you likely know, inflation rates vary over the months and years. Imagine a country that has an inflation rate of 2%/year for three years changing to 5%/year for two years, then settling down to 3%/year for another three years.\nThink of price \\(P(t)\\) as a function of time \\(t\\) (in years). \\(P(0)\\) will be the price level at year zero, let’s call it 100. The 2% inflation means that the price at year 1 will be \\(P(1) = 1.02 P(0)\\). Staying at that inflation rate at year 3 the price will be \\(P(3) = 1.02^3 P(0)\\).\n\nOverall, the price function a constant inflation rate of 2% would be \\(P(t) = 1.02^t P(0) = 1.02^t \\times 100\\). What shape of function is this? Think in terms of our pattern-book functions.\nAn economist is plotting a graph of \\(P(t)\\) versus \\(t\\). She has a choice: use (i) linear axes, (ii) semi-log axes, or (iii) log-log axes. A good choice is one that makes the graph of the function as simple as possible. Which choice would be good for the function in (1)? Briefly justify your choice.\nUsing your choice from (2), sketch the function from (1). Draw \\(P(t)\\) and \\(t\\) axes, and indicate your choice from (2) by labeling each of those axes as either “linear” or “log.” Then draw the appropriate graph of \\(P(t)\\) from (1).\n\n \n \n \n\nExtend your axes as needed to provide room for the graph of \\(P(t)\\) over the entire 8-year domain, \\(0 \\leq t \\leq 8\\). Put tick marks on the \\(t\\) axis at values 0, 3, 5, and 8. Then draw \\(P(t)\\) over the whole 8-year domain, using the rates specified in the first paragraph of this problem. You don’t need to put tick marks on the \\(P(t)\\) axis; it’s only the shape of the function we’re concerned with here. (Hint: It’s easier than you might think if you made the right choice at step (2).)\n\n \n \n \n \n \n\nQuestion 2 The function \\(h(x) \\equiv 1/x^2\\) is the composition of two simpler pattern book functions \\(h(x) \\equiv f(g(x))\\). Write down the formulas for \\(f()\\) and \\(g()\\).\n \n \n \n \n\nQuestion 3 The graph shows the composition \\(f(g(t))\\) functions, \\(f(x) \\equiv 1/x\\) and \\(g(y) \\equiv A \\sin\\left(\\frac{2\\pi}{P} y\\right) + B\\). (Note that the parts of the graph where the curve runs away from the graph are vertical asymptotes. Such a small range is graphed so that you have a good shot at finding the parameters from the graph.)\n\n\n\n\n\n\n\n\n\nGive somewhat accurate numerical values for the three parameters \\(A\\), \\(B\\), and \\(P\\).\n\nQuestion 4:\nYou are to build a model of student performance on an exam as a function of the time spent studying (\\(s\\)) during previous weeks and the time spent sleeping (\\(z\\)) during that time. Let’s agree that there is such a thing as studying too much. As for sleep, assume that more is better and that our model doesn’t need to include “over-sleep.”\nHere is the generic second-order polynomial in two variables, \\(s\\) and \\(z\\):\n\\(a_0 + a_s s + a_z z + a_{sz}\\ s z + a_{ss} s^2 + a_{zz} z^2\\)\nYour task is to say which of the coefficients you will need in the model to capture the phenomena described in the first paragraph and your common sense about performance, studying, and sleep.\nLeaving aside \\(a_0\\) … you should use your intuition, knowledge of calculus, and modeling to say what the expected sign is for each of coefficients you decided to include in the model. Also, for each of these coefficients give a very brief explanation of why you decided that the coefficient will be positive or negative."
  },
  {
    "objectID": "notes/2025-01-17-notes/index-01-17-2025.html",
    "href": "notes/2025-01-17-notes/index-01-17-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "6 2025-01-17 class notes\nLet’s just call it “Calculus” instead of Calc I/II\n\n6.1 Where we are\nReview of the chapters. Each student picks one chapter.\n\n\n6.2 Describing functions with words\nThese words are used to describe local properties, that is, over a “finite” part of the domain.\n\nslope\nconcavity\ncontinuity\nmonotonicity\nperiodicity\nasymptotes\nlocal extrema\n\nFunctions can change their properties as you move from one locale in the domain to another.\n\n\n6.3 Building new functions\nWe will build new functions from old ones. There are several techniques, that are talked about in the next block.\n\ninput scaling\noutput scaling\nlinear combination\nmultiplication\ncomposition\n\nThere are also many methods to build functions that approximate data. You’ve seen this with annot = \"model\" in QR2, but in Calculus we will use different software because we will focus on continuous functions.\n\n\n6.4 Activity\n\nSummarize each of the pattern-book functions in terms of these descriptive words.\n\n\n\nOn the board, sketch out some imagined functions over some finite domain that have these properties:\n\n\ndownward sloping but concave up.\ndiscontinuous at a point\nnon-monotonic and concave down.\nvertical asymptote at \\(x=1\\)\nleft horizontal asymptote at 0, right at 0 as well\na function with two local extrema (over the domain you are showing)\n\n\nAre the functions described below possible?\n\n\nContinuous with two local maximum but no local minimum.\nSwitching from concave up to concave down as \\(x\\) increases\nMonotonic with a local maximum\nHave both left and right horizontal asymptotes and also a vertical asymptote at \\(x=5\\).\n\n\n\n6.5 Quiz (15 minutes)\nPossibly: review quiz"
  },
  {
    "objectID": "notes/2025-04-04-notes/index-04-04-2025.html",
    "href": "notes/2025-04-04-notes/index-04-04-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "33 2025-04-04 class notes\n\n\n\n\n\n\nConsole A\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConsole B\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConsole C\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n33.1 Dot product and the correlation coefficient\nHere’s the way we did things in QR2:\n\n\n\n\n\n\nThe correlation coefficient is the square root of R2 for for a model with only one explanatory variable where both the response and the explanatory variables are quantitative.\n\n\n\n\n\n\nNow let’s compute the dot-product and the cosine of the inclusive angle by data wrangling.\n\n\n\n\n\n\n\n\n33.2 Addition\n\n\n33.3 Scaling\nScaling provides the way to turn a vector into a space.\n\n\n33.4 Linear combination\nA way to produce a space defined by two or more vectors.\nWhat is modeling in terms of vectors. Find the best linear combination of vectors (explanatory terms) to approximate the response vector.\n\n\n33.5 Subspaces\nWhat’s the subspace spanned by 3 vectors on a table?\n[We only got this far.]\n\n\n33.6 Functions as vectors\nGaussians over a two second-window\n\n\n\n\n\n\n\n\n33.7 Matrices\nMatrix of random numbers\n\n\n\n\n\n\n\n\n33.8 SVD and the dimension of subspaces\nCreate some vectors, then some linear combinations of them than look at the singular values."
  },
  {
    "objectID": "notes/2025-01-28-notes/index-01-28-2025.html",
    "href": "notes/2025-01-28-notes/index-01-28-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "10 2025-01-28 class notes\n[picked up from Friday’s class]\n\n10.1 Chapter 11: Fitting features\nInput- and output-scaling heuristics for a handful of pattern book functions\nNote that the output scaling is a form of LINEAR COMBINATION.\n\n10.1.1 Exponential\n[We did this one on Friday 24 Jan.] But here’s a game for estimating parameters. Warning: You won’t always be able to see the features clearly enough to make good estimates.\n\n\n\n\n\n\n\n\n10.1.2 Sin().\nThere are four parameters.\nThe output and output scaling is the same as for other functions, but a different convention is used for the input scaling expression: \\[A \\sin\\left(\\ \\underbrace{\\frac{2\\pi}{P} (t-t_0)}_\\text{input scaling} \\right) + B .\\]\n\n\\(P\\) is the period: peak-to-peak in the domain.\n\\(B\\) is still called the “baseline” but it is not at the bottom of the function range.\n\\(A\\) is the “amplitude”. It corresponds to half the peak-to-trough range.\n\\(t_0\\) is the “left-shift,” the location in the domain of an upward-sloping baseline crossing.\nSometimes people write things differently:\n\n\\(A \\sin(2\\pi (t-t_0)/P) + B\\)\n\\(A \\sin(2\\pi t/P + \\theta) + B\\)\n\\(A \\sin(\\omega t + \\phi) + B\\)\n\\(A \\sin(\\omega t) + B \\cos(\\omega t) + C\\)\n\nThe first three of the above should be recognizably equivalent with simple algebraic re-arrangement. (iv) is more subtle and results from a trigonometric identity.\nWe’ll use (i), and you’re expected to be able to estimate by eye the four parameters.\nWe could also write \\(A \\cos(2 \\pi (t - t_0)/P) + B\\), but \\(t_0\\) would be the location of a peak.\n\n\n\n\n\n\n\n\n\n10.1.3 Gaussian & sigmoid\nOutput scaling is the same as always: \\(A\\) and \\(B\\).\n\nfor \\(A &gt; 0\\), \\(B\\), “baseline,” is the value at the left horizontal asymptote.\n\\(A\\) is more difficult for dnorm()\n\npnorm(): easy. Vertical distance between lower and upper horizontal asymptote.\ndnorm() the meaning of \\(A\\) depends on sd. If you must know (you don’t at this point), measure the peak to baseline distance, then divide by dnorm(mean, mean, sd) Of course, you need to know mean and sd for this.\n\n\nInput scaling is written differently in terms of two new parameters: mean and sd.\n\nmean the location in the domain of the peak (dnorm()) or the half-way point (pnorm())\n\nsd, the “standard deviation,” is\n\ndnorm(): roughly the half-width (61%) at half-height\npnorm(): roughly the width between the half-way point and the input producing an output at three-quarters (80%) of the way to the top.\n\n\n\n\n\n\n\n\n\n\n\n\n10.2 Chapter 10: Functions with multiple inputs\nMaking them by …\n\nLinear combination\nMultiplication\nComposition (?)\nPiecewise (?)\n\nCommon forms from science generally:\n\nExample: Breaking distance of car as function of speed and road conditions (slip)\nInteraction.\n\nExample, rabbits and foxes. Change in rabbit population as function of rabbit population and fox population.\nExample, rate of reaction between two re-agents \\(\\alpha\\ [A][B]\\)\nExample (maybe): demand for one good as a function of price of that good and price of a substitute.\nWe are going to see this particularly when we look at low-order polynomials in multiple variables."
  },
  {
    "objectID": "notes/2025-01-24-notes/index-01-24-2025.html",
    "href": "notes/2025-01-24-notes/index-01-24-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "9 2025-01-24 class notes\n[picked up from Thursday’s class]\n\n9.1 Assembling new functions from existing ones (Chapter 9)\nWidely used ways to combine functions to create new ones:\n\nLinear combination\nFunction multiplication\nFunction composition\nPiecewise definition (and the ifelse() function.)\n\n\n\n9.2 Chapter 11: Fitting features\nInput- and output-scaling heuristics for a handful of pattern book functions\nNote that the output scaling is a form of LINEAR COMBINATION.\n\nExponential\n\nThis is as far as we got on Friday.\n\nSin\nGaussian & sigmoid"
  },
  {
    "objectID": "notes/2025-03-14-notes/index-03-14-2025.html",
    "href": "notes/2025-03-14-notes/index-03-14-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "27 2025-03-14 class notes\nSteve Strogatz’s \\(pi\\)-day article published on March 13.\nThe March 14 NY Times \\(pi\\)-day article\nTalking about convergence.\nNumber systems: What is 1.11111111 \\(\\ldots\\)?\ncurrency: pounds, shillings, pence\ntime: hours, minutes, seconds\nangle, degrees, minutes seconds: show a decimal lat/long location on Google Maps\nHow do we know that 3.14159265358979 … converges to a finite number. It’s the sum of an infinite number of things:\n\\[ 3 x^0 + 1 x + 4 x^2 + 1 x^3 + 5 x^4 + 9 x^5 + 2 x^6 + \\ ... \\text{ at } x=1/10\\]\nThis looks like a function. (It is a function, it’s just that we are evaluating it at x=0.1 to get \\(\\pi\\))\n\n27.1 Convergence of an infinitely long polynomial:\n\\[\\sum_{0}^{n\\rightarrow \\infty} x^{-n} = 1 + x \\sum_{0}^{n \\rightarrow \\infty} x^{-n} \\]\nso\n\\[ \\sum_{0}^{n\\rightarrow \\infty} x^{-n} \\left(1 -x \\strut\\right) = 1\\]\nso\n\\[ \\sum_{0}^{n\\rightarrow \\infty} x^{-n} = \\frac{1}{1-x} \\]\nEvaluate this at x = 1/10 to get the value of 1.11111 \\(\\ldots\\)\nNow look at \\(\\sum_{0}^{n\\rightarrow \\infty} 10 x^{-n}\\). It is larger than any decimal digit expansion. ## How high a power do I really need for the polynomial?\n\n\n27.2 Exponential\n\nmyexp &lt;- function(x) {\n  if (x &lt; 0) 1/myexp(-x)\n  else {\n    power &lt;- 0\n    while(x &gt; 0.01) {\n      x &lt;- x / 2\n      power &lt;- power + 1\n    }\n    exp_tailor(x)^(2^power)\n  }\n}\nexp_tailor &lt;- function(x){\n  1 + x + x^2/2 + x^3/6 #+ x^4/24\n}\n\n\n\n27.3 Sinusoid\n\nmysin &lt;-function(x) {\n  x &lt;- x %% (2*pi)\n  if (x &lt; 0) -mysin(-x)\n  else if (x &gt; pi) - mysin(x - pi)\n  else if (x &gt; pi/2) mysin(pi - x)\n  else if (x &gt; pi/4) cos_taylor(x - pi/2)\n  else sin_taylor(x)\n}\n\nsin_taylor &lt;- function(x) {\n  x - x^3/6. + x^5/120. - x^7/5040.\n}\n\ncos_taylor &lt;- function(x) {\n  1 - x^2/2 + x^4/24 - x^6/720\n}"
  },
  {
    "objectID": "notes/2025-04-10-notes/index-04-10-2025.html",
    "href": "notes/2025-04-10-notes/index-04-10-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "35 2025-04-10 class notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncat(htmltools::HTML(\"The square root is $\\\\sqrt{x}$\"))\nThe square root is \\(\\sqrt{x}\\)\n\n \\(\\sqrt{x^2}\\)  If I really, really, really, wanted to say something about this then I would type in a very long answer such as \\(\\int_0^\\infty \\frac{dx}{x}\\)  Option 3\n\n \nAnd here is the second question …\n\n Option A  Option B  Option C\n\n\n\n\n\n\n\n35.1 From last week …"
  },
  {
    "objectID": "notes/2025-01-21-notes/index-01-21-2025.html",
    "href": "notes/2025-01-21-notes/index-01-21-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "7 2025-01-21 class notes\nAn unexpected snow day! I’m going to have to improvise a little.\nHere are a few chunks for me to work in on my tablet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe only change is a different R function, gf_point() that plots a response variable against a single explanatory variable, e.g., Galton &lt;- gf_point(height ~ mother). There\n\n7.1 Activity\n\nPlot some data on the screen.\nCopy it over to your board.\nDraw a version of a basic modeling function that aligns with the data.\n\nSome pattern-book functions will work better than others. fitModel() makes you choose the function, then does the rest automatically.\nIf we expanded fitModel() so that it would go through a large library of functions, try them all, and then pick the one that works best overall, we would be doing “machine learning.” (There would be additional technicalities, which are discussed a little in Spiegelhalter Ch. 4. “Cross-validation” is one of the methods that can come into play, but we won’t talk about that in this Calculus course.)\nHow do you think the computer could do what you do by eye automatically? We need a framework and a procedure.\n\n\n7.2 Framework Part 1: Input and output scaling\nFramework Part 2 was deferred to 01-23\n\n\n7.3 Activity"
  },
  {
    "objectID": "notes/2025-01-23-notes/index-01-23-2025.html",
    "href": "notes/2025-01-23-notes/index-01-23-2025.html",
    "title": "MOSAIC Calc 2025",
    "section": "",
    "text": "8 2025-01-23 class notes\n\n8.1 Where we are … and where we are heading\nYou are getting comfortable with the basics of function, spaces, quantity. You have a basic vocabulary for describing functions in words and for interpreting functions with one- and two-inputs. You have a basic set of pattern-book functions. These are purely mathematical functions in the sense that the input and output is always a pure number rather than a quantity with units and dimension.\nIn modeling, we construct functions to represent the relationship between quantities in the real world.\n\nYou have already seen how to parameterize the pattern-book functions so that they can take a quantity as input and produce a (perhaps different) quantity as output. This is the point of input and output scaling: (Chapter 8)\nInput scaling turns a quantity into a pure number suited as an input to the pattern-book functions.\nOutput scaling turns a pure number—the output of a pattern-book function—into a quantity.\n\nACTIVITY: If \\(x\\) and \\(f(x)\\) are pure numbers, explain what have to be the dimensions in the scaling parameters\n\n\\(a (q - q_0)\\) is to translate \\(q\\) to a specified quantity\n\\(A f(a(q - q0) + b) + B\\) to translate the pure number output of \\(f()\\) into the output quantity \\(Q\\).\n\n\ninput: miles per hour; output: force (e.g. air resistence)\ninput: Yen; output: tons of cardboard boxes\n\nTODAY, we will discuss two important topics:\n\nThe idea of “fitting functions to data” and the basics behind getting a computer to do this for you. (Chapter 7).\nCombining existing functions to create new ones. (Chapter 9)\n\nTOMORROW, we will look at “fitting function features”: Chapter 11. There are a few recognizable features—“amplitude,” “baseline,” “doubling time,” etc.—that enable us to estimate the parameters of a handful of functions based on measurements of plotted data or a specified graph.\nNEXT WEEK:\n\nLooking at functions with multiple inputs. (Chap 10)\nUsing low-order polynomials to encode our understanding of a relationship. (Chap 12)\nSome of the mathematical operations we can perform on functions to extract information from them. (Chap 13)\n\n\n\n8.2 Framework Part 2: Automatic fitting of functions to data\n\n8.2.1 Procedure: Guess, check, and improve\nGuess: Pick/guess some more-or-less reasonable specific parameter values\nCheck: Now that we have a function in hand (with the guessed parameter values), how close is our function to the data. We will measure this with the “residuals.” Each data point is a distance from the function. We’ll sum or average this over all the data points to get a reading of closeness.\nImprove: The goal is to modify our guess in order to improve the closeness of our function to the data. How can we guess how to change our first guess to improve things? This is where you can start to talk about finite diferences, slopes, and increments. We will eventually change this into the language of “derivatives.” The “back propagation” used in Deep Learning neural networks is nothing more than this, although on an immense scale.\nfitModel() adopts this strategy. Sometimes it needs a starting guess, sometimes not. Later in the course we’ll see a way (that sometimes works) to avoid the starting guess.\n\n\n8.2.2 Fitting functions to data\nAn informal way to fit functions works when we “check” by eye the current fit by looking at the match between the graph of the function and the data. Then tweak the input and/or output scaling to improve things a little bit.\n[We only got here. Deferring the following until Friday 1/24]"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources for Calc I/II",
    "section": "",
    "text": "This is where I’ll put information about textbooks, policies, etc."
  },
  {
    "objectID": "assignments/Week-11/index-assignment-11.html",
    "href": "assignments/Week-11/index-assignment-11.html",
    "title": "MOSAIC Assignment Week 11",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-11.rmarkdown Collect your answers No answers yet collected"
  },
  {
    "objectID": "assignments/Week-15/index-assignment-15.html",
    "href": "assignments/Week-15/index-assignment-15.html",
    "title": "MOSAIC Week 15 Assignment",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-15.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "assignments/Week-12/index-assignment-12.html",
    "href": "assignments/Week-12/index-assignment-12.html",
    "title": "MOSAIC Week 12",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-12.rmarkdown Collect your answers No answers yet collected"
  },
  {
    "objectID": "assignments/Week-16/index-assignment-16.html",
    "href": "assignments/Week-16/index-assignment-16.html",
    "title": "MOSAIC Week 16 Assignment",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-16.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "assignments/Week-19/index-assignment-19.html",
    "href": "assignments/Week-19/index-assignment-19.html",
    "title": "MOSAIC Week 19 Assignment",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-19.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "assignments/Week-17/index-assignment-17.html",
    "href": "assignments/Week-17/index-assignment-17.html",
    "title": "MOSAIC Week 17 Assignment",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-17.rmarkdown Collect your answers No answers yet collected\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "assignments/Week-18/index-assignment-18.html",
    "href": "assignments/Week-18/index-assignment-18.html",
    "title": "MOSAIC Week 18 Assignment",
    "section": "",
    "text": "Submitting your answers\n\n\n\nIf the answers that have been loaded automatically are not yours, press this button before starting your work:\n\n\nClear memory\n\nAt any point, you can submit your answers by collecting them and uploading them to the class site.\nindex-assignment-18.rmarkdown Collect your answers No answers yet collected"
  },
  {
    "objectID": "assignments/Week-12/index-assignment-12.html#submitting-code-and-responses",
    "href": "assignments/Week-12/index-assignment-12.html#submitting-code-and-responses",
    "title": "MOSAIC Week 12",
    "section": "Submitting code and responses",
    "text": "Submitting code and responses\nThe {devoirs} package has changed. In the old version, your R-chunks were collected automatically when you press the “collect answers” button. That is no longer true.\nInstead, there will be text boxes into which you can paste code and/or results. They will look like this:"
  }
]