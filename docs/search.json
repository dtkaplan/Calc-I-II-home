[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources for Calc I/II",
    "section": "",
    "text": "This is where I’ll put information about textbooks, policies, etc."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Class notes and posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nMar 21, 2025\n\n\n2025-03-21 class notes\n\n\nDTK \n\n\n\n\nMar 20, 2025\n\n\n2025-03-20 class notes\n\n\nDTK \n\n\n\n\nMar 18, 2025\n\n\n2025-03-18 class notes\n\n\nDTK \n\n\n\n\nMar 14, 2025\n\n\n2025-03-14 class notes\n\n\nDTK \n\n\n\n\nMar 13, 2025\n\n\n2025-03-13 class notes\n\n\nDTK \n\n\n\n\nMar 11, 2025\n\n\n2025-03-11 class notes\n\n\nDTK \n\n\n\n\nMar 7, 2025\n\n\n2025-03-07 class notes\n\n\nDTK \n\n\n\n\nMar 6, 2025\n\n\n2025-03-06 class notes\n\n\nDTK \n\n\n\n\nMar 4, 2025\n\n\n2025-03-04 class notes\n\n\nDTK \n\n\n\n\nFeb 28, 2025\n\n\n2025-02-28 class notes\n\n\nDTK \n\n\n\n\nFeb 27, 2025\n\n\n2025-02-27 class notes\n\n\nDTK \n\n\n\n\nFeb 25, 2025\n\n\n2025-02-25 class notes\n\n\nDTK \n\n\n\n\nFeb 21, 2025\n\n\n2025-02-21 class notes\n\n\nDTK \n\n\n\n\nFeb 20, 2025\n\n\n2025-02-20 class notes\n\n\nDTK \n\n\n\n\nFeb 18, 2025\n\n\n2025-02-18 class notes\n\n\nDTK \n\n\n\n\nFeb 6, 2025\n\n\n2025-02-06 class notes\n\n\nDTK \n\n\n\n\nFeb 4, 2025\n\n\n2025-02-04 class notes\n\n\nDTK \n\n\n\n\nJan 31, 2025\n\n\n2025-01-31 class notes\n\n\nDTK \n\n\n\n\nJan 30, 2025\n\n\n2025-01-30 class notes\n\n\nDTK \n\n\n\n\nJan 28, 2025\n\n\n2025-01-28 class notes\n\n\nDTK \n\n\n\n\nJan 24, 2025\n\n\n2025-01-24 class notes\n\n\nDTK \n\n\n\n\nJan 23, 2025\n\n\n2025-01-23 class notes\n\n\nDTK \n\n\n\n\nJan 21, 2025\n\n\n2025-01-21 class notes\n\n\nDTK \n\n\n\n\nJan 17, 2025\n\n\n2025-01-17 class notes\n\n\nDTK \n\n\n\n\nJan 16, 2025\n\n\n2025-01-16 class notes\n\n\nDTK \n\n\n\n\nJan 14, 2025\n\n\n2025-01-14 class notes\n\n\nDTK \n\n\n\n\nJan 10, 2025\n\n\n2025-01-10 class notes\n\n\nDTK \n\n\n\n\nJan 9, 2025\n\n\n2025-01-09 class notes\n\n\nDTK \n\n\n\n\nJan 7, 2025\n\n\n2025-01-07 class notes\n\n\nDTK \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025-03-11-notes/index-03-11-2025.html",
    "href": "posts/2025-03-11-notes/index-03-11-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "25 2025-03-11 class notes"
  },
  {
    "objectID": "posts/2025-01-07-notes/index.html",
    "href": "posts/2025-01-07-notes/index.html",
    "title": "2025-01-07 class notes",
    "section": "",
    "text": "1 About the preface\n\nYou took some mathematics in high school.\n\nStarting with, say, 9th grade, up to but not including calculus, what topics did you study? [Assemble a list.]\nWhat were these topics for? Directly of use? Preparation for further study? [Work with list].\n\nYou are taking this calculus course. What are you hoping to get out of it?\nDid you take a calculus course?\n\nTell me what calculus is about. (But don’t recite from the readings.)\nWhere does the word calculus come from?\nWhat calculus topics did you cover? [Assemble a list.]\nWhat were these topic for? Directly of use? Preparation for further study?\n\nA little history of this course.\n\nOrigins in “calculus reform” from the late 20th century\nMAA project to find what “partner disciplines” needed from college math. There was little overlap with traditional topics.\nIntroduced in 2003 at Macalester College with support from US NSF, Keck Foundation, HHMI\n\nBecame the second most heavily enrolled class at Macalester. (The statistics counterpart was the most enrolled.)\nStill taught at Macalester,\n\nThe US Air Force Academy invited me to redo their core math requirements. The current version of the course is now their official calculus curriculum, taken by about 800 cadets every year.\n\nWarning: This course will be different from any other calculus course you are likely to have encountered.\n\nMany obsolete topics have been discarded.\nComputing is at the center of the course. Algebraic manipulation is greatly de-emphasized.\nIt is multi-variate from the beginning.\nIt is an applied course, meaning that we focus on techniques that are useful across a broad array of tasks. We avoid the layer of theory that mathematicians added to calculus in the middle of the 19th century.\nJust two courses will cover the topics is the usual four- or five-semester-long sequence.\n\n\n\n\n2 Resources\n\nDay-by-day schedule will explicitly list readings and assignments. Reading questions are due before the class which they are linked to.\nFree, online textbook, MOSIAC Calculus.\nExercises, reading questions, projects are in the MOSAIC Calculus Workbook.\nShow how to hand in assignments electronically.\nComputing is integral to the course. We use the professional-level R platform, which is also being used in QR2.\n\nEverything is open source.\nEach course has its own set of basic R functions.\nThe computing is embedded into course documents, so you don’t have to install anything.\nFor those who are especially keen, you can install the (free) software on your laptop. But, to avoid confusion and to work with the electronic submission of assignments, use the embedded software for your course work.\n\n\n\n\n3 Chap 1: Quantity, function, space\nThese are the big three concepts for our calculus course. Neither Newton nor Leibniz would recognize them for what they are. Calculus has evolved hugely since its invention, and continues to evolve.\n\nExample: Our calculus course is closely related to the methods used in machine learning and (so-called) artificial intelligence.\n\nQuantity: the amount of some “stuff.” Need to specify both the amount and the kind of stuff.\n\nUnits tell us the kind of stuff.\n“Dimensions” is the framework for organizing units. It’s important to master this. Fundamental dimensions: L, T, M.\nDerived dimensions, e.g. L/T or L/T2, or M L2 / T2 are constructed by multiplying and dividing fundamental dimensions. Only multiplication and division are allowed!\nWe often have English words that correspond to specific dimensions, e.g. M L2 T-2 is “energy” while M L2 T-3 is “power.” Other, very common English dimension words: area, volume, flow, …\n\nFunction: in the calculus sense is a relationship between one or more inputs and a single output. You will learn about 20 vocabulary terms involving functions, some of which you already know. It is crucial to use the vocabulary precisely and accurately. Examples: input, domain, output, curvature, continuity, …\n\nNotation: Almost every function will have a name, e.g. sin, sqrt. We will usually write the name followed by a pair of empty parentheses to remind us that the name refers to a function.\nPutting inputs inside the parentheses means “evaluate the function for that input.” Example:\n\n\\(\\sin()\\) is the name of a function\n\\(\\sin(\\pi)\\) is a number, not a function.\nOften we will use names for the inputs to a function, especially when defining them, e.g., \\(f(x, t) \\equiv A \\exp(-t/T_0) \\sin(2\\pi t/P)\\).\n\nSurprising fundamental fact that you didn’t learn in high school. If \\(t\\) stands for time (say, units of seconds), then \\(\\sin(t)\\) is not a valid expression. We’ll see why later.\nA good, but partial definition of calculus is “the mathematics of functions.”\n\nSpace: This is at once completely intuitive and utterly incomprehensible. In a mathematical sense, a space is a “set of possibilities.” Each individual possibility is called a “point.”\nExamples: - A table-top is a space. You can put an object at any point on the table. - The stuff of the universe occupies space. Intuitively, this is 3-dimensional space, but relativists consider it to be 4-dimensional and string-theorists often talk about 9-dimensional space.\nCalculus is largely about state, change, and motion. A state is a point in the space. To change means to move from one point in the space to another. From any point, there is a set of independent directions in which you can move: e.g. left-right, forward-back, up-down. The number of such independent directions is called the “degrees of freedom” of the state.\n\n\n4 Activity\nWhat is the state of a baseball game? Construct a complete set of quantities to represent the state at an instant in time.\nThis is a modeling task. To get anywhere, you have to decide what aspects of the situation are important. For instance, saying the state is a set of molecular positions and orientations would be unwieldy and impractical.\n“Important” is a subjective term and depends on the goals of the modeler. A good place to start when constructing a model is to think about the people the model is intended to serve.\n\n\n5 Activity II\n\nDo the reading questions and hand them in.\nIf there is time … Start on the exercises. Have students hand in the work that they get done."
  },
  {
    "objectID": "posts/2025-03-13-notes/index-03-13-2025.html",
    "href": "posts/2025-03-13-notes/index-03-13-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "26 2025-03-13 class notes"
  },
  {
    "objectID": "posts/2025-03-14-notes/index-03-14-2025.html",
    "href": "posts/2025-03-14-notes/index-03-14-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "27 2025-03-14 class notes"
  },
  {
    "objectID": "posts/2025-01-31-notes/index-01-31-2025.html",
    "href": "posts/2025-01-31-notes/index-01-31-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "12 2025-01-31 class notes\n\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ +\n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nWhat is the order of an interaction term?\nTo be proficient, a modeler must know how to translate a modeling context into the choice of terms for a low-order polynomial. AVOID terms that you don’t need.\n[Got to here on Thursday]\n\n12.1 Why do bicycles have gears\nSimilar to the reason that gasoline cars have gears, but electric cars don’t need them.\nBike speed \\(B\\) increases with power applied. You can also think of it as foot speed multiplied by gear ratio.\nMuscle Force and speed: There is a decreasing relationship between the force a muscle can apply and the speed of contraction. (Extension is similar, but we need a \\(\\Lambda\\)-shaped function to put both contraction and extraction into one function.)\nLet’s keep it simple, use a low-order polynomial, say F(v) = 1 - v. (I’m writing only the sign of the coefficients to make the notation as clean as possible, but in general it should be \\(F(v) = a - b\\ v\\)).\nPower: Power is Force times speed. Work out the dimensions.\nGraph the function: multiply the F(v) decreasing function by v, that is\n\\(Power(v) = v (1-v)\\)\nAn optimal speed to maximize power!\nASIDE: Gas engines: power proportional to RPM times efficiency of each fuel “event.” Efficiency also has an optimal: need to give the gas enough time to burn, but too much leads to “detonation.” Ergo, cars have gears.\n\n12.1.1 Extending the example\nFind the speed of a bicycle as a function of road steepness (\\(s\\)) and gear (\\(g\\)) selected.\n\nThere are of course many other factors that play a crucial role: power (\\(p\\)) provided by the cyclist, wind speed, tire inflation, and so on.\nIn our model today, we will consider these other factors fixed.\n\n\n\n12.1.2 Add in rider power\n\nAlways put in the linear time.\nAre there interactions with other variables?\nIs there an optimum power?\n\nAs a first pass, we don’t need to consider terms of order three or higher. Examples:\n\n\\(p s g\\)\n\\(p s^2\\) or \\(p g^2\\), let alone \\(p^2 s^2 g\\) (fifth order) and such.\n\n\n\n\n12.2 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as input\nproduce a quantity as output\n\n\nZero-finding\nOptimization\nIteration\n\nAfter break, we’ll start on the famous operations of calculus: differentiation and anti-differentiation. These both take a function as input and produce a function as output."
  },
  {
    "objectID": "posts/2025-02-27-notes/index-02-27-2025.html",
    "href": "posts/2025-02-27-notes/index-02-27-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "20 2025-02-27 class notes\nFOR CHAPTER 21, put the activities from the workbook into the lesson plan.\nExercises 8 & 9"
  },
  {
    "objectID": "posts/2025-01-17-notes/index-01-17-2025.html",
    "href": "posts/2025-01-17-notes/index-01-17-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "6 2025-01-17 class notes\nLet’s just call it “Calculus” instead of Calc I/II\n\n6.1 Where we are\nReview of the chapters. Each student picks one chapter.\n\n\n6.2 Describing functions with words\nThese words are used to describe local properties, that is, over a “finite” part of the domain.\n\nslope\nconcavity\ncontinuity\nmonotonicity\nperiodicity\nasymptotes\nlocal extrema\n\nFunctions can change their properties as you move from one locale in the domain to another.\n\n\n6.3 Building new functions\nWe will build new functions from old ones. There are several techniques, that are talked about in the next block.\n\ninput scaling\noutput scaling\nlinear combination\nmultiplication\ncomposition\n\nThere are also many methods to build functions that approximate data. You’ve seen this with annot = \"model\" in QR2, but in Calculus we will use different software because we will focus on continuous functions.\n\n\n6.4 Activity\n\nSummarize each of the pattern-book functions in terms of these descriptive words.\n\n\n\nOn the board, sketch out some imagined functions over some finite domain that have these properties:\n\n\ndownward sloping but concave up.\ndiscontinuous at a point\nnon-monotonic and concave down.\nvertical asymptote at \\(x=1\\)\nleft horizontal asymptote at 0, right at 0 as well\na function with two local extrema (over the domain you are showing)\n\n\nAre the functions described below possible?\n\n\nContinuous with two local maximum but no local minimum.\nSwitching from concave up to concave down as \\(x\\) increases\nMonotonic with a local maximum\nHave both left and right horizontal asymptotes and also a vertical asymptote at \\(x=5\\).\n\n\n\n6.5 Quiz (15 minutes)\nPossibly: review quiz"
  },
  {
    "objectID": "posts/2025-02-18-notes/index-02-18-2025.html",
    "href": "posts/2025-02-18-notes/index-02-18-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "16 2025-02-18 class notes\nWe start on the “differentiation” part of the course today.\n\n“Differentiation” is an operation that takes a function as input and produces a function as output.\nIf you had calculus before, you almost certainly learned “rules” for differentiation, for instance \\(\\frac{d x^2}{dx} \\rightarrow 2 x\\) or \\(\\frac{d \\sin(a x)}{dx} \\rightarrow a \\cos(a x)\\)\nWe will study these rules mostly as a matter of aculturating you to calculus: about 15 generations of calculus students have learned these.\nComputers know the rules, too.\n\n\nD(x^2 ~ x)\n\nfunction (x) \n2 * x\n\nD(sin(a*x) ~ x)\n\nfunction (x, a) \na * cos(a * x)\n\n\n\n\n\n\n\n\nFun facts!\n\n\n\n\nDifferentiation takes a function A() as input and returns a function B() as output.\nAnti-differentiation takes the function B() as input and returns the function A() + C.\n\n\nantiD(a*cos(a*x) ~ x)\n\nfunction (x, a, C = 0) \nsin(x * a) + C\n\n\n\nBoth differentiation and anti-generation produce functions with different dimension than the original.\n\n\n\n\n16.1 Simple or hard\nOur task for today is to see how simple differentiation is and why so many generations have found it to be an “advanced” math topic.\nThe idea of a derivative revolutionized science and math. It’s a big deal.\nYet the underlying concept is very simple to modern eyes.\nBut not so simple for people living in 1600-1850. These sorts of things were not available in that era.\n\nthe idea of a “function”\nthe idea of input and output spaces\nthe idea of a graph of data or of a function\ngrowing up with speedometers in cars that make it easy to monitor speed continuously.\nthey only had algebra, not computers and computer languages\n\n\n“Mathematicians of the 18th century typically regarded a function as being defined by an analytic expression.” Source\n\n\n“An analytic expression (also known as expression in analytic form or analytic formula) is a mathematical expression constructed using well-known operations that lend themselves readily to calculation. … [T]he set of well-known functions allowed can vary according to context but always includes the basic arithmetic operations (addition, subtraction, multiplication, and division), exponentiation to a real exponent (which includes extraction of the nth root), logarithms, and trigonometric functions.” Source\n\nThe conception of a function as “being defined by an analytic expression” is perhaps what leads to the idea of differentiation as being about formulas: translating one analytic expression into another.\n\n“In the 19th century, the demands of the rigorous development of analysis by Weierstrass and others, the reformulation of geometry in terms of analysis, and the invention of set theory by Cantor, eventually led to the much more general modern concept of a function as a single-valued mapping from one set to another.” Source\n\nInstead of “one set to another,” think of it as a mapping from an input space to an output space. A space is a set of continuous possibilities.\n\n\n16.2 Galileo’s experiment\nWe can trace the essential cognitive shift that led to the invention of differentiation by looking at where Galileo (1564 - 1642) left things off and what Newton (1643-1727) needed to change to give a modern conception of motion. - That Newton was born the year after Galileo died provides a nice symbol of the emergence of calculus.\n\nWe’re going to reproduce Galileo ball-on-ramp experiment with a computer simulation. Our task is to position the belled-gated to produce a steady beat.\nNeed to run these interactively, but not using webr because webr doesn’t play sounds.\n\nplay_seq &lt;- function(n=5, bump = 0, intervals=rep(.5,n)) {\n  k &lt;- sample(2:(n-2), size = 1)\n  if (bump &gt; 0) intervals[k] &lt;- intervals[k] + sample(c(-bump, bump), size=1)\n  for (wait in intervals) {\n    Sys.sleep(wait)\n    audio::play(sin(1:5000/20))\n  }\n}\n\ninterval_from_pos &lt;- function(pos = 1:10, fun = sqrt) {\n  diff(fun(pos))\n}\n\nplay_ramp &lt;- function(n=7, intervals=rep(.5,n)) {\n  audio::play(dnorm(seq(-2,2, length=5000)) *sin(1:5000/20))\n  for (wait in intervals) {\n    Sys.sleep(wait)\n    audio::play(dnorm(seq(-2,2, length=5000)) *sin(1:5000/20))\n  }\n}\n\n\nplay_ramp()\nplay_seq(n=10, bump = .000)\n\nStarting point: evenly spaced gates.\n\npositions &lt;- c(0,1,2,3,4,5,6)\nplay_ramp(intervals = interval_from_pos(positions))\n\nCalculate the first differences\n\ndiff(positions)\n\n[1] 1 1 1 1 1 1\n\n\nAnd the second differences\n\ndiff(diff(positions))\n\n[1] 0 0 0 0 0\n\n\n\n\n16.3 Quiz from Feb 7\nQuestion 1 Inflation is an important economic phenomenon concerning the level of prices. As you likely know, inflation rates vary over the months and years. Imagine a country that has an inflation rate of 2%/year for three years changing to 5%/year for two years, then settling down to 3%/year for another three years.\nThink of price \\(P(t)\\) as a function of time \\(t\\) (in years). \\(P(0)\\) will be the price level at year zero, let’s call it 100. The 2% inflation means that the price at year 1 will be \\(P(1) = 1.02 P(0)\\). Staying at that inflation rate at year 3 the price will be \\(P(3) = 1.02^3 P(0)\\).\n\nOverall, the price function a constant inflation rate of 2% would be \\(P(t) = 1.02^t P(0) = 1.02^t \\times 100\\). What shape of function is this? Think in terms of our pattern-book functions.\nAn economist is plotting a graph of \\(P(t)\\) versus \\(t\\). She has a choice: use (i) linear axes, (ii) semi-log axes, or (iii) log-log axes. A good choice is one that makes the graph of the function as simple as possible. Which choice would be good for the function in (1)? Briefly justify your choice.\nUsing your choice from (2), sketch the function from (1). Draw \\(P(t)\\) and \\(t\\) axes, and indicate your choice from (2) by labeling each of those axes as either “linear” or “log.” Then draw the appropriate graph of \\(P(t)\\) from (1).\n\n \n \n \n\nExtend your axes as needed to provide room for the graph of \\(P(t)\\) over the entire 8-year domain, \\(0 \\leq t \\leq 8\\). Put tick marks on the \\(t\\) axis at values 0, 3, 5, and 8. Then draw \\(P(t)\\) over the whole 8-year domain, using the rates specified in the first paragraph of this problem. You don’t need to put tick marks on the \\(P(t)\\) axis; it’s only the shape of the function we’re concerned with here. (Hint: It’s easier than you might think if you made the right choice at step (2).)\n\n \n \n \n \n \n\nQuestion 2 The function \\(h(x) \\equiv 1/x^2\\) is the composition of two simpler pattern book functions \\(h(x) \\equiv f(g(x))\\). Write down the formulas for \\(f()\\) and \\(g()\\).\n \n \n \n \n\nQuestion 3 The graph shows the composition \\(f(g(t))\\) functions, \\(f(x) \\equiv 1/x\\) and \\(g(y) \\equiv A \\sin\\left(\\frac{2\\pi}{P} y\\right) + B\\). (Note that the parts of the graph where the curve runs away from the graph are vertical asymptotes. Such a small range is graphed so that you have a good shot at finding the parameters from the graph.)\n\n\n\n\n\n\n\n\n\nGive somewhat accurate numerical values for the three parameters \\(A\\), \\(B\\), and \\(P\\).\n\nQuestion 4:\nYou are to build a model of student performance on an exam as a function of the time spent studying (\\(s\\)) during previous weeks and the time spent sleeping (\\(z\\)) during that time. Let’s agree that there is such a thing as studying too much. As for sleep, assume that more is better and that our model doesn’t need to include “over-sleep.”\nHere is the generic second-order polynomial in two variables, \\(s\\) and \\(z\\):\n\\(a_0 + a_s s + a_z z + a_{sz}\\ s z + a_{ss} s^2 + a_{zz} z^2\\)\nYour task is to say which of the coefficients you will need in the model to capture the phenomena described in the first paragraph and your common sense about performance, studying, and sleep.\nLeaving aside \\(a_0\\) … you should use your intuition, knowledge of calculus, and modeling to say what the expected sign is for each of coefficients you decided to include in the model. Also, for each of these coefficients give a very brief explanation of why you decided that the coefficient will be positive or negative."
  },
  {
    "objectID": "posts/2025-02-21-notes/index-02-21-2025.html",
    "href": "posts/2025-02-21-notes/index-02-21-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "18 2025-02-21 class notes\nOne of our pattern-book functions is \\(e^x\\), or, in computer notation, exp(). As you know, this is the exponential function, as are \\(2^x\\), \\(10^x\\), or \\(7.321^x\\). These functions all have the same shapes, the familiar exponential.\nslice_plot(exp(x) ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(2^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(10^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\nslice_plot(7.321^x ~ x, domain(x = -1:1.1)) |&gt; \n  gf_theme(text = element_text(size = 40))\n\n\n\n\n\n\n\n\n\n\n\n(a) \\(e^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(b) \\(2^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(c) \\(10^x\\)\n\n\n\n\n\n\n\n\n\n\n\n(d) \\(7.321^x\\)\n\n\n\n\n\n\n\nFigure 1: Some different denominations of exponential functions.\n\n\n\nMy personal favorite for a standard denomination is \\(2^x\\). People have an easy time understanding “doubling” and “halving,” and I would call this function \\(\\text{double}(t)\\) and double(t). It would be easy to remember that \\(2 \\text{double}(t) = \\text{double}(t + 1)\\).\nThe convenience of \\(\\text{double}()\\) is balanced, unfortunately, by a bit of an inconvenience. This has to do with the derivative, \\[\\begin{align}\n{\\cal D}_t \\text{double}(t) & \\equiv\n\\frac{\\text{double}(t + h) - \\text{double}(t)}{h}\\\\\n& = \\frac{2^{t+h} - 2^t}{h}\\\\\n& = \\frac{2^h - 1}{h}2^t\n\\end{align}\\]\nThe brilliant thing here is that \\[{\\cal D}_t\\, \\text{double}(t)\\  \\propto\\  \\text{double}(t),\\] the derivative is proportional to the function itself!\nThe constant of proportionality is \\(\\frac{2^h - 1}{h}\\). What number is this, and does it depend on \\(h\\)?\n\n\n\n\n\n\nClearly \\(\\frac{2^h - 1}{h}\\) does depend on \\(h\\), but for \\(h\\) very small, it approaches 0.693. (Make \\(h\\) smaller still in the graph.)\nIt’s inconvenient to have to remember the proportionality constant 0.693. Could we choose some other base for the exponential function that would make the constant of proportionality 1?\nTry it by making \\(h\\) small (say, h = 0.000001) and plotting out the constant of proportionality as a function of the base:\n\n\n\n\n\n\nA base somewhere between 2 and 3 will lead to a constant of proportionality of 1. Zoom in and find it.\nOr, find the zero-crossing of the function\n\n\n\n\n\n\nDoes this depend on \\(h\\)? Try it.\n\\(e\\) (that is, exp(1)) is the number that makes the constant of proportionality 1:\n\\[{\\cal D}_t e^t = e^t\\]\n\n18.1 Differentiation rules for the pattern-book functions\n\n\\(\\partial_x\\) one(x) \\(=\\) zero(x)\n\\(\\partial_x\\) identity(x) \\(=\\) one(x)\n\\(\\partial_x\\) square(x) \\(=\\) 2 identity(x)\n\\(\\partial_x\\) reciprocal(x) \\(=\\) -1/square(x)\n\\(\\partial_x\\) log(x) \\(=\\) reciprocal(x)\n\\(\\partial_x\\) sin(x) \\(=\\) cos(x)\n\\(\\partial_x\\) exp(x) \\(=\\) exp(x)\n\\(\\partial_x\\) sigmoid(x) \\(=\\) gaussian(x)\n\\(\\partial_x\\) gaussian(x) \\(=\\) - x gaussian(x)\n\nLet’s confirm these using our simple rateOfChange() function:\n\n\n\n\n\n\nExample:\n\nf &lt;- makeFun(log(t) ~ t)\ncandidate &lt;- makeFun(1/t ~ t)\nDf &lt;- rateOfChange(f(t) ~ t)\nslice_plot(\n  candidate(t) ~ t,\n  domain(t = -3:3)\n) |&gt;\n  slice_plot(\n    Df(t) ~ t, \n    color = \"blue\", alpha = 0.2,\n    linewidth = 5\n  )\n\nWarning in log(t): NaNs produced\n\nWarning in log(t): NaNs produced\n\nWarning in log(t): NaNs produced\n\nWarning in log(t): NaNs produced\n\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\nActivities 8, 9, 10, 11 in Chapter 19 exercises.\n\n\n18.2 Exercise 11\nLet’s explore the derivative \\(\\partial_x \\frac{1}{x}\\) using the evanescent-h method.\nThe general definition of the derivative of a function \\(f(x)\\) is the limit as \\(h\\rightarrow 0\\) of a ratio: \\[\\partial_x f(x) \\equiv \\underbrace{\\lim_{h \\rightarrow 0}}_\\text{limit}\\  \\underbrace{\\frac{f(x + h) - f(x)}{h}}_\\text{ratio}\\ .\\] For an evanescent-h calculation, we put aside for a moment \\(\\lim_{h\\rightarrow0}\\) and operate algebraically on the ratio. In our operations, we treat \\(h\\) as non-zero.\n\nSubstitute in \\(f(x) = 1/x\\) and show step-by-step that the ratio (for non-zero \\(h\\)) is equivalent to \\(- \\frac{1}{x^2 + hx}\\).\nThe domain of the function \\(1/x\\) is the entire number line, except zero. Examine the expression \\(- \\frac{1}{x^2 + hx}\\) to see if setting \\(h\\) to zero would ever involve a division by zero for any \\(x\\) in the domain of \\(1/x\\).\nIf setting \\(h=0\\) cannot cause a division by zero, it is legitimate to do so. Set \\(h=0\\) and simplify the expression \\(- \\frac{1}{x^2 + hx}\\). Compare this to the rule for \\(\\partial_x \\frac{1}{x}\\) given in MOSAIC Calculus Ch. 19.\n\n\n\n18.3 Exercise 7\nConsider the function \\(f(x) \\equiv \\frac{x-3}{x-3}\\). Simple algebra suggests that the output will be 1 for any \\(x\\) value input, but the rules are division mean that the output is undefined for input \\(x=3\\). Thus, the function has a “singularity” at \\(x=3\\). We want to test whether this singularity is removable, that is, whether the function has a finite limit as \\(x \\rightarrow 3\\). The computer can help us out. The basic idea is to try inputs closer and closer to \\(x=3\\) and see if the output behaves nicely. To help you distinguish between non-removable and removable singularities (or, in the words of the song “Santa Claus is Coming to Town”, to know “who’s naughty or nice”), Listing 1 defines the function \\(f()\\) and a similar function \\(g()\\). Try out both \\(f()\\) and \\(g()\\) for a sequence of inputs that get closer and closer to \\(x=3\\) but are not exactly 3.\n\n\n\nListing 1"
  },
  {
    "objectID": "posts/2025-01-16-notes/index-01-16-2025.html",
    "href": "posts/2025-01-16-notes/index-01-16-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "5 2025-01-16 class notes\n\n5.1 Administration\n\nI want to arrange a 5-10 minute meeting (or longer, if you want) with each of you, just to get to know you a little.\n\nI’m free the rest of this morning, and from about 2:30 - 4:00 this afternoon. Or tomorrow.\n\nI’m going to start looking at reading questions, exercises, and such on a regular schedule.\n\nIf you are still shakey about submitting your work, let’s fix it!\nI want to see submissions from all of you on every document from now on.\n\nGrading. The STEM faculty have set a rule for instructors about grading.\n\n\nHalf or more of graded content should be presented and done in a classroom setting.\n\n\nI’m thinking to make this about 50%. Split more or less evenly between class participation and short (15 min) inclass quizzes roughly once a week.\nI won’t necessarily tell you in advance about such a quiz. If you need to make one up, we can do it in my office.\nI’ll adopt a more formal way of keeping track of contributions in class—random sampling. Don’t read too much into this, and absolutely feel free to chip in whenever you want or fend off a question that you would rather someone else answer.\n\nFor instance ….\ntodays_roster()\n\n5.1.1 Class roster for Thu Jan 16\n\nMax Weinstein\nMax Litvinenka\nAlmar Tishenko\nNicole Kargin\nIan Wicht\nSimon Rinehart\nAlistair Haglund\nGrace Price\nEverett McAlister\n\n\n\n\n5.2 Where we are\n\nYou have been introduced to two systems for notation:\n\nmore or less traditional math notation\n{mosaicCalc} computer notation\n\nWe’ve talked about three big concepts you should be becoming very familiar with:\n\nSpace and dimensionality\n\nWhen I write \\(\\sin(x)\\) or sin(x) I’m talking about the input coming from a space named x.\nWhen I write \\(f(x,y) \\equiv y \\sin(x)\\) (or f &lt;- makeFun(y*sin(x) ~ x & y)) the input space has two dimensions.\n\nQuantity\n\nthe amount of some stuff.\neach quantity has in principle two components:\n\na number\nunits that specify how the quantity is measured, e.g. m/s or m/s2\n\nGotcha! We’ll use the word “dimension” to describe the “kind of stuff”, for instance, M L T-2. But you’ll have to determine from context whether we’re talking about the dimension of a space or the dimension of a quantity. (Always feel free to ask!) There is a relationship between to two meanings of “dimension,” but we don’t need to get into it.\n\nFunction - A relationship between one or more (well, … “zero or more”) inputs and a single output. - The space of inputs is called the domain. - The space of output is called the range\n\n\nAside: Good (simple) quiz questions might be - “Define what we mean by a function?” - “What is the dimensionality of the input space to some function \\(f()\\)?” (that I’ll describe) - “What’s the conceptual difference between the units of a quantity and the dimension of that quantity?”\n\nGraphics\n\nYou’ve learned to make two kinds of graphics using {mosaicCalc} software:\n\nA “graph” of a function of one input.\nA “contour plot” of a function of two inputs.\n\nYou know that you have to tell the computer which part of the input space (“domain”) to show in the graph and that you do this with an argument that looks like domain(x=-5:5, y = 10:50)\nAs we move along, we’ll need a few other types of graph, e.g.:\n\nparametric plot\nvector field (or “flow” field)\n\nMost of you learned pretty well in high school how to “read” a graph of \\(f(x)\\).\nYou’re learning how to read a contour plot, e.g. interpret it as a landscape, figure out the value of the output when the input is between two contours, figure out whether movement in a particular direction leads you uphill or downhill.\n\n\nAside: A good quiz question would be a completely artificial task … “Draw a few contours of this function of two variables.”\n\n\n\n\n\n\n\n\n\n\n\n5.3 Today’s topic: “Pattern-book functions”\nSimile: “Shall I compare thee to a summer day?”\nMetaphor: “… and summer’s lease hath all too short a date.”\nA metaphor for the pattern-book functions … styles of painting\n\n\n\n\n\n\n\n\n\nImpressionism\nAmerican Primitive\nPop art\nCubism\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEach pattern-book function is a reference example of each style of art. We will use many variations on each style and call these “basic modeling functions.”\nShapes of the pattern book functions:\n\n\n\n\nName\nTraditional notation\nR notation\n\n\n\n\nexponential\n\\(e^x\\)\nexp(x)\n\n\nlogarithm (“natural log”)\n\\(\\ln(x)\\)\nlog(x)\n\n\nsinusoid\n\\(\\sin(x)\\)\nsin(x)\n\n\nsquare\n\\(x^2\\)\nx^2\n\n\nidentity\n\\(x\\)\nx\n\n\none\n\\(1\\)\n1\n\n\nreciprocal\n\\(1/x\\) or \\(x^{-1}\\)\n1/x\n\n\ngaussian\n\\(\\dnorm(x)\\)\ndnorm(x)\n\n\nsigmoid\n\\(\\pnorm(x)\\)\npnorm(x)\n\n\n\nYou need to:\n\nFrom the name of a pattern-book function, be able to draw a pretty accurate graph of the reference example.\nFrom a graph of the reference example, say the name of the function\nFor the functions that we write as formulas (e.g. square is \\(x^2\\)), know the formula. Other functions you just need to know the name, the traditional notation, and the R notation.\nKnow the domain of each pattern-book function.\nKnow the exact output value for one or more “special” values of the input, e.g. \\(\\ln(1)\\) or \\(\\sin(0)\\).\nLater: For each function, know a modeling context where use of the function is standard. E.g.\n\nexponential: radioactive decay, cooling\nsinusoid: waves\nsigmoid: growth in a finite environment\n\nEventually: Wonder how you could ever have confused an exponential function with a power-law function.\nLater: say how a basic-modeling function differs from the reference example\nLater: put together entirely new functions by combining pattern-book functions.\nLater: memorize the derivative and anti-derivative of each pattern-book function.\n\n\n\n5.4 Activity\nIn small groups: Pick three pattern-book functions. Find some special inputs where the output is easy to remember, e.g. the output is zero or the output is an integer."
  },
  {
    "objectID": "posts/2025-01-14-notes/index-01-14-2025.html",
    "href": "posts/2025-01-14-notes/index-01-14-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "4 2025-01-14 class notes\n\n4.1 Where we are\nActivities we didn’t get to on Friday\n\n\n\nListing 1\n\n\n\n\n\n\n\n\n\n\n\n\nPlot out each of the pattern-book functions on a suitable domain. pnorm(), dnorm(), exp(), sin(), sqrt(), log(),\nDefine a recip() function using makeFun().\nDefine an identity() function using makeFun(). (The identity function returns its input unaltered.)\nDefine a power_law() function using makeFun(). Example of a power-law function: \\(y^{2.4}\\)\n\n\n\n4.2 Spaces, graphs, and graphics\nComposition of input and output spaces in slice_plot(). link\nMapping from (part of?) input space to output space.\n\n4.2.1 2-d input spaces.\n\nCan compose input space with output space to get a 3-dimensional space. Mathematicians like this because the surfaces are beautiful, especially when you can interact with them.\n\nExample: \nThe above example is quite complicated and relates to physics/engineering: a wave packet, and such.\nOf more general use in modeling are simpler functions that resemble terrain locally. The word “local” will be important. Calculus provides tools for translating between the local and the global.\n\n\n\nf &lt;- doodle_fun(~ w & z, seed=101)\nsurface_plot(f(w, z) ~ w & z, domain(w=-5:5, z=-5:5))\n\nLoading required namespace: plotly\n\n\n\n\n\n\nWe will tend to use “contour plots” instead. It’s easier to make measurements on them, but you have to learn how.\n\ncontour_plot(f(w, z) ~ w & z, domain(w=-5:5, z=-5:5), fill_alpha = 0.5)"
  },
  {
    "objectID": "posts/2025-01-09-notes/index.html",
    "href": "posts/2025-01-09-notes/index.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "2 2025-01-09 class notes\n\n2.1 Where we are\n\nWe’ve talked about modeling, the construction of a mathematical representation of the context of interest. i.You had a very short time to lay out the quantities that might enter in to a model of a baseball game during a stop in the action, e.g. between innings or after a second out.\n\nYou got a glimpse that the intended purpose for a model shapes what kind of model (e.g. the quantities in (i)) is appropriate.\nA good mantra for modeling is that “All models are wrong. Some models are useful.”\n\nYou’ve gotten a brief introduction to three mathematical concepts that underlie modeling and calculus in general.\n\nQuantities (and their dimensions/units).\n\nProbably you are not completely clear on the difference between “units” and “dimensions.” Don’t worry. We will come back to it in a couple of weeks.\n\n\nFunctions, a relationship between zero or more inputs and a single output.\n\nMathematical functions with zero inputs are fairly called “constants.” But it simplifies notation if we can consider 1 or 0 or whatever to be a “function,” even though it always gives the same output.\n\nSpaces. A set of possibilities. a. Spaces have a dimension, but this use of the word is only tangentially replaced to the “dimension” associated with a quantity. b. Your intuition of position on a line (one dimensional), position in a plane (two dimensional), and position in everyday 3-dimensional space will suffice. c. The mathematical idea of “space” is an abstraction and generalization of the intuitive, everyday notion. So you’ll find yourself working with spaces that can have tens or hundreds or any (integer) number of dimensions. There is even an obscure mathematical idea of non-integer dimensions; “fractals” are best known. We will not be working with them. d. You know intuitively how to move around physical, 1-, 2-, and 3-dimensional spaces. You haven’t yet learned the methods of moving around high-dimensional spaces. Be patient.\n\n\nGo over chapter 1 reading questions.\n\n\n2.2 NOTATION: our topic for today.\nThe notation you learned in high-school involves pictures, which you have learned to interpret. There are individual tokens, say 2 and \\(x\\) as well as all the other letters, numbers, symbols. The geometrical arrangement of these tokens in a compound picture indicates what mathematical idea is being denoted. You’re used to pictures like \\(x^2\\) or \\(\\sin(2 \\pi t / P)\\). There are also pictures that are obscure until you get to higher math. For example, in Calculus, pictures like\n\\[\\int_0^\\infty \\frac{1}{x^2}dx\\]\nMany people (like me) think these picture can be beautiful, but there are several shortcomings.\n\nIt can require a lot of experience to understand the meaning of many pictures because very similar pictures can have very different meanings. For instance:\n\n\\[\\int_0^\\infty \\frac{1}{x^2}dx\\ \\text{ is a number, but } \\int_x^\\infty \\frac{1}{x^2}dx\\ \\text{is a function}.\\]\n\nThe pictograph-based notation is not easily used with computers. Most people in college-level calculus can use only a pencil or pen to draw the picture. They are devilishly tedious to type. And interpreting the picture typically relies on knowledge of the intent of the picture drawer.\nProfessionals, like me, have learned markup for typing the pictures. The most widely used professional system is TeX, which has been around for 50 years. I’m pretty fluent in TeX and can write a picture almost as fast as you can draw one. You do not need to use TeX, but knowing it gives fantastic insight into the structure of a mathematical expression.\nWe will be using a typewritten notation for communicating mathematical intent to the computer and you will gradually learn to use it for communicating with other people in the class.\nBut we will also use traditional notation, because you have already invested eight to ten years learning it. Talking to you, I’ll use the traditional notation a lot of the time, and computer notation increasingly often as we move along. Questions like, “Can you draw a picture of that expression?” are always in-bounds. But many important mathematical actions and ideas that have not standard equivalent in picture-based notation. Examples: Randomize. Repeat. Accumulate. And often, traditional mathematical instructions have to use natural language words, e.g. \n\n\\[\\text{Solve}\\ 3 x + 4 = 7\\ \\text{for}\\ x.\\]\n\nFinally, we will not have much use for the mathematical equal sign: \\(=\\). I was taught in a traditional way, with \\(=\\) all over the place. So I’ll slip up, and maybe I don’t appreciate how often I need \\(=\\).\n\nCall out “EQUALS” whenever I use \\(=\\) in mathematical notation. But we aware that our computer notation uses = from time to time, but in none of these times is it equivalent to mathematica \\(=\\).\n\n\n2.3 Kinds of things\nSome advice … Whenever you encounter a bit of notation, make sure to ask yourself what kind of thing is being represented by that notation.\n\n2.3.1 Names\nWill almost always be written using Roman letters. Some rules:\n\nNames always start with a letter. Never a numeral.\nUPPER CASE and lower case are different.\nWe will use letters idiomatically, that is, using rules of our own invention.\n\nLetters like u, v, w, x, y, z typically refer to a one-dimensional space, often the number line, but “quantity line” might be a more precise term. We’ll use number-line.\nLetters like a, b, c, A, B, C refer to specific quantities, even if we don’t yet have a specific value for that quantity in hand.\nWe will use non-numerical subscripts and superscripts, e.g. \\(x_0\\) or \\(x^\\star\\). These refer to a special point in the associated space.\nWe will use f, g, h, and a handful of others to be a pronoun for a function. We will usually write the name of a function with parentheses following the letters, e.g. f() or h().\n\n\n\n\n2.3.2 Numerals\nA numeral is the character representation of a number typically constructed from digits, the \\(-\\) sign, decimal point, etc.. Mostly this is familiar. Some numbers have representations not made of digits. You already know about \\(\\pi\\).\nSome numerals have additional characters.\n\n\n\nName\nTraditional\nComputer\n\n\n\n\nScientific notation\n\\(4.72 \\times 10^8\\)\n4.72e8\n\n\nRational numbers\n\\(\\frac{3}{4}\\)\n(3/4)\n\n\nImaginary numbers\n\\(3i\\)\n3i\n\n\n\nHow to find out if something is correct: Try the computer symbol e as a name. What do you get?\n\n\n2.3.3 Functions\nThe functions we work with will typically have a name, and often we will construct a new function and name it ourselves.\n\nTraditional notation gives you a choice: no parens, parens, some other kind of bracket.\n\n\\[ \\sin \\pi, \\ \\ \\ \\sin(\\pi), \\ \\ \\ \\ \\ \\sin[\\pi]\\]\n\nUse only the parenthesis form of a function name, e.g. \\(\\sin()\\), \\(\\log()\\), \\(\\exp()\\) or, in computer notation, sin(), log(), exp().\nWondering which logarithm \\(\\log()\\) refers to? Hold on to that. We will almost always be using the so-called “natural logarithm.” If you don’t know what this is, you are far from the only person. There’s plenty of time to find out.\nThe above style of notation can be called “functional notation.” There are very familiar functions that use a different system for notation, called infix. Infix functions, \\(+\\), \\(-\\), \\(\\times\\), \\(/\\) take two arguments, one placed on the left-hand side of the name the other on the right-hand side of the name, do not involve parentheses.\n\nExamples:\n\n\\(3+2\\) stands for something that in functional notation might be written \\(plus(3, 2)\\).\n\nYou can use infix notation in R, and there is a large number of infix functions. +, -, *, /, ||, %in$, and so on, including the “tilde” ~ that’s used to construct a “tilde expression.” (See Section 2.3.4.) You’re familiarity with traditional infix notation will get you through. Just be aware that the canonical syntax for a function is the “name followed by parentheses.”\nBy way of example of the last sentence in (b), here’s an R command that will accomplish \\(3 + 2\\): +(3, 2)`. The back-quotes (which you will never need to use) are R’s escape mechanism to allow otherwise invalid characters to be used as names.\n\n\n\n\n2.3.4 Defining functions\nHigh-school notation is incredibly sloppy when it comes to working with functions. You’ve seen \\(y = m x + b\\). Is this an equation (yes), a function defintion (sometimes), or a “constraint” (complicated).\nWe will use a consistent notation that yells at you that a function is being defined.\nTraditional notation: \\[\\text{snowfall}(t) \\equiv a t + b\\ .\\] We know that snowfall() is a function because it is a name followed immedidately by an open parenthesis. This has several components:\n\nsnowfall : the name of the function. (But in narratives the name will be written snowfall() so that we can tell immediately that the name refers to a function.)\n\\((t)\\) the function has one input, and we’re calling it \\(t\\).\n\\(\\equiv\\) means defined to be.\n\\(a t + b\\). In this case we are using a formula to define the function.\n\nYou can tell unambiguously that \\(t\\) is the input, because of the way we wrote snowfall(t) on the left side of \\(\\equiv\\).\n\\(a\\) and \\(b\\) are often called parameters. We’ll return to this later.\n\n\nComputer notation: snowfall &lt;- makeFun(a * t + b ~ t)\nThis has the same four components, but written differently.\n\nsnowfall: the name of the function.\n&lt;- a computer instruction called variously “assignment” or “naming” or “stored under the name”. The result of the computation on the right-hand side of &lt;- is the value that will be stored under that name.\nmakeFun(), the name of a computer function. These are the action verbs of computing; they do something with the arguments handed over in the parentheses. The job of makeFun() is to construct a set of computer instructions, packaging it as a function. It’s unfortunate that we use the word “function” to mean different things: 1) a mathematical relationship between inputs and an output and 2) a computer procedure that packages up computer instructions.\na * t + b ~ t. This is a special grammatical construction in the computer language called a tilde expression.\nThe name comes from the character ~.\n\nYou will use tilde expressions very extensively and for many purposes. The one here is taken apart by makeFun(). The R expression on the left-hand side of ~ is a formula, that is, a description of a computation. The R expression on the right-hand side tells makeFun() that the input name will be t.\n\n\nmakeFun() is the right tool for building functions from a formula. As we move through the course you will meet other function-building tools. Some examples (which you don’t need to understand yet):\n\nD() builds a function that is the derivative of the function specified in the tilde expression, e.g. D(snowfall(x) ~ x). I’ll demonstrate:\n\n\nsnowfall &lt;- makeFun(a * t + b ~ t)\nsnowfall\n\nfunction (t, a, b) \na * t + b\n\nD(snowfall(x) ~ x)\n\nfunction (x, a, b) \na\n\n\n\nantiD() builds the “anti-derivative” of the function specified in the tilde epxression.\n\n\nantiD(snowfall(x) ~ x)\n\nfunction (x, a, b, C = 0) \n(x^2 * a + 2 * x * b)/2 + C\n\n\n\nThere will be several others, each in good time.\n\nIF TIME, GO OVER EXERCISES."
  },
  {
    "objectID": "posts/2025-02-06-notes/index-02-06-2025.html",
    "href": "posts/2025-02-06-notes/index-02-06-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "14 2025-02-06 class notes\nI haven’t been going over the exercises. But I want to make clear that class is an appropriate place to talk about them:\n\nThings that made no sense.\nThings that you’re shakey on.\nNeed a review.\n\n\n14.1 Logarithms and digits\n\n14.1.1 The “digits()” function\nI used the name digits() for my function. But maybe, since scientific notation is a familiar in-between form, I should rely on that notation. In \\[6.32 \\times 10^{31}\\]\n31 is the exponent, 6.32 is the mantissa (and 10 is the base). Our goal with the digits function is to move the information from the mantissa into the exponent. That is, formally, we’ll use 1 as the mantissa, and allow fractional exponents so to record what previously was spread between the original mantissa and the original exponent. For instance: you can confirm that\n\\[6.32 \\times 10^{31} = 1 \\times 10^{31.80072}\\]\nWritten this way, with the formal 1 mantissa, we read off the digits from the exponent. So, digits(\\(3.2 \\times 10^{31}\\)) is 31.80072.\nNow, journey back historically to about 1580, before Napier’s invention of the logarithm. We are going to scoop Napier, but with the advantage of modern computing.\nOur goal is to create a digits() function that for input 10 will give output 1, for input 100 will give output 2, and so on. Or, as a table:\n\n\n\ninput\noutput\n\n\n\n\n1\n0\n\n\n10\n1\n\n\n100\n2\n\n\n1000\n3\n\n\n\nWe need to figure out what the output should be for an input like 3 or 59.\nSince multiplying the input by 10 raises the output by 1, we can imagine that multiplying the input by \\(\\sqrt{10}\\) will raise the output by 1/2.\nFrom ancient times, mathematicians knew how to compute the output of the sqrt() function. (We’ll see how to do this by Newton’s method in Block 3, but there is older methods, such as the Babylonian. By iteratively computing square roots we can get decimal format versions of \\(\\sqrt[16]{10}\\) or even \\(\\sqrt[256]{10}\\). Also, from ancient times, mathematicians could multiply numbers. Thus, even if tedious, we can calculate the decimal version of, say \\(10^{17/128}\\), which turns out to be 1.357727. That is, \\(10^{17/128}\\) has 1.357727 digits!\nLet’s make a lot of such numbers. The R code is not something you need to worry about.\n\nPairs &lt;- tibble::tibble(\n  basics = 2:31,\n  nice_powers = 10^(1/basics),\n  combiners = 1:30)\nMore_pairs &lt;- with(Pairs, expand.grid(nice_powers, combiners)) |&gt;\n  dplyr::rename(nice_powers = Var1, combiners = Var2) |&gt;\n  dplyr::mutate(basics = rep(2:31, times =30))\nDigits_function &lt;- More_pairs |&gt;\n  dplyr::mutate(input = (nice_powers)^combiners,\n                output = combiners/basics)\nDigits_function |&gt; \n  dplyr::filter(input &lt; 10) |&gt; \n  ggformula::gf_line(output ~ input)\n\n\n\n\n\n\n\n\n\n\n14.1.2 Logarithmic axes for graphing\nSome historical events as they are spaced over time. When there is no characteristic “scale” (e.g., a presidential term, a decade, a century), graphing the log is the way to go!\n\n\n\n\n\n\nhistorical events spaced in time\n\n\n\n\nFigure 1: Historical events spaced in time. Units are millions of years. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nTypically on a log scale such as Figure 1, the tick marks are evenly spaced and it is only the labels that show that the logarithm is being plotted. Usually the labels are given in decimal notation, as in the top scale in Figure 2. But, as you know, the labels on the bottom scale are exactly equivalent, although written in scientific notation.\n\n\n\n\n\n\nFigure 2: Exponentially spaced numbers plotted along a ruler. The bottom labels show the numbers in scientific notation. If you want to see the logarithm instead, simply look at the exponent in the scientific notation label. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nIf you use finer divisions between numbers than the factor-of-10 used in Figure 2, the decimal notation and scientific notation numbers don’t match so prettily.\n\n\n\n\n\n\nFigure 3: We can use steps smaller than the base of the log. Here the step is 0.1 log unit as opposed to the 1.0 log unit in Figure 2, the decimal equivalent of the log value seems bizarrely uneven. Source: Katherine Yoshiwara Modeling, Functions, and Graphs\n\n\n\nMost people are more comfortable with labels where the information is not squirreled up in the exponent, but displayed as round numbers as in #fig-labelled-1. To accomplish this, whenever ticks are spaced by smaller than a log unit, they end up being unevenly spaced.\nSometimes, as in Figure 4, only the occasional grid line is labelled, but the intermediate, unlabelled grid lines are unevenly spaced even if the labels are spaced evenly.\n\n\n\n\n\n\nFigure 4\n\n\n\nTwo different types of logarithmically labelled graphs are in wide use, as in Figure 5. Semi-log is appropriate when only one variable is “scaleless.” Log-log is when both variables are without a characteristic scale.\n\n\n\n\n\n\nFigure 5: Two types of logarithmically spaced graph paper for plotting one variable against another.\n\n\n\nEXERCISES:\n\nLabel the intermediate (unlabelled) ticks on a logarithmic axis.\nThe Figure 5 graphs are gridded on a “decade” system, that is, 1, 2, 3, …, 10, 20, 30, … 100, 200, …. What happens if we want to use a “century” system, that is 1, …, 100, …, 10000. What would be the values on the unlabelled tick marks.\n\nSolution:\nHere are the positions of 1, 2, 3, …, 10 on the unevenly spaced ticks between decades:\n\nlog10(seq(1, 10, by = 1))\n\n [1] 0.0000000 0.3010300 0.4771213 0.6020600 0.6989700 0.7781513 0.8450980\n [8] 0.9030900 0.9542425 1.0000000\n\n\nIf we want to use the same marks but have them divide a century, the evenly spaced values will be\n\nseq(1, 100, length=10)\n\n [1]   1  12  23  34  45  56  67  78  89 100\n\n\nand their logarithm positions will be\n\nlog10(seq(1, 100, length=10))\n\n [1] 0.000000 1.079181 1.361728 1.531479 1.653213 1.748188 1.826075 1.892095\n [9] 1.949390 2.000000\n\n\nWe put the ticks at these positions and could write the labels either in scientific form as \\[10^0, 10^{1.079181}, 10^{1.361728}, ...\\] or in decimal form as :\n\n10^(log10(seq(1, 100, length=10)))\n\n [1]   1  12  23  34  45  56  67  78  89 100\n\n\n\n\n\n14.2 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as primary input, and a domain as an argument.\nproduce a quantity as output\n\n\nZero-finding\n\nGuess two initial domain values and evaluate function at them.\nModify the state\n\nStraddle zero? We have a bracket. Bisection or linear interpolation (Newton’s Method)\nOtherwise: Move in the downhill direction until we have a bracket, then continue.\n\nIf move proves to be uphill, start with different initial values.\n\n\nReturn the average (or zero of the linear interpolant) of the bracketed values.\n\nOptimization in one input\n\nAlgorithm I: Gradient descent (for minimization)\n\nGuess two initial values\nPick a third in a downhill direction.\nIf the attempt to move downward results in an upward movement, now you have a bracket.\n\nAlgorithm II: Newton’s method for minimization (or maximization)\n\nGuess three initial domain values and evaluate function at them.\nFit a quadratic to the three points and find its argmin (or argmax)\nChoose the closest two of the initial values to the value in (ii) and repeat.\n\nStupid calculus algorithm: Differentiate objective function and find the zero crossing.\n\nBad because you need many function evaluations. In practice, you need a formula for the objective function to create the derivative without large number of function evaluations.\n\n\n\nFor functions of multiple inputs,\n\nZero finding follows a similar strategy.\nOptimization requires new concepts from calculus that we will start to talk about after break.\n\n\nIteration. Take a function and a state. Evaluate the function on the state to create a new state, and so on ….\n\nState is one value: a dynamical system or Newton’s method\nSometimes a state is a bracket.\n\n\n\n14.2.1 Examples\nIn each of the following code chunks, I am creating a randomly shaped function and operating on it. I might get zero or one or more rows.\n\n14.2.1.1 Zero-finding example:\n\n\n\n\n\n\n\n\n14.2.1.2 Optimization example:\n\n\n\n\n\n\n\n\n\n\n14.3 Magnitude\nScientific notation makes it easier to write very big or very small quantities.\n\nMass of the electron: 9.1093837 × 10-31 kilograms\nAvogadro’s number: 6.023 x 1023 (molecules per mol) 6.6743 × 10-11 m3 kg-1 s-2\nUniversal gravitational constant: 6.6743 × 10-11 m3 kg-1 s-2\nIdeal gas constant 8.31446261815324 J⋅K−1⋅mol−1\n\nSuch numerals come in two parts:\n\nThe mantissa, e.g. 9.1093837 or 6.023\nThe exponent, e.g. -31 or 23\n\nSometimes we need to work in settings that include a huge range of relative sizes. Here’s a table of internal combustion engines of various sizes.\n\nDT::datatable(Engines)\n\n\n\n\n\n\n14.3.1 Counting digits\n\n\n\n\n\n\n\n\n14.3.2 Computing via the axes\n\n14.3.2.1 Linear axes\nThis graph will not be informative about the engines.\n\n\n\n\n\n\n\n\n14.3.2.2 Semi-log axes\n\n\n\n\n\n\n\n\n14.3.2.3 Log-log axes\n\n\n\n\n\n\nUsing a ruler and a printed logarithmic scale\n\n\n\n\n14.4 Units and Dimensions\nThink about the kinds of physical things, e.g. velocity, force, frequency, energy, power.\nWe start out with an abstract sense of these, e.g. what’s the difference between force and velocity, or between energy and power.\nWe have a notation that enables us to construct any kind of thing by putting together powers of a very few general, simple kinds of thing: length, mass, time, money, …."
  },
  {
    "objectID": "posts/2025-02-04-notes/index-02-04-2025.html",
    "href": "posts/2025-02-04-notes/index-02-04-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "13 2025-02-04 class notes\nI haven’t been going over the exercises. But I want to make clear that class is an appropriate place to talk about them:\n\nThings that made no sense.\nThings that you’re shakey on.\nNeed a review.\n\n\n\n\n\n\n\n\n13.1 Operations on Functions\nAll three of these seek a specific value for the input. That is, these operations\n\ntake a function as primary input, and a domain as an argument.\nproduce a quantity as output\n\n\nZero-finding\n\nGuess two initial domain values and evaluate function at them.\nModify the state\n\nStraddle zero? We have a bracket. Bisection or linear interpolation (Newton’s Method)\nOtherwise: Move in the downhill direction until we have a bracket, then continue.\n\nIf move proves to be uphill, start with different initial values.\n\n\nReturn the average (or zero of the linear interpolant) of the bracketed values.\n\nOptimization in one input\n\nAlgorithm I: Gradient descent (for minimization)\n\nGuess two initial values\nPick a third in a downhill direction.\nIf the attempt to move downward results in an upward movement, now you have a bracket.\n\nAlgorithm II: Newton’s method for minimization (or maximization)\n\nGuess three initial domain values and evaluate function at them.\nFit a quadratic to the three points and find its argmin (or argmax)\nChoose the closest two of the initial values to the value in (ii) and repeat.\n\nStupid calculus algorithm: Differentiate objective function and find the zero crossing.\n\nBad because you need many function evaluations. In practice, you need a formula for the objective function to create the derivative without large number of function evaluations.\n\n\n\nFor functions of multiple inputs,\n\nZero finding follows a similar strategy.\nOptimization requires new concepts from calculus that we will start to talk about after break.\n\n\nIteration. Take a function and a state. Evaluate the function on the state to create a new state, and so on ….\n\nState is one value: a dynamical system or Newton’s method\nSometimes a state is a bracket.\n\n\n\n13.1.1 Examples\nIn each of the following code chunks, I am creating a randomly shaped function and operating on it. I might get zero or one or more rows.\n\n13.1.1.1 Zero-finding example:\n\n\n\n\n\n\n\n\n13.1.1.2 Optimization example:\n\n\n\n\n\n\n\n\n\n\n13.2 Magnitude\nScientific notation makes it easier to write very big or very small quantities.\n\nMass of the electron: 9.1093837 × 10-31 kilograms\nAvogadro’s number: 6.023 x 1023 (molecules per mol) 6.6743 × 10-11 m3 kg-1 s-2\nUniversal gravitational constant: 6.6743 × 10-11 m3 kg-1 s-2\nIdeal gas constant 8.31446261815324 J⋅K−1⋅mol−1\n\nSuch numerals come in two parts:\n\nThe mantissa, e.g. 9.1093837 or 6.023\nThe exponent, e.g. -31 or 23\n\nSometimes we need to work in settings that include a huge range of relative sizes. Here’s a table of internal combustion engines of various sizes.\n\nDT::datatable(Engines)\n\n\n\n\n\n\n13.2.1 Counting digits\n\n\n\n\n\n\n\n\n13.2.2 Computing via the axes\n\n13.2.2.1 Linear axes\nThis graph will not be informative about the engines.\n\n\n\n\n\n\n\n\n13.2.2.2 Semi-log axes\n\n\n\n\n\n\n\n\n13.2.2.3 Log-log axes\n\n\n\n\n\n\nUsing a ruler and a printed logarithmic scale"
  },
  {
    "objectID": "posts/2025-02-20-notes/index-02-20-2025.html",
    "href": "posts/2025-02-20-notes/index-02-20-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "17 2025-02-20 class notes\nFrom last time: Simulated Galileo’s ramp experiment\nWe found that putting bells at positions \\(0, 1, 4, 9, 16, 25, 36\\) created a steady beat of sounds. This means that the ball took equal intervals of time to run between successive bell positions.\n\nPositions \\(0, 1, 4, 9, 16, 25, 36\\)\nFirst-differences \\(1, 3, 5, 7, 9, 11\\)\n\nWe can all see the pattern here: the positions are the perfect squares (where the interval between the first two bells is 1). The first differences are even easier: the odd integers.\nGalileo would have understood Platonic ideas. Things that do not change are the ideal, e.g. the stars, the Earth. Things that change in an orderly way—motion of the planets—are less idea, but understandable. Things that change in a disorderly way—meteorites, or meteorolgy (the weather)—are not subject to understanding. Galileo would look for an even simpler pattern in the equal time positions. The first difference is simple, but simpler still is the second differences.\n\nSecond-differences: \\(2, 2, 2, 2, 2\\)\n\nGalileo could have summarized his findings thus:\n\nUnder the motion induced by gravity, position is predictable. The position reached after equal increments of time are such that their second differences are constant.\n\nWe can imagine that young Newton, who knew about Galileo’s findings, would have found things not to like.\n\nMotion is continuous. Can we describe it in a continuous way?\nThe size of the “second differences” depends on the unit spacing between the bells. Could we make this unit much, much smaller?\nAre there situations where motion works differently? Rolling along a level board: first-differences are constant! A boat coming into dock: first differences get smaller! Does it make sense to express both of these situations in terms of the second differences?\n\nIt was well understood among mathematicians that “analytic expressions” describe curves. Is motion about turning one kind of curve into another, e.g. going from first- or second-differences to positions?\n\n“Pierre de Fermat also pioneered the development of analytic geometry. Although not published in his lifetime, a manuscript form of Ad locos planos et solidos isagoge (Introduction to Plane and Solid Loci) was circulating in Paris in 1637, just prior to the publication of Descartes’ Discourse. Clearly written and well received, the Introduction also laid the groundwork for analytical geometry. The key difference between Fermat’s and Descartes’ treatments is a matter of viewpoint: Fermat always started with an algebraic equation and then described the geometric curve that satisfied it, whereas Descartes started with geometric curves and produced their equations as one of several properties of the curves. As a consequence of this approach, Descartes had to deal with more complicated equations and he had to develop the methods to work with polynomial equations of higher degree. It was Leonhard Euler who first applied the coordinate method in a systematic study of space curves and surfaces.” Source\n\n\nReminder: Metaphor of Anglo-Saxon and Norse intermarriage resulting in the simplification of English. Anglo-Saxon and Norse had different verb inflections, adding cognitive load to communication. Dropping both sets of inflections, replacing them with word order and prepositions, made the language easier to share.\n\nTwo starts to modern calculus:\n\nNewton: fluents and fluxions: \\(x\\), first differences \\(\\dot{x}\\), second differences \\(\\ddot{x}\\).\nLeibniz: infinitesimals: the increments dx and dt\n\n\n17.1 How this was described in early days\nShow John Adam’s copy of l’Hôpital’s textbook.\n\nGraphs are at end of book, not a function among them.\n\n\nSimpsons Doctrine and Application of Fluxions Vol.1.p.150. Scholium 134 Link\n\n[The following is copied from the above source.]\n\n[In t]he Beginning of this and the preceeding Sections, We have seen how the Fluxions of Quantities are determined by conceiving the generating Motion, to become uniform to the proposed Positions: but hitherto no notice as been taken of the method of Increments or indefinitely little Parts, used and mistaken by many for that of Fluxions, in which the operations are, for the general Part exactly the same and which, tho less accurate, may be applied to good purpose in finding the Fluxions themselves in many cases to show the Beginner how the two Methods differ from each other.\n\n\nThe Fluxions of Quantities are always measured by how much the quantities themselves would be uniformly augmented in a given time. Therefore if two quantities or lines [?] A.B. and C.D. be generated together by the uniform or equable action of the Points B. and D. it follows that [?] any span Bb and Dd actualy gone over whereby AB and CD. are augmented, in the same time will nearly [?] express the Fluxions of the given lines A.B and C.D. whence it appears that the Increments or Spans [?] actually gone over and the Fluxions are the Same in tis case, where the generating Velocities are equable,\n\n\n\nbut if on the contrary, the velocities of the two Points in generating the Increments Mb and Nd be Supposed either to increase or decrease, the Lines or Increments so generated will no longer express the Fluxions of A.B. and C.D. being greater or less than the Spans [?] that might be uniformly described in the Same time with the Velocities at M. and N.\n\n\n[I]f indeed those Increments and the time of this Description be taken so small that the motion of the points during that time may be considered as equable, The Ratio of the said Increments will then express that of the Fluxtion [?] or be as the Velocity of M. to that at N, indefinitely near but cannot be conceived to be strictly so; unless, perhaps in certain particular cases.\n\n\nHence We See tht the Differential Method, which proceeds upon those indefinitely little Increments, actually generated as we do upon Fluxions, or the Spaces that might be uniformly generated differs little or nothing from the Method of Fluxions, except in the manner of conceptions, and in point of accuracy, wherein it appears defective: and yet it is very certain the conclusions thiw way derived are mathematically true.\n\n\nFor although the whole compleat Increment is actually understood by the Notation and first Deffinition of the Differential Method yet in the Solution of Problems the exact Measure thereof is not taken, but only that Part of it which would arise from an uniform increase, agreable to the Notion of a Fluxion; whih admits of a strict demonstration. But after all the Differential Method has on advantage above that of Fluxions, which is, we are not here obpliged to introduce the Properties of Motion. Since We reason upon the Increments themselves, and not upon the manner in which they may be generated.\n\n\n\n17.2 A function and it’s change over a small interval\n\nWe’ll divide the x-axis into 60 equal segments, then plot out the change in the function from the start to the end of the segment. The height of each sloping graph is the amount of change during the segment.\n\nNow to convert that “change” into a rate of change, just divide by the small interval of time. That is, divide by 1/60.\n\n\n\n17.3 Definition of the “change function”\nThe changeFun() function will be a new function that describes how much the function given as an argument changes in an increment of time \\(h\\).\n\n\n\n\n\n\nShow that changeFun() depends on h\n\n\n\n\n\n\nModify this to become the “rate of change” function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.4 Algebra\nLet’s compute the rate-of-change function for \\(f(x) \\equiv x^2\\)\n\\[ \\frac{f(x + h) - f(x)}{h} =\n\\frac{x^2 + 2hx + h^2 - x^2}{h} = \\frac{2hx + h^2}{h} = 2x + h\\] Since \\(h\\) can be as small as we want to make it, let’s treat it as zero, so the rate of change of \\(x^2\\) is \\(2x\\)."
  },
  {
    "objectID": "posts/2025-03-20-notes/index-03-20-2025.html",
    "href": "posts/2025-03-20-notes/index-03-20-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "29 2025-03-20 class notes"
  },
  {
    "objectID": "posts/2025-03-04-notes/index-03-04-2025.html",
    "href": "posts/2025-03-04-notes/index-03-04-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "22 2025-03-04 class notes\nAdd activities from Ch 23 to lesson plan. 8-12"
  },
  {
    "objectID": "posts/2025-03-06-notes/index-03-06-2025.html",
    "href": "posts/2025-03-06-notes/index-03-06-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "23 2025-03-06 class notes\nChapter 24.\nShow Nelder-Mead animation from Exercises/Activities section."
  },
  {
    "objectID": "posts/2025-01-10-notes/index.html",
    "href": "posts/2025-01-10-notes/index.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "3 2025-01-10 class notes\n\n3.1 Where we are\nWe’ve been introducing new terms that we will employ throughout the semester, mostly with an eye to creating an explicit nomenclature and notation.\n\nFundamental concepts: Quantity, Function, Space\nModeling: The process of constructing a model. We will cover this systematically, but not yet.\nWe will use two systems for notation:\n\ntraditional, as you might see in the textbook reading.\ncomputing, to be used in constructing computer commands\n\n\nI’ve taken pains to make the two systems of notation as similar as possible, but respect for tradition and the restrictions of computer language interpreters force some divergences.\nElements of notation:\n\nnames: x, y, t, rainfall, temp_{high}. When writing a name in computer notation, do not use quotation marks.\nnumerals: the character representation of a number.\nfunctions: f(), g(), h() are common pronouns, but we will use a lot of proper names for functions, e.g. sin(), log(), dnorm(). (dnorm() is a new one for you! Be patient.)\n\nI write the () after a function name to remind you that the thing being named is a function.\nA handful of functions are written in infix notation. Thus, + is a function name, but you use it as 3 + 2 with the two arguments on the different sides of the function name. This contrasts with functional notation which would look something like \\(plus(3, 2)\\). Even on the computer, don’t convert infix notation to functional notation. Infix is usually easier to read (so long as there are just a handful of operators.)\n\ndefining mathematical functions. When modeling, we will be creating and using mathematical functions. We will also be building computing expressions using computer functions.\ntraditional notation to define a function named henry(): \\(\\text{henry}(t) \\equiv t^2 / \\sin(2\\pi t/P)\\)\ncomputer notation: henry &lt;- makeFun(t^2 / sin(2*pi*t/P) ~ t)\nNote that the computer notation doesn’t have “implicit multiplication.” You must use the * infix operator.\n\n\n\n3.2 Computing with R\n\n3.2.1 Chunks for composing commands\nIn your own work, you will use interactive boxes—called “chunks” or “webr chunks”—to construct commands and, by pressing the “Run Code” button, get the computer to process them and appropriately display the results. It looks like this:\n\nIn writing up notes, I often use a different system that looks like this, without a “Run Code” button.\n\n2 + 3\n\n[1] 5\n\n\nIn both styles, the output is reported with some formatting. The content of the output in the above chunks is 5. Often, output will have more than one component and the [1] is just telling you that the 5 is the first component.\nYou’ll also sometimes see me using a different interface, called “RStudio,” where I type commands in a console or in a document. You don’t need to worry about this.\nYou cannot create on your own a webr chunk. I create them in the process of writing documents that you use. For instance, here is one:\n\n\n\n\n\n\nBut you can use a webr-chunk for any purpose that you like. Feel free to erase whatever expression has been typed and put in your own.\nNB: Use the Calc I/II webr chunks for calculus, and the QR2 webr chunks for QR2. It would have been possible to arrange things so that you could use any chunk for any course, but I haven’t thought this necessary.\nIN-CLASS EXERCISES:\nDo some arithmetic and simple function application in R:\n\n\\(\\frac{22 - 5}{7}\\)\n\\(4.14\\! \\times\\! 10^{-3} \\times 2.83\\!\\times\\!10^{4}\\)\n\\(18 \\sin \\frac{\\pi}{5}\\)\n\\(\\ln(200)\\)\n\\(\\log_{10}(1000)\\)\n\\(\\sqrt{17}\\)\n\\(\\sqrt[3]{17}\\)\n\\(2.14^{3.1 + 7.8}\\)\n\\(e^2\\)\n\n\n\n\n\n\n\n\n\n\n3.3 Storage\nWe often will want to give names to computed objects.\n\nI use the strange word “object” because there are different kinds of computationally constructed things, e.g. numbers and functions among several others. (For instance, in QR2, you will sometimes create “simulations.”)\nThe computer syntax for giving a name to an object involves the “storage arrow” -&gt;. Here, I’ll store the value 5.3 under the name b. The name always goes on the RHS of &lt;-.\n\n\nb &lt;- 5.3\n\nNote that when you store an object, the object is not printed.\nTo recall the named object from storage, just use the name as a command or as part of a command. For instance:\n\nb\n\n[1] 5.3\n\nb + 17\n\n[1] 22.3\n\n\nIN-CLASS EXERCISES:\n\nStore the value \\(\\sqrt{22}\\) under the name billy_bob. Then confirm by calculating billy_bob squared.\nWhy is \\(y^4 = 19\\) not a valid storage expression? Fix it to express the intent.\nCan = be used in place of &lt;-?\n\n\n\n\n\n\n\n\n\n3.4 Errors\nIn response to an ill-formed computer command or some other troubling condition, R will cancel the computation and display an error message. For instance, here is an expression that refers to a name that is not yet in use:\n\nbb\n\nError in eval(expr, envir, enclos): object 'bb' not found\n\n\nOn some web browsers, the webr-chunk error messages are not shown. That’s a bug, and I’m trying to figure out what to do about it. For now, I can only apologize and give you a heads up.\nError messages are your friend. Admittedly, it is the kind of friend who you only welcome under special circumstances and otherwise avoid. The friend’s affect is offputting and intimidating. Try to overcome being affected by that. Also, the friend mostly mumbles. It takes work to feret out the valuable hint that your friend is trying to provide.\nIn-class EXERCISES:\n\nWhat happens if you use the name billy bob to hold the value \\(\\cos(22)\\)? After observing the error message, fix it.\n\n\n\n\n\n\n\n\nHere is a command intended to create a function francis():\n\n\n\n\n\n\n\nFigure out what’s wrong and fix it.\n\n\n3.5 Graphs of functions\nGraphing functions of one variable and setting the graphics domain.\n\ndomain(x = 0:10)\nslice_plot(x^2 - 3*x + 2 ~ x, domain(x=-5:5))\n\nIn-class EXERCISES:\n\n\n\n\n\n\n\nPlot out each of the pattern-book functions on a suitable domain. pnorm(), dnorm(), exp(), sin(), sqrt(), log(),\nDefine a recip() function using makeFun().\nDefine an identity() function using makeFun(). (The identity function returns its input unaltered.)\nDefine a power_law() function using makeFun(). Example of a power-law function: \\(y^{2.4}\\)"
  },
  {
    "objectID": "posts/2025-01-30-notes/index-01-30-2025.html",
    "href": "posts/2025-01-30-notes/index-01-30-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "11 2025-01-30 class notes\n\n11.1 Polynomials and their order.\nPolynomials are a kind of modeling clay. They can be shaped into several different useful forms.\n\nAlthough polynomials were central to your high-school curriculum, there is nothing special about them from a modeling point of view.\n\nOther functions can give the same modeling properties.\nEven a hand-sketched function can give a good representation of the desired modeling properties. (Later in the course, we’ll see how to compute on hand-sketched functions!)\nDO NOT BE DECEIVED into thinking that they are more precise or meaningful than other similar shapes.\nWe use them from a combination of tradition (ancient), malleability with algebraic tools, and conventions for describing features of function, for example stability of a fixed point or the local shape of a landscape.\nThey are also very simple in terms of calculus properties, both globally and locally.\n\nA polynomial is a linear combination of monomials. \\(x^{-1}\\) is NOT a monomial.\nThere are other function structures that are important in specific areas, for instance ratios of polynomials. We are not going to touch these because they have specialized uses.\nOrder of a polynomial is an integer: 1, 2, 3, … (but in principle including zero)\nFactoring of polynomials is not a topic of general interest.\nIn calculus textbooks, there is always a section on “Taylor Series,” which are polynomials of potentially infinite order.\n\nThese are objects of mathematical interest, not of applied interest. The interest is whether and where they converge. The applicability here is that just about any function can be approximated by a polynomial and can be made equal as the order goes to infinity. Techniques here are beyond the scope of our course and rarely relevant to applications.\n\nInstead, our focus is on polynomials of finite order. And really, polynomials of low order: two or less.\n\nThese are incredibly useful in practice.\n\n\n\n\n11.2 Single-input low-order polynomials\nYou studied univariate low-order polynomials in high school. These are the constant, straight-line, and quadratic (square) functions.\nI want you to think of them as “shapes” rather than formulas. Here are the shapes:\ntextbook\nExample modeling contexts (from textbook):\n\nHow many minutes can you run as a function of speed? Concave down and downward sloping: Shape (F). In everyday terms, you wear out faster if you run at high speed.\nHow much fuel is consumed by an aircraft as a function of distance? For long flights, the function is concave up and positive sloping: Shape (D). In everyday terms: fuel use increases with distance, but the amount of fuel you have to carry also increases with distance. A heavy aircraft uses more fuel per mile.\nHow far can you walk as a function of time? Steep-then-shallow and concave down: Shape (E). Your pace slows as you get tired.\nHow does the stew taste as a function of saltiness? There is a local maximum: Shape (H). The taste improves as the amount of salt increases … up to a point. Too much salt and the stew is unpalatable.\nThe incidence of an out-of-control epidemic versus time is concave up, but shallow-then-steep. As the epidemic is brought under control, the decline is steep-then-shallow and concave up. Over the whole course of an epidemic, there is a maximum incidence. Experience shows that epidemics can have a phase where incidence reaches a local minimum: a decline as people practice social distancing followed by an increase as people become complacent.\nIn micro-economic theory there are production functions that describe how much of a good is produced at any given price, and demand functions that describe how much of the good will be purchased as a function of price. As a rule, production increases with price and demand decreases with price.\nIn the short term, production functions tend to be concave down, since it is hard to squeeze increased production out of existing facilities. Production functions are Shape (E).\nIn the short term, some consumers have no other choice than to buy the product, regardless of price. Short-term demand functions are downward sloping, but concave up: Shape C in Figure 12.1. the long term, demand functions can be concave down as consumers find alternatives to the high-priced good. For example, high prices of gasoline may, in the long term, prompt a switch to more efficient cars, hybrids, or electric vehicles. This will push demand for gas guzzlers down steeply.\n\n\n\n11.3 Multiple-input low-order polynomials\nWhat’s important to us is constructing functions with multiple inputs. We will focus on two inputs because it’s easiest to develop intuition about them and to display them graphically. But other than graphics, all the concepts apply to low-order polynomials with any number of inputs.\nHere is the general formula:\n\\[g(x, y) \\equiv a_0 + a_x x + a_y y + a_{xy} x y + a_{yy} y^2 + a_{xx} x^2\\]\nWe will use a standard set of names to identify the components here in the textbook.\n\\[g(x, y) \\equiv a_0 + \\underbrace{a_x x + a_y y}_\\text{linear terms} \\ \\ \\ +\n\\underbrace{a_{xy} x y}_\\text{interaction term} +\\ \\ \\  \\underbrace{a_{yy} y^2 + a_{xx} x^2}_\\text{quadratic terms}\\]\nWhat is the order of an interaction term?\nTo be proficient, a modeler must know how to translate a modeling context into the choice of terms for a low-order polynomial. AVOID terms that you don’t need.\n[Got to here on Thursday]\n\n\n11.4 An example\nThe speed of a bicycle as a function of road steepness (\\(s\\)) and gear (\\(g\\)) selected.\n\nThere are of course many other factors that play a crucial role: power (\\(p\\)) provided by the cyclist, wind speed, tire inflation, and so on.\nIn our model today, we will consider these other factors fixed.\n\n\n11.4.1 Add in rider power\n\nAlways put in the linear time.\nAre there interactions with other variables?\nIs there an optimum power?\n\nAs a first pass, we don’t need to consider terms of order three or higher. Examples:\n\n\\(p s g\\)\n\\(p s^2\\) or \\(p g^2\\), let alone \\(p^2 s^2 g\\) (fifth order) and such.\n\n\n\n\n11.5 QUIZ"
  },
  {
    "objectID": "posts/2025-03-07-notes/index-03-07-2025.html",
    "href": "posts/2025-03-07-notes/index-03-07-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "24 2025-03-07 class notes\nChapter 25\nActivities from Ch. 25 exercises."
  },
  {
    "objectID": "posts/2025-03-21-notes/index-03-21-2025.html",
    "href": "posts/2025-03-21-notes/index-03-21-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "30 2025-03-21 class notes"
  },
  {
    "objectID": "posts/2025-03-18-notes/index-03-18-2025.html",
    "href": "posts/2025-03-18-notes/index-03-18-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "28 2025-03-18 class notes"
  },
  {
    "objectID": "posts/2025-02-25-notes/index-02-25-2025.html",
    "href": "posts/2025-02-25-notes/index-02-25-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "19 2025-02-25 class notes\nReminder: QUIZ at end of hour, mainly on the derivatives of the pattern-book functions.\n\n\n19.1 The finite-difference derivative operator, \\({\\cal D}_x\\)\n\nTakes a function as input and produces a function as output.\nAn infinity of ways to define it, all variations on the same thing.\n\nRight sided \\[{\\cal D}_t f(t) \\equiv \\frac{f(t + h) - f(t)}{h}\\]\nLeft sided: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t) - f(t-h)}{h}\\]\nCentered: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h/2) - f(t-h/2)}{h}\\]\nCentered: \\[{\\cal D}_t f(t) \\equiv \\frac{f(t+h) - f(t-h)}{2 h}\\]\n\nWhich of these is “right”? Insofar as they give the same result, they are all right.\nLook at the value of the derivative at any specific input as a function of \\(h\\). For small enough \\(h\\), all these head in the same direction.\nDefinition of small enough in mathematics: \\(\\lim h \\rightarrow 0\\).\nDefinition of small enough in numerics: Check at \\(h\\) and at \\(h/8\\): do these give equivalent results. If so, we’re done.\n\nNOTE: “equivalent” requires that we accept the idea of “close enough for our purposes.”\n\n\n19.2 Higher order derivatives\nGo to the board and find formulas for the 2nd- and 3rd-order derivatives of a function with one input.\nTo find a finite-difference formula for a second derivative, \\(\\cal D_{t\\, t} f(t)\\) apply the finite-difference formula to \\(\\cal D_t f(t)\\):\n\\[\\cal D_{t\\ t} f(t) = \\frac{\\cal D_t f(t + h) - \\cal D_t f(t-h)}{2h} = \\]\n\\[= \\frac{\\frac{f(t + h + h) - f(t)}{2 h} - \\frac{f(t) - f(t-h - h)}{2 h}}{2 h}\\]\n\\[ \\frac{f(t + 2 h) - 2 f(t) + f(t-2h)}{4 h^2}\\]\nFor simplicity, let’s rewrite this using a new \\(h_\\star = 2 h\\), getting \\[\\cal D_{t\\ t} f(t) = \\frac{f(t + h_\\star) - 2 f(t) + f(t - h_\\star)}{2h_\\star^2}\\]\nPaint a geometric picture of this: The average of the two end points minus the middle point.\nThird derivative \\[\\cal D_{t\\, t\\, t} = \\frac{\\cal D_{t\\, t} f(t + h) - \\cal D_{t\\, t} f(t-h)}{2h}\\]\n\\[= \\frac{\\frac{f(t+2h) -2 f(t+h) + f(t)}{2h} - \\frac{f(t) - 2 f(t - h) + f(t - 2h)}{2h}}{2h}\\]\n\\[= \\frac{f(t + 2h) - 2\\left({\\large\\strut} f(t+h) - f(t-h)\\right) - f(t-2h)}{2 h^3}\\]\nLet’s check if this is right …\nf(x + 2 * .h) - 2 * (f(x + .h) - f(x - .h)) - f(x - 2 * .h)/(2 *.h^3)\n\nf &lt;- sin # Non-mosaiCalc notation\nslice_plot(\n  (f(t + 2*h) - 2*(f(t+h) - f(t-h)) - f(t - 2*h)) /\n    (2*h^3) ~ t, \n  domain(t = -5:5), \n  h = 0.001\n)\n\n\n\n\n\n\n\n\n\nnumD(f(x) ~ x + x + x)\n\nfunction (x, .h = 0.01) \n{\n    (f(x + 2 * .h) - 2 * (f(x + .h) - f(x - .h)) - f(x - 2 * \n        .h))/(2 * .h^3)\n}\n&lt;environment: 0x7ff037c93ea8&gt;\n\n\n\n\n19.3 If you have an analytic formula for a derivative, use it.\nExample: \\(g(t) \\equiv sin(t)\\).\nAlgebraic fact : \\(\\sin(a + b) = \\sin(a)\\cos(b) + \\cos(a)\\sin(b)\\)\nLet’s apply this to our definition of the derivative:\n\\[\\frac{\\sin(t + h) - \\sin(t)}{h} = \\frac{\\sin(t)\\cos(h) + \\cos(t)\\sin(h) - \\sin(t)}{h}\\] \\[ = \\frac{(\\cos{h} - 1)}{h} \\sin(t) + \\frac{\\sin(h)}{h} \\cos(t)\\]\nExample of a limit proof: \\(\\lim_{h \\rightarrow 0} \\frac{\\sin(h)}{h} = 1\\)\n\n\n19.4 Close enough\n\n19.4.1 Sound\nSound is communicated to our ears by a function pressure(t). What does “close enough for our purposes” mean here?\nRecording of report about the BEF entering Belgium (1940)\nA pure sine wave\n\ntime = (0:44100)/44100\nhz = 440\naudio::play(sin(hz*2*pi*time), rate = 44100)\n\nFor the purpose of representing audio to humans, we can cut out sounds that we can’t perceive.\n\n\n\n19.5 Digital audio: Nyquist sampling theorem\n\nsinc &lt;- makeFun(sin(t)/t ~ t)\nslice_plot(sinc(t) ~ t, domain(t = -25:25), npts = 500)\n\n\n\n\n\n\n\n\n\n19.5.1 Training neural networks\n\n\n\n19.6 Digital signal processing\n\naudio::play(Cello$y)\n\nSys.sleep(1)\nDcello &lt;- (Cello$y[-1] - Cello$y[-nrow(Cello)])\n\n\n\naudio::play(as.integer(20*Dcello))"
  },
  {
    "objectID": "posts/2025-01-28-notes/index-01-28-2025.html",
    "href": "posts/2025-01-28-notes/index-01-28-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "10 2025-01-28 class notes\n[picked up from Friday’s class]\n\n10.1 Chapter 11: Fitting features\nInput- and output-scaling heuristics for a handful of pattern book functions\nNote that the output scaling is a form of LINEAR COMBINATION.\n\n10.1.1 Exponential\n[We did this one on Friday 24 Jan.] But here’s a game for estimating parameters. Warning: You won’t always be able to see the features clearly enough to make good estimates.\n\n\n\n\n\n\n\n\n10.1.2 Sin().\nThere are four parameters.\nThe output and output scaling is the same as for other functions, but a different convention is used for the input scaling expression: \\[A \\sin\\left(\\ \\underbrace{\\frac{2\\pi}{P} (t-t_0)}_\\text{input scaling} \\right) + B .\\]\n\n\\(P\\) is the period: peak-to-peak in the domain.\n\\(B\\) is still called the “baseline” but it is not at the bottom of the function range.\n\\(A\\) is the “amplitude”. It corresponds to half the peak-to-trough range.\n\\(t_0\\) is the “left-shift,” the location in the domain of an upward-sloping baseline crossing.\nSometimes people write things differently:\n\n\\(A \\sin(2\\pi (t-t_0)/P) + B\\)\n\\(A \\sin(2\\pi t/P + \\theta) + B\\)\n\\(A \\sin(\\omega t + \\phi) + B\\)\n\\(A \\sin(\\omega t) + B \\cos(\\omega t) + C\\)\n\nThe first three of the above should be recognizably equivalent with simple algebraic re-arrangement. (iv) is more subtle and results from a trigonometric identity.\nWe’ll use (i), and you’re expected to be able to estimate by eye the four parameters.\nWe could also write \\(A \\cos(2 \\pi (t - t_0)/P) + B\\), but \\(t_0\\) would be the location of a peak.\n\n\n\n\n\n\n\n\n\n10.1.3 Gaussian & sigmoid\nOutput scaling is the same as always: \\(A\\) and \\(B\\).\n\nfor \\(A &gt; 0\\), \\(B\\), “baseline,” is the value at the left horizontal asymptote.\n\\(A\\) is more difficult for dnorm()\n\npnorm(): easy. Vertical distance between lower and upper horizontal asymptote.\ndnorm() the meaning of \\(A\\) depends on sd. If you must know (you don’t at this point), measure the peak to baseline distance, then divide by dnorm(mean, mean, sd) Of course, you need to know mean and sd for this.\n\n\nInput scaling is written differently in terms of two new parameters: mean and sd.\n\nmean the location in the domain of the peak (dnorm()) or the half-way point (pnorm())\n\nsd, the “standard deviation,” is\n\ndnorm(): roughly the half-width (61%) at half-height\npnorm(): roughly the width between the half-way point and the input producing an output at three-quarters (80%) of the way to the top.\n\n\n\n\n\n\n\n\n\n\n\n\n10.2 Chapter 10: Functions with multiple inputs\nMaking them by …\n\nLinear combination\nMultiplication\nComposition (?)\nPiecewise (?)\n\nCommon forms from science generally:\n\nExample: Breaking distance of car as function of speed and road conditions (slip)\nInteraction.\n\nExample, rabbits and foxes. Change in rabbit population as function of rabbit population and fox population.\nExample, rate of reaction between two re-agents \\(\\alpha\\ [A][B]\\)\nExample (maybe): demand for one good as a function of price of that good and price of a substitute.\nWe are going to see this particularly when we look at low-order polynomials in multiple variables."
  },
  {
    "objectID": "posts/2025-01-24-notes/index-01-24-2025.html",
    "href": "posts/2025-01-24-notes/index-01-24-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "9 2025-01-24 class notes\n[picked up from Thursday’s class]\n\n9.1 Assembling new functions from existing ones (Chapter 9)\nWidely used ways to combine functions to create new ones:\n\nLinear combination\nFunction multiplication\nFunction composition\nPiecewise definition (and the ifelse() function.)\n\n\n\n9.2 Chapter 11: Fitting features\nInput- and output-scaling heuristics for a handful of pattern book functions\nNote that the output scaling is a form of LINEAR COMBINATION.\n\nExponential\n\nThis is as far as we got on Friday.\n\nSin\nGaussian & sigmoid"
  },
  {
    "objectID": "posts/2025-02-28-notes/index-02-28-2025.html",
    "href": "posts/2025-02-28-notes/index-02-28-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "21 2025-02-28 class notes\nFOR CHAPTER 23, put the activities from the workbook into the lesson plan.\nExercises 8, 9, 10"
  },
  {
    "objectID": "posts/2025-01-21-notes/index-01-21-2025.html",
    "href": "posts/2025-01-21-notes/index-01-21-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "7 2025-01-21 class notes\nAn unexpected snow day! I’m going to have to improvise a little.\nHere are a few chunks for me to work in on my tablet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe only change is a different R function, gf_point() that plots a response variable against a single explanatory variable, e.g., Galton &lt;- gf_point(height ~ mother). There\n\n7.1 Activity\n\nPlot some data on the screen.\nCopy it over to your board.\nDraw a version of a basic modeling function that aligns with the data.\n\nSome pattern-book functions will work better than others. fitModel() makes you choose the function, then does the rest automatically.\nIf we expanded fitModel() so that it would go through a large library of functions, try them all, and then pick the one that works best overall, we would be doing “machine learning.” (There would be additional technicalities, which are discussed a little in Spiegelhalter Ch. 4. “Cross-validation” is one of the methods that can come into play, but we won’t talk about that in this Calculus course.)\nHow do you think the computer could do what you do by eye automatically? We need a framework and a procedure.\n\n\n7.2 Framework Part 1: Input and output scaling\nFramework Part 2 was deferred to 01-23\n\n\n7.3 Activity"
  },
  {
    "objectID": "posts/2025-01-23-notes/index-01-23-2025.html",
    "href": "posts/2025-01-23-notes/index-01-23-2025.html",
    "title": "UATX Calc-I-II, AY 2025",
    "section": "",
    "text": "8 2025-01-23 class notes\n\n8.1 Where we are … and where we are heading\nYou are getting comfortable with the basics of function, spaces, quantity. You have a basic vocabulary for describing functions in words and for interpreting functions with one- and two-inputs. You have a basic set of pattern-book functions. These are purely mathematical functions in the sense that the input and output is always a pure number rather than a quantity with units and dimension.\nIn modeling, we construct functions to represent the relationship between quantities in the real world.\n\nYou have already seen how to parameterize the pattern-book functions so that they can take a quantity as input and produce a (perhaps different) quantity as output. This is the point of input and output scaling: (Chapter 8)\nInput scaling turns a quantity into a pure number suited as an input to the pattern-book functions.\nOutput scaling turns a pure number—the output of a pattern-book function—into a quantity.\n\nACTIVITY: If \\(x\\) and \\(f(x)\\) are pure numbers, explain what have to be the dimensions in the scaling parameters\n\n\\(a (q - q_0)\\) is to translate \\(q\\) to a specified quantity\n\\(A f(a(q - q0) + b) + B\\) to translate the pure number output of \\(f()\\) into the output quantity \\(Q\\).\n\n\ninput: miles per hour; output: force (e.g. air resistence)\ninput: Yen; output: tons of cardboard boxes\n\nTODAY, we will discuss two important topics:\n\nThe idea of “fitting functions to data” and the basics behind getting a computer to do this for you. (Chapter 7).\nCombining existing functions to create new ones. (Chapter 9)\n\nTOMORROW, we will look at “fitting function features”: Chapter 11. There are a few recognizable features—“amplitude,” “baseline,” “doubling time,” etc.—that enable us to estimate the parameters of a handful of functions based on measurements of plotted data or a specified graph.\nNEXT WEEK:\n\nLooking at functions with multiple inputs. (Chap 10)\nUsing low-order polynomials to encode our understanding of a relationship. (Chap 12)\nSome of the mathematical operations we can perform on functions to extract information from them. (Chap 13)\n\n\n\n8.2 Framework Part 2: Automatic fitting of functions to data\n\n8.2.1 Procedure: Guess, check, and improve\nGuess: Pick/guess some more-or-less reasonable specific parameter values\nCheck: Now that we have a function in hand (with the guessed parameter values), how close is our function to the data. We will measure this with the “residuals.” Each data point is a distance from the function. We’ll sum or average this over all the data points to get a reading of closeness.\nImprove: The goal is to modify our guess in order to improve the closeness of our function to the data. How can we guess how to change our first guess to improve things? This is where you can start to talk about finite diferences, slopes, and increments. We will eventually change this into the language of “derivatives.” The “back propagation” used in Deep Learning neural networks is nothing more than this, although on an immense scale.\nfitModel() adopts this strategy. Sometimes it needs a starting guess, sometimes not. Later in the course we’ll see a way (that sometimes works) to avoid the starting guess.\n\n\n8.2.2 Fitting functions to data\nAn informal way to fit functions works when we “check” by eye the current fit by looking at the match between the graph of the function and the data. Then tweak the input and/or output scaling to improve things a little bit.\n[We only got here. Deferring the following until Friday 1/24]"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "UATX/MOSAIC Calculus",
    "section": "",
    "text": "This is the home page for both terms of the two-term UATX/MOSAIC Calculus sequence. The course has no specific pre-requisites and is suited both to those who have no previous experience with Calculus and those who have taken an AP or IB year-long calculus sequence. The UATX Calculus sequence is designed to replace the entire multi-term traditional sequence—Calc I, II, III, differential equations, linear algebra—for STEM students and is highly relevant to economics, biology and medicine, data science, public policy, physics, and chemistry but does not emphasize “pure” (theoretical) mathematics or proof.\nPlease read the Basics page for course policies and such.\nAll of us are busy people and need to regulate how much time we spend on each activity. For UATX calculus, make sure to complete the readings and reading questions. The chapter-by-chapter exercises are also important for learning and as a component of the grade, but you are not obliged (unless otherwise stated) to do all the exercises. More is better. Exercises marked as “in-class” are not required homework.\nHomework submission link"
  },
  {
    "objectID": "index.html#day-by-day-schedule",
    "href": "index.html#day-by-day-schedule",
    "title": "UATX/MOSAIC Calculus",
    "section": "Day-by-day schedule",
    "text": "Day-by-day schedule\nMid-term break\n\n\n\n\n\n\n16. Tuesday 18 February\n\n\n\nTopics: Continuous change\nReading: MOSAIC Calculus Chap 17 and reading questions\nAssignment due: Chapter 16 Exercises\n\n\n\n\n\n\n\n\n17. Thursday 20 February\n\n\n\nTopics: Rate of change\nReading: MOSAIC Calculus Chap 18 and reading questions\nAssignment due: Chapter 17 Exercises\n\n\n\n\n\n\n\n\n18. Friday 21 February\n\n\n\nTopics: Evanescent \\(h\\)\nReading: MOSAIC Calculus Chap 19 and reading questions\nAssignment due: Chapter 18 Exercises\nQUIZ\n\n\n\n\n\n\n\n\n19. Tuesday 25 February\n\n\n\nTopics: Constructing derivatives\nReading: MOSAIC Calculus Chap 20 and reading questions\nAssignment due: Chapter 19 Exercises\n\n\n\n\n\n\n\n\n20. Thursday 27 February\n\n\n\nTopics: Concavity and curvature\nReading: MOSAIC Calculus Chap 21 and reading questions\nAssignment due: Chapter 20 Exercises\nQUIZ\n\n\n\n\n\n\n\n\n21. Friday 28 February\n\n\n\nTopics: Continuity & smoothness\nReading: MOSAIC Calculus Chap 22 and reading questions\nAssignment due: Chapter 20 Exercises\n\n\n\n\n\n\n\n\n22. Tuesday 4 March\n\n\n\nTopics: Derivatives of assembled functions\nReading: MOSAIC Calculus Chap 23 and reading questions\nAssignment due: Chapter 22 Exercises\n\n\n\n\n\n\n\n\n23 Thursday 6 March\n\n\n\nTopics: Optimization\nReading: MOSAIC Calculus Chap 24 and reading questions\nAssignment due: Chapter 23 Exercises\nQUIZ\n\n\n\n\n\n\n\n\n24. Friday 7 March\n\n\n\nTopics: Partial differentiation & the gradient vector\nReading: MOSAIC Calculus Chap 25 and reading questions\nAssignment due: Chapter 24 Exercises\n\n\n\n\n\n\n\n\n25. Tuesday 11 March\n\n\n\nTopics:\nReading: MOSAIC Calculus Chap 26 and reading questions\nAssignment due: Chapter 25 Exercises\n\n\n\n\n\n\n\n\n26 Thursday 13 March\n\n\n\nTopics: Taylor polynomials\nReading: MOSAIC Calculus Chap 27 and reading questions\nAssignment due: Chapter 26 Exercises\n\n\n\n\n\n\n\n\n27. Friday 14 March\n\n\n\nTopics: Catch-up & projects with differentiation\nReading: MOSAIC Calculus Differentiation projects\nAssignment due: Chapter 27 Exercises\nQUIZ on differentiation\n\n\n\n\n\n\n\n\n28. Tuesday 18 March\n\n\n\nTopics: This is the start of a new Block about representing high-dimensional spaces and basic operations on their inhabitants: Vectors and subspaces.\nReading: MOSAIC Calculus Chap 28 and reading questions\nAssignment due:\n\n\n\n\n\n\n\n\n29 Thursday 20 March\n\n\n\nTopics: Linear combinations of vectors\nReading: MOSAIC Calculus Chap 29 and reading questions\nAssignment due: Chapter 28 Exercises\n\n\n\n\n\n\n\n\n30. Friday 21 March\n\n\n\nLast day of this term!\nReview and preview of Spring term component of the course.\nQUIZ (30 minutes): Overview of the course."
  },
  {
    "objectID": "index.html#archive",
    "href": "index.html#archive",
    "title": "UATX/MOSAIC Calculus",
    "section": "Archive",
    "text": "Archive\n\n\n\n\n\n\n1. Tuesday 7 January, 2025\n\n\n\nTopics: Orientation to course resources\nReading:\n\nMOSAIC Calculus Preface\nMOSAIC Calculus Chap 1: Quantity, function, space and reading questions.\n\n\n\n\n\n\n\n\n\n2. Thursday 9 January\n\n\n\nTopics:\n\nClearing up any start-up problems\nMath and computing notation for MOSAIC Calculus\n\nReading: MOSAIC Calculus Chap 2: Notation and reading questions\nAssignments due: - Chap 1 Exercises\n\n\n\n\n\n\n\n\n3. Friday 10 January\n\n\n\nTopics: Computing for calculus with R\nReading: MOSAIC Calculus Chap 3 Computing with R and reading questions\nAssignment due: Chapter 2 Exercises\n\n\n\n\n\n\n\n\n4. Tuesday 14 January\n\n\n\nTopics: Visualizing functions\nReading: MOSAIC Calculus Chap 4 Visualizing functions and reading questions due before class\nAssignment due: Chapter 3 Exercises\n\n\n\n\n\n\n\n\n5. Thursday 16 January\n\n\n\nTopics: Our pattern book functions\nReading: MOSAIC Calculus Chap 5 Pattern book functions and reading questions due before class\nAssignment due: Chapter 4 Exercises\n\n\n\n\n\n\n\n\n6. Friday 17 January\n\n\n\nTopics: Describing functions\nReading: MOSAIC Calculus Chap 6 Describing functions and reading questions due before class\nAssignment due: Chapter 5 Exercises\n\n\n\n\n\n\n\n\n7. Tuesday 21 January\n\n\n\nTopics: Graphics and parameters.\nReading: MOSAIC Calculus Chapter 7 & Chapter 8 and their associated reading questions. Why two chapters in one day? As it happens, Chap. 7 is a rehash of what you have already seen about graphing data from the QR2 course.\nStart on exercises for Chaps. 7 & 8. Due Thurs and Fri respectively\n\n\n\n\n\n\n\n\n8. Thursday 23 January\n\n\n\nTopics: Assembling functions\nReading: MOSAIC Calculus Chapter 9 & its associated reading questions.\nAssignment Due: Chapter 7 exercises\n\n\n\n\n\n\n\n\n9. Friday 24 January\n\n\n\nTopics: Fitting function features\nNote: We are covering Ch 11 and deferring Chapter 10 until next Tuesday.\nReading: MOSAIC Calculus Chapter 11 & its associated reading questions.\nAssignment Due: Chapter 8 exercises\nStart on:\n\nChapter 11 exercises (but not the project)\n\n\n\n\n\n\n\n\n\n10. Tuesday 28 January\n\n\n\nTopics: Fitting function features\nNote: Chapter 10 today!\nReading: MOSAIC Calculus Chapter 10 & its associated reading questions.\nAssignment Due: Chapter 11 exercises (but not the project)\nStart on:\n\nChapter 9 exercises numbers 1 through 8\nChapter 10 exercises (but not the “class activity”)\n\n\n\n\n\n\n\n\n\n11. Thursday 30 January\n\n\n\nReading: MOSAIC Calculus Chapter 12 and reading questions\nQUIZ through Chapter 10\nAssignmenta Due:\n\nChapter 9 exercises numbers 1 through 8\nChapter 10 exercises (but not the “class activity”)\n\nStart on: Assignment Due: Chapter 12 exercises (but not the project)\n\n\n\n\n\n\n\n\n12. Friday 31 January\n\n\n\nReading: MOSAIC Calculus Chapter 13 and reading questions\nAssignment Due:\n\nChapter 12 exercises\n\nStart on: Chapter 13 exercises\n\n\n\n\n\n\n\n\n13. Tuesday 4 February\n\n\n\nReading: MOSAIC Calculus Chapter 14 and reading questions\nAssignment Due: Chapter 13 exercises\nStart on: Chapter 14 exercises\n\n\n\n\n\n\n\n\n14. Thursday 6 February\n\n\n\nReading: MOSAIC Calculus Chapter 15 and reading questions\nAssignment Due: Chapter 14 exercises\nStart on:\n\nChapter 9 exercises number 9 through 18 (due by end of reading week)\nChapter 15 exercises (due by end of reading week)\n\n\n\n\n\n\n\n\n\n15. Friday 7 February\n\n\n\nReading: **MOSAIC Calculus* Chapter 16 and reading questions\nAssignment due: (by end of reading week)\n\nChapter 9 exercises number 9 through 18\nChapter 15 exercises\n\nQUIZ through Chapter 15"
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Policies and other course information",
    "section": "",
    "text": "Assignments:\n\nThe readings should be completed before class (which will put you in a position to answer the reading questions). The reading questions should also be submitted before the class for which the reading is assigned.\nWhen you have questions about a reading, let’s make it part of a class discussion on the day the reading is due.\nExercises are due by the class day after they are assigned.\n\n\n\n\n\n\n\nLink for homework submissions\n\n\n\nEach of the homework assignment documents is set up to collect your answers at the press of a button. The answers are copied to your clipboard in a web-standard format called JSON, which you aren’t expected to read.\nFrom your clipboard, paste the JSON string into this Google Form\nI suggest that you bookmark the Google Form link. You will be using it often.\n\n\nOrientation to each day: For simplicity, most class days will be structured in the same way:\n\nOften, we will cover one chapter of MOSAIC Calculus each class days. Some chapters may take longer.\nWe will discuss the reading in class, so you should do the reading and hand in the reading questions before that class.\nYou can go back, re-do, and re-submit the reading questions if you like, but this is not required.\nThe assignment for each chapter will be due the class day following the discussion of that chapter. If you have questions, bring them to that following day to discuss them, then you can complete your assignment."
  },
  {
    "objectID": "quizzes-rosters-etc/quiz-2025-02-07.html",
    "href": "quizzes-rosters-etc/quiz-2025-02-07.html",
    "title": "Calculus Quiz 3: Prof. Kaplan",
    "section": "",
    "text": "Student name: _____________. Do what you can in 15 minutes.\nQuestion 1 Inflation is an important economic phenomenon concerning the level of prices. As you likely know, inflation rates vary over the months and years. Imagine a country that has an inflation rate of 2%/year for three years changing to 5%/year for two years, then settling down to 3%/year for another three years.\nThink of price \\(P(t)\\) as a function of time \\(t\\) (in years). \\(P(0)\\) will be the price level at year zero, let’s call it 100. The 2% inflation means that the price at year 1 will be \\(P(1) = 1.02 P(0)\\). Staying at that inflation rate at year 3 the price will be \\(P(3) = 1.02^3 P(0)\\).\n\nOverall, the price function a constant inflation rate of 2% would be \\(P(t) = 1.02^t P(0) = 1.02^t \\times 100\\). What shape of function is this? Think in terms of our pattern-book functions.\nAn economist is plotting a graph of \\(P(t)\\) versus \\(t\\). She has a choice: use (i) linear axes, (ii) semi-log axes, or (iii) log-log axes. A good choice is one that makes the graph of the function as simple as possible. Which choice would be good for the function in (1)? Briefly justify your choice.\nUsing your choice from (2), sketch the function from (1). Draw \\(P(t)\\) and \\(t\\) axes, and indicate your choice from (2) by labeling each of those axes as either “linear” or “log.” Then draw the appropriate graph of \\(P(t)\\) from (1).\n\n \n \n \n\nExtend your axes as needed to provide room for the graph of \\(P(t)\\) over the entire 8-year domain, \\(0 \\leq t \\leq 8\\). Put tick marks on the \\(t\\) axis at values 0, 3, 5, and 8. Then draw \\(P(t)\\) over the whole 8-year domain, using the rates specified in the first paragraph of this problem. You don’t need to put tick marks on the \\(P(t)\\) axis; it’s only the shape of the function we’re concerned with here. (Hint: It’s easier than you might think if you made the right choice at step (2).)\n\n \n \n \n \n \n\nQuestion 2 The function \\(h(x) \\equiv 1/x^2\\) is the composition of two simpler pattern book functions \\(h(x) \\equiv f(g(x))\\). Write down the formulas for \\(f()\\) and \\(g()\\).\n \n \n \n \n\nQuestion 3 The graph shows the composition \\(f(g(t))\\) functions, \\(f(x) \\equiv 1/x\\) and \\(g(y) \\equiv A \\sin\\left(\\frac{2\\pi}{P} y\\right) + B\\). (Note that the parts of the graph where the curve runs away from the graph are vertical asymptotes. Such a small range is graphed so that you have a good shot at finding the parameters from the graph.)\n\n\n\n\n\n\n\n\n\nGive somewhat accurate numerical values for the three parameters \\(A\\), \\(B\\), and \\(P\\).\n\nQuestion 4:\nYou are to build a model of student performance on an exam as a function of the time spent studying (\\(s\\)) during previous weeks and the time spent sleeping (\\(z\\)) during that time. Let’s agree that there is such a thing as studying too much. As for sleep, assume that more is better and that our model doesn’t need to include “over-sleep.”\nHere is the generic second-order polynomial in two variables, \\(s\\) and \\(z\\):\n\\(a_0 + a_s s + a_z z + a_{sz}\\ s z + a_{ss} s^2 + a_{zz} z^2\\)\nYour task is to say which of the coefficients you will need in the model to capture the phenomena described in the first paragraph and your common sense about performance, studying, and sleep.\nLeaving aside \\(a_0\\) … you should use your intuition, knowledge of calculus, and modeling to say what the expected sign is for each of coefficients you decided to include in the model. Also, for each of these coefficients give a very brief explanation of why you decided that the coefficient will be positive or negative."
  },
  {
    "objectID": "quizzes-rosters-etc/quiz-2025-02-24.html",
    "href": "quizzes-rosters-etc/quiz-2025-02-24.html",
    "title": "Calculus Quiz 4: Prof. Kaplan",
    "section": "",
    "text": "Student name: _____________. Do what you can in 15 minutes.\nQuestion 1\nThe table has one row for each of our nine “pattern-book” functions. One column shows a graph of the shape of the function. Your job is to fill in the other three columns:\n\nWrite the name or formula for the function (e.g. dnorm() or \\(e^x\\)).\nWrite the formula for the derivative of the function with respect to its argument.\nSketch a graph of the derivative function.\n\n\n\n\n\n\n\n\n\n\nGraph\n\\(f(x)\\)\n\\(\\partial_x f(x)\\)\nGraph of \\(\\partial_x f(x)\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOnce you have completed the table, go through the table row by row and, for the pair of graphs in each row, mark three corresponding points on the curves. (Corresponding means “same input value in the two graphs”). Use these marks:\n\n\\(+\\) for an input where the derivative is positive\n\\(\\times\\) for an input where the derivative is negative\n\\(\\circ\\) for an input where the derivative is zero\n\nIf a particular row doesn’t have one or more of the three situations, leave out the corresponding mark from that graph.\n\n \n \nQuestion 2 Write down the formula for the finite-difference derivative of the function \\(g(t)\\).\n\\(D_t g(t) \\equiv \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\)"
  }
]