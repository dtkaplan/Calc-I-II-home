---
title: A nice walk up a hill
date: 2025-04-03
summary: "Finishing up the modeling project we started in class."
categories: [modeling project, physiology]
---

```{r include=FALSE}
library(mosaicCalc)
library(devoirs)
```

{{< include ../../_software/devoirs.qmd >}}

Picking up from our discussion on Thursday 3 April about [walking energetics](../../projects/Walking-uphill/index-walking-uphill.qmd) ...

The American College of Sports Medicine (ACSM) model of power consumption (watts, joules/min, horsepower, $\dot{V}_{0_2}$, etc. are units) when walking on an incline at grade $g_\text{path}$ is^[I've reformulated this to be consistent with the physiology literature]:

$$P = (h + w g_\text{path}) V$$ {#eq-power-uphill}

What must be the u-dimension of $h$ and $w$ for @eq-power-uphill to be dimensionally consistent. ($g_\text{path}$ has u-dimension L/L., while power has u-dimension ML^2^T^-3^.)

```{mcq}
#| label: dimension-h-w
#| inline: true
#| show_hints: true
1. Distance L
2. Velocity LT^-1^
3. Acceleration LT^-2^
4. Force M L T^-2^ [correct]
5. Energy ML^2^T^-2^
6. Power ML^2^T^-3^
```

The physics quantity "work" (u-dimension: energy) is power times time, so consider walking for a time $t_d$ to get us a distance $d$:

$$E = P t_d = (h + w g_\text{path}) V t_d = (h + w g_\text{path}) d$${#eq-energy-uphill}

Remember that the objective of walking this distance $d$ was to get the hiker to an elevation of 1000m. $d$ is the hypothenuse of a right triangle, so what is the correct relationship between $d$ and the gradient.


```{mcq}
#| label: walk-d-at-g
#| show_hints: true
1. $d^2 = 1000^2 + (1000 g_\text{path})^2$
1. $d^2 = 1000^2 + (1000/g_\text{path})^2$ [correct]
1. $d = 1000/g_\text{path}$
1. $d^2 = 1000^2 - (1000/g_\text{path})^2$
```


In other words, $d$ is a function of $g_\text{path}$, that is $d(g_\text{path})$. Substitute the formula for this function into @eq-energy-uphill to get an expression for $E(g_\text{path})$. 

```{webr-r}
# Graph the function E(g) to find the argmin in g
```

Graph the function $E(g_\text{path})$ over an appropriate domain to determine if there is a minimum and, if there is, the corresponding argmin. This is the answer we sought: the grade that makes getting uphill as energy-efficient as possible.

One way to help people visualize your recommended grade ... Pick a few real-world examples of paths, both steep and shallow. For example, there's the Manitou incline near Colorado Springs as an example of a steep hike. Heartbreak Hill in the Boston Marathon has earned its name. Another example, pick a couple of streets in San Francisco, perhaps one with a cable-car running along it. Paste the URLs of the images that you like into the answer box.

`r devoirs_text("slopes-urls")`

@fig-map-to-draw-on shows an imagined hill with contours drawn at intervals of 10. All units, horizontal and vertical, are in meters.
Draw a path from the starting mark to the top of the hill that is at the optimal grade for walking. (You don't need to have an exact answer, just a reasonable approximation.) A good way to proceed is to draw a short, straight segment from the starting point on one contour to the appropriate place at the next contour. 

::: {#fig-map-to-draw-on}
```{r echo=FALSE}
#| warning: false
tmp <- doodle_fun(~ x + y, seed = 1388)
elevation <- makeFun(7000 - 25*tmp(x, y) ~ x + y)
contour_plot(elevation(x/100, y/100) ~ x + y,
           domain(x = -300 : 400, y = -500 : 125),
           contours_at = seq(6950, 7270, by=20), skip = 1,
           filled = FALSE) |>
  gf_point(-375 ~ -220, color = "red") |>
  gf_point( -130 ~ 90, color = "red") |>
  gf_text(-400 ~ -200, label="start", color = "red") |>
  gf_segment(120+70 ~ -250 + -250, color="dodgerblue") |>
  gf_text(90 ~ -220, label = ~ "50m", color="dodgerblue") |>
  gf_segment(50 + 20 ~ -250 + -250, color = "magenta") |>
  gf_text(35 ~ -220, label = ~ "30m", color = "magenta") |>
  gf_refine(coord_fixed()) |> 
  gf_theme(ggplot2::theme_minimal())
```

The terrain on which to draw paths between the start and the point at the top of the hill. 
:::

  

